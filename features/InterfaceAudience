[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "process",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RootDoc process(RootDoc root)\n{\r\n    return (RootDoc) process(root, RootDoc.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "process",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "Object process(Object obj, Class<?> type)\n{\r\n    if (obj == null) {\r\n        return null;\r\n    }\r\n    Class<?> cls = obj.getClass();\r\n    if (cls.getName().startsWith(\"com.sun.\")) {\r\n        return getProxy(obj);\r\n    } else if (obj instanceof Object[]) {\r\n        Class<?> componentType = type.isArray() ? type.getComponentType() : cls.getComponentType();\r\n        Object[] array = (Object[]) obj;\r\n        Object[] newArray = (Object[]) Array.newInstance(componentType, array.length);\r\n        for (int i = 0; i < array.length; ++i) {\r\n            newArray[i] = process(array[i], componentType);\r\n        }\r\n        return newArray;\r\n    }\r\n    return obj;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "getProxy",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Object getProxy(Object obj)\n{\r\n    Object proxy = proxies.get(obj);\r\n    if (proxy == null) {\r\n        proxy = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), new ExcludeHandler(obj));\r\n        proxies.put(obj, proxy);\r\n    }\r\n    return proxy;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "languageVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LanguageVersion languageVersion()\n{\r\n    return LanguageVersion.JAVA_1_5;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "start",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean start(RootDoc root)\n{\r\n    System.out.println(IncludePublicAnnotationsJDiffDoclet.class.getSimpleName());\r\n    RootDocProcessor.treatUnannotatedClassesAsPrivate = true;\r\n    return JDiff.start(RootDocProcessor.process(root));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "optionLength",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int optionLength(String option)\n{\r\n    Integer length = StabilityOptions.optionLength(option);\r\n    if (length != null) {\r\n        return length;\r\n    }\r\n    return JDiff.optionLength(option);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "validOptions",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean validOptions(String[][] options, DocErrorReporter reporter)\n{\r\n    StabilityOptions.validOptions(options, reporter);\r\n    String[][] filteredOptions = StabilityOptions.filterOptions(options);\r\n    return JDiff.validOptions(filteredOptions, reporter);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "optionLength",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Integer optionLength(String option)\n{\r\n    String opt = option.toLowerCase(Locale.ENGLISH);\r\n    if (opt.equals(UNSTABLE_OPTION))\r\n        return 1;\r\n    if (opt.equals(EVOLVING_OPTION))\r\n        return 1;\r\n    if (opt.equals(STABLE_OPTION))\r\n        return 1;\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "validOptions",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void validOptions(String[][] options, DocErrorReporter reporter)\n{\r\n    for (int i = 0; i < options.length; i++) {\r\n        String opt = options[i][0].toLowerCase(Locale.ENGLISH);\r\n        if (opt.equals(UNSTABLE_OPTION)) {\r\n            RootDocProcessor.stability = UNSTABLE_OPTION;\r\n        } else if (opt.equals(EVOLVING_OPTION)) {\r\n            RootDocProcessor.stability = EVOLVING_OPTION;\r\n        } else if (opt.equals(STABLE_OPTION)) {\r\n            RootDocProcessor.stability = STABLE_OPTION;\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "filterOptions",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "String[][] filterOptions(String[][] options)\n{\r\n    List<String[]> optionsList = new ArrayList<String[]>();\r\n    for (int i = 0; i < options.length; i++) {\r\n        if (!options[i][0].equalsIgnoreCase(UNSTABLE_OPTION) && !options[i][0].equalsIgnoreCase(EVOLVING_OPTION) && !options[i][0].equalsIgnoreCase(STABLE_OPTION)) {\r\n            optionsList.add(options[i]);\r\n        }\r\n    }\r\n    String[][] filteredOptions = new String[optionsList.size()][];\r\n    int i = 0;\r\n    for (String[] option : optionsList) {\r\n        filteredOptions[i++] = option;\r\n    }\r\n    return filteredOptions;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "languageVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LanguageVersion languageVersion()\n{\r\n    return LanguageVersion.JAVA_1_5;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "start",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean start(RootDoc root)\n{\r\n    System.out.println(ExcludePrivateAnnotationsJDiffDoclet.class.getSimpleName());\r\n    return JDiff.start(RootDocProcessor.process(root));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "optionLength",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int optionLength(String option)\n{\r\n    Integer length = StabilityOptions.optionLength(option);\r\n    if (length != null) {\r\n        return length;\r\n    }\r\n    return JDiff.optionLength(option);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "validOptions",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean validOptions(String[][] options, DocErrorReporter reporter)\n{\r\n    StabilityOptions.validOptions(options, reporter);\r\n    String[][] filteredOptions = StabilityOptions.filterOptions(options);\r\n    return JDiff.validOptions(filteredOptions, reporter);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "languageVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LanguageVersion languageVersion()\n{\r\n    return LanguageVersion.JAVA_1_5;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "start",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean start(RootDoc root)\n{\r\n    System.out.println(IncludePublicAnnotationsStandardDoclet.class.getSimpleName());\r\n    RootDocProcessor.treatUnannotatedClassesAsPrivate = true;\r\n    return Standard.start(RootDocProcessor.process(root));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "optionLength",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int optionLength(String option)\n{\r\n    Integer length = StabilityOptions.optionLength(option);\r\n    if (length != null) {\r\n        return length;\r\n    }\r\n    return Standard.optionLength(option);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "validOptions",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean validOptions(String[][] options, DocErrorReporter reporter)\n{\r\n    StabilityOptions.validOptions(options, reporter);\r\n    String[][] filteredOptions = StabilityOptions.filterOptions(options);\r\n    return Standard.validOptions(filteredOptions, reporter);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "languageVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LanguageVersion languageVersion()\n{\r\n    return LanguageVersion.JAVA_1_5;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "start",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "boolean start(RootDoc root)\n{\r\n    System.out.println(ExcludePrivateAnnotationsStandardDoclet.class.getSimpleName());\r\n    RootDoc excludedDoc = RootDocProcessor.process(root);\r\n    if (excludedDoc.specifiedPackages().length == 0) {\r\n        return true;\r\n    }\r\n    return Standard.start(excludedDoc);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "optionLength",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int optionLength(String option)\n{\r\n    Integer length = StabilityOptions.optionLength(option);\r\n    if (length != null) {\r\n        return length;\r\n    }\r\n    return Standard.optionLength(option);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-common-project\\hadoop-annotations\\src\\main\\java\\org\\apache\\hadoop\\classification\\tools",
  "methodName" : "validOptions",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean validOptions(String[][] options, DocErrorReporter reporter)\n{\r\n    StabilityOptions.validOptions(options, reporter);\r\n    String[][] filteredOptions = StabilityOptions.filterOptions(options);\r\n    return Standard.validOptions(filteredOptions, reporter);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
} ]