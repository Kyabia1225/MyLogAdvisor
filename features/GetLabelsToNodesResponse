[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetLabelsToNodesResponse newInstance(Map<String, Set<NodeId>> map)\n{\r\n    GetLabelsToNodesResponse response = Records.newRecord(GetLabelsToNodesResponse.class);\r\n    response.setLabelsToNodes(map);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLabelsToNodes(Map<String, Set<NodeId>> map)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Set<NodeId>> getLabelsToNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ResourceAllocationRequest newInstance(long startTime, long endTime, Resource capability)\n{\r\n    ResourceAllocationRequest ra = Records.newRecord(ResourceAllocationRequest.class);\r\n    ra.setEndTime(endTime);\r\n    ra.setStartTime(startTime);\r\n    ra.setCapability(capability);\r\n    return ra;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getStartTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(long startTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getEndTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getEndTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setEndTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEndTime(long endTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource newInstance(int memory, int vCores)\n{\r\n    return new LightWeightResource(memory, vCores);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource newInstance(long memory, int vCores)\n{\r\n    return new LightWeightResource(memory, vCores);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Resource newInstance(long memory, int vCores, Map<String, Long> others)\n{\r\n    if (others != null) {\r\n        return new LightWeightResource(memory, vCores, ResourceUtils.createResourceTypesArray(others));\r\n    } else {\r\n        return newInstance(memory, vCores);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "Resource newInstance(Resource resource)\n{\r\n    Resource ret;\r\n    int numberOfKnownResourceTypes = ResourceUtils.getNumberOfKnownResourceTypes();\r\n    if (numberOfKnownResourceTypes > 2) {\r\n        ret = new LightWeightResource(resource.getMemorySize(), resource.getVirtualCores(), resource.getResources());\r\n    } else {\r\n        ret = new LightWeightResource(resource.getMemorySize(), resource.getVirtualCores());\r\n    }\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "copy",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void copy(Resource source, Resource dest)\n{\r\n    for (ResourceInformation entry : source.getResources()) {\r\n        dest.setResourceInformation(entry.getName(), entry);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getMemory()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMemorySize",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getMemorySize()\n{\r\n    throw new NotImplementedException(\"This method is implemented by ResourcePBImpl\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMemory(int memory)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMemorySize",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMemorySize(long memory)\n{\r\n    throw new NotImplementedException(\"This method is implemented by ResourcePBImpl\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getVirtualCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getVirtualCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setVirtualCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVirtualCores(int vCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceInformation[] getResources()\n{\r\n    return resources;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllResourcesListCopy",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "List<ResourceInformation> getAllResourcesListCopy()\n{\r\n    List<ResourceInformation> list = new ArrayList<>();\r\n    for (ResourceInformation i : resources) {\r\n        ResourceInformation ri = new ResourceInformation();\r\n        ResourceInformation.copy(i, ri);\r\n        list.add(ri);\r\n    }\r\n    return list;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceInformation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation getResourceInformation(String resource)\n{\r\n    Integer index = ResourceUtils.getResourceTypeIndex().get(resource);\r\n    if (index != null) {\r\n        return resources[index];\r\n    }\r\n    throw new ResourceNotFoundException(this, resource);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceInformation",
  "errType" : [ "ArrayIndexOutOfBoundsException" ],
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation getResourceInformation(int index) throws ResourceNotFoundException\n{\r\n    ResourceInformation ri = null;\r\n    try {\r\n        ri = resources[index];\r\n    } catch (ArrayIndexOutOfBoundsException e) {\r\n        throwExceptionWhenArrayOutOfBound(index);\r\n    }\r\n    return ri;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceValue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getResourceValue(String resource)\n{\r\n    return getResourceInformation(resource).getValue();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceInformation",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void setResourceInformation(String resource, ResourceInformation resourceInformation)\n{\r\n    if (resource.equals(ResourceInformation.MEMORY_URI)) {\r\n        this.setMemorySize(resourceInformation.getValue());\r\n        return;\r\n    }\r\n    if (resource.equals(ResourceInformation.VCORES_URI)) {\r\n        this.setVirtualCores((int) resourceInformation.getValue());\r\n        return;\r\n    }\r\n    ResourceInformation storedResourceInfo = getResourceInformation(resource);\r\n    ResourceInformation.copy(resourceInformation, storedResourceInfo);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceInformation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setResourceInformation(int index, ResourceInformation resourceInformation) throws ResourceNotFoundException\n{\r\n    if (index < 0 || index >= resources.length) {\r\n        throwExceptionWhenArrayOutOfBound(index);\r\n    }\r\n    ResourceInformation.copy(resourceInformation, resources[index]);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceValue",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void setResourceValue(String resource, long value)\n{\r\n    if (resource.equals(ResourceInformation.MEMORY_URI)) {\r\n        this.setMemorySize(value);\r\n        return;\r\n    }\r\n    if (resource.equals(ResourceInformation.VCORES_URI)) {\r\n        if (value > Integer.MAX_VALUE) {\r\n            value = (long) Integer.MAX_VALUE;\r\n        }\r\n        this.setVirtualCores((int) value);\r\n        return;\r\n    }\r\n    ResourceInformation storedResourceInfo = getResourceInformation(resource);\r\n    storedResourceInfo.setValue(value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceValue",
  "errType" : [ "ArrayIndexOutOfBoundsException" ],
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setResourceValue(int index, long value) throws ResourceNotFoundException\n{\r\n    try {\r\n        resources[index].setValue(value);\r\n    } catch (ArrayIndexOutOfBoundsException e) {\r\n        throwExceptionWhenArrayOutOfBound(index);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "throwExceptionWhenArrayOutOfBound",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void throwExceptionWhenArrayOutOfBound(int index)\n{\r\n    String exceptionMsg = String.format(\"Trying to access ResourceInformation for given index=%d. \" + \"Acceptable index range is [0,%d), please double check \" + \"configured resources in resource-types.xml\", index, ResourceUtils.getNumberOfKnownResourceTypes());\r\n    throw new ResourceNotFoundException(exceptionMsg);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof Resource)) {\r\n        return false;\r\n    }\r\n    Resource other = (Resource) obj;\r\n    ResourceInformation[] otherVectors = other.getResources();\r\n    if (resources.length != otherVectors.length) {\r\n        return false;\r\n    }\r\n    for (int i = 0; i < resources.length; i++) {\r\n        ResourceInformation a = resources[i];\r\n        ResourceInformation b = otherVectors[i];\r\n        if ((a != b) && ((a == null) || !a.equals(b))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : [ "ArrayIndexOutOfBoundsException" ],
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int compareTo(Resource other)\n{\r\n    ResourceInformation[] otherResources = other.getResources();\r\n    int arrLenThis = this.resources.length;\r\n    int arrLenOther = otherResources.length;\r\n    for (int i = 0; i < arrLenThis; i++) {\r\n        ResourceInformation otherEntry;\r\n        try {\r\n            otherEntry = otherResources[i];\r\n        } catch (ArrayIndexOutOfBoundsException e) {\r\n            return 1;\r\n        }\r\n        ResourceInformation entry = resources[i];\r\n        long diff = entry.compareTo(otherEntry);\r\n        if (diff > 0) {\r\n            return 1;\r\n        } else if (diff < 0) {\r\n            return -1;\r\n        }\r\n    }\r\n    if (arrLenThis < arrLenOther) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return getFormattedString(String.valueOf(getMemorySize()));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFormattedString",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "String getFormattedString(String memory)\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"<memory:\").append(memory).append(\", vCores:\").append(getVirtualCores());\r\n    for (int i = 2; i < resources.length; i++) {\r\n        ResourceInformation ri = resources[i];\r\n        if (ri.getValue() == 0) {\r\n            continue;\r\n        }\r\n        sb.append(\", \").append(ri.getName()).append(\": \").append(ri.getValue()).append(ri.getUnits());\r\n    }\r\n    sb.append(\">\");\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFormattedString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getFormattedString()\n{\r\n    return getFormattedString(StringUtils.byteDesc(getMemorySize() * 1024 * 1024));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 47;\r\n    int result = 0;\r\n    for (ResourceInformation entry : resources) {\r\n        result = prime * result + entry.hashCode();\r\n    }\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "castToIntSafely",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int castToIntSafely(long value)\n{\r\n    if (value > Integer.MAX_VALUE) {\r\n        return Integer.MAX_VALUE;\r\n    }\r\n    return Long.valueOf(value).intValue();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newDefaultInformation",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ResourceInformation newDefaultInformation(String name, String unit, long value)\n{\r\n    ResourceInformation ri = new ResourceInformation();\r\n    ri.setName(name);\r\n    ri.setValue(value);\r\n    ri.setResourceType(ResourceTypes.COUNTABLE);\r\n    ri.setUnitsWithoutValidation(unit);\r\n    ri.setMinimumAllocation(0);\r\n    ri.setMaximumAllocation(Long.MAX_VALUE);\r\n    return ri;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetDelegationTokenRequest newInstance(String renewer)\n{\r\n    GetDelegationTokenRequest request = Records.newRecord(GetDelegationTokenRequest.class);\r\n    request.setRenewer(renewer);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getRenewer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRenewer()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setRenewer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRenewer(String renewer)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsResponse newInstance(List<ApplicationReport> applications)\n{\r\n    GetApplicationsResponse response = Records.newRecord(GetApplicationsResponse.class);\r\n    response.setApplicationList(applications);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsResponse newInstance(Collection<ApplicationReport> applications)\n{\r\n    GetApplicationsResponse response = Records.newRecord(GetApplicationsResponse.class);\r\n    response.setApplicationList(new ArrayList<>(applications));\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ApplicationReport> getApplicationList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationList(List<ApplicationReport> applications)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "mapCastToHashMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<E, V> mapCastToHashMap(Map<E, V> originalMap)\n{\r\n    return originalMap == null ? null : originalMap instanceof HashMap ? (HashMap<E, V>) originalMap : new HashMap<E, V>(originalMap);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "invertLong",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long invertLong(long key)\n{\r\n    return Long.MAX_VALUE - key;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ApplicationId newInstance(long clusterTimestamp, int id)\n{\r\n    ApplicationId appId = Records.newRecord(ApplicationId.class);\r\n    appId.setClusterTimestamp(clusterTimestamp);\r\n    appId.setId(id);\r\n    appId.build();\r\n    return appId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(int id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getClusterTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getClusterTimestamp()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setClusterTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClusterTimestamp(long clusterTimestamp)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "int compareTo(ApplicationId other)\n{\r\n    if (this.getClusterTimestamp() - other.getClusterTimestamp() == 0) {\r\n        return this.getId() - other.getId();\r\n    } else {\r\n        return this.getClusterTimestamp() > other.getClusterTimestamp() ? 1 : this.getClusterTimestamp() < other.getClusterTimestamp() ? -1 : 0;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder(64);\r\n    sb.append(APPLICATION_ID_PREFIX).append(getClusterTimestamp()).append('_');\r\n    FastNumberFormat.format(sb, getId(), APP_ID_MIN_DIGITS);\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromString",
  "errType" : [ "NumberFormatException" ],
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ApplicationId fromString(String appIdStr)\n{\r\n    if (!appIdStr.startsWith(APPLICATION_ID_PREFIX)) {\r\n        throw new IllegalArgumentException(\"Invalid ApplicationId prefix: \" + appIdStr + \". The valid ApplicationId should start with prefix \" + appIdStrPrefix);\r\n    }\r\n    try {\r\n        int pos1 = APPLICATION_ID_PREFIX.length() - 1;\r\n        int pos2 = appIdStr.indexOf('_', pos1 + 1);\r\n        if (pos2 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid ApplicationId: \" + appIdStr);\r\n        }\r\n        long rmId = Long.parseLong(appIdStr.substring(pos1 + 1, pos2));\r\n        int appId = Integer.parseInt(appIdStr.substring(pos2 + 1));\r\n        ApplicationId applicationId = ApplicationId.newInstance(rmId, appId);\r\n        return applicationId;\r\n    } catch (NumberFormatException n) {\r\n        throw new IllegalArgumentException(\"Invalid ApplicationId: \" + appIdStr, n);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 371237;\r\n    int result = 6521;\r\n    long clusterTimestamp = getClusterTimestamp();\r\n    result = prime * result + (int) (clusterTimestamp ^ (clusterTimestamp >>> 32));\r\n    result = prime * result + getId();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ApplicationId other = (ApplicationId) obj;\r\n    if (this.getClusterTimestamp() != other.getClusterTimestamp())\r\n        return false;\r\n    if (this.getId() != other.getId())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceTypeInfoRequest newInstance()\n{\r\n    return Records.newRecord(GetAllResourceTypeInfoRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CheckForDecommissioningNodesRequest newInstance()\n{\r\n    CheckForDecommissioningNodesRequest request = Records.newRecord(CheckForDecommissioningNodesRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newContainerId",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ContainerId newContainerId(ApplicationAttemptId appAttemptId, long containerId)\n{\r\n    ContainerId id = Records.newRecord(ContainerId.class);\r\n    id.setContainerId(containerId);\r\n    id.setApplicationAttemptId(appAttemptId);\r\n    id.build();\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ContainerId newInstance(ApplicationAttemptId appAttemptId, int containerId)\n{\r\n    ContainerId id = Records.newRecord(ContainerId.class);\r\n    id.setContainerId(containerId);\r\n    id.setApplicationAttemptId(appAttemptId);\r\n    id.build();\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptId(ApplicationAttemptId atId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(long id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = (int) (getContainerId() ^ (getContainerId() >>> 32));\r\n    result = 31 * result + getApplicationAttemptId().hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ContainerId other = (ContainerId) obj;\r\n    if (!this.getApplicationAttemptId().equals(other.getApplicationAttemptId()))\r\n        return false;\r\n    if (this.getContainerId() != other.getContainerId())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int compareTo(ContainerId other)\n{\r\n    int result = this.getApplicationAttemptId().compareTo(other.getApplicationAttemptId());\r\n    if (result == 0) {\r\n        return Long.compare(getContainerId(), other.getContainerId());\r\n    } else {\r\n        return result;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder(64);\r\n    sb.append(CONTAINER_PREFIX);\r\n    long epoch = getContainerId() >> 40;\r\n    if (epoch > 0) {\r\n        sb.append(EPOCH_PREFIX);\r\n        FastNumberFormat.format(sb, epoch, EPOCH_MIN_DIGITS);\r\n        sb.append('_');\r\n    }\r\n    ApplicationId appId = getApplicationAttemptId().getApplicationId();\r\n    sb.append(appId.getClusterTimestamp()).append('_');\r\n    FastNumberFormat.format(sb, appId.getId(), APP_ID_MIN_DIGITS);\r\n    sb.append('_');\r\n    FastNumberFormat.format(sb, getApplicationAttemptId().getAttemptId(), ATTEMPT_ID_MIN_DIGITS);\r\n    sb.append('_');\r\n    FastNumberFormat.format(sb, CONTAINER_ID_BITMASK & getContainerId(), CONTAINER_ID_MIN_DIGITS);\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromString",
  "errType" : [ "NumberFormatException" ],
  "containingMethodsNum" : 16,
  "sourceCodeText" : "ContainerId fromString(String containerIdStr)\n{\r\n    if (!containerIdStr.startsWith(CONTAINER_PREFIX)) {\r\n        throw new IllegalArgumentException(\"Invalid ContainerId prefix: \" + containerIdStr);\r\n    }\r\n    try {\r\n        int pos1 = CONTAINER_PREFIX.length() - 1;\r\n        long epoch = 0;\r\n        if (containerIdStr.regionMatches(pos1 + 1, EPOCH_PREFIX, 0, EPOCH_PREFIX.length())) {\r\n            int pos2 = containerIdStr.indexOf('_', pos1 + 1);\r\n            if (pos2 < 0) {\r\n                throw new IllegalArgumentException(\"Invalid ContainerId: \" + containerIdStr);\r\n            }\r\n            String epochStr = containerIdStr.substring(pos1 + 1 + EPOCH_PREFIX.length(), pos2);\r\n            epoch = Integer.parseInt(epochStr);\r\n            pos1 = pos2;\r\n        }\r\n        int pos2 = containerIdStr.indexOf('_', pos1 + 1);\r\n        if (pos2 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid ContainerId: \" + containerIdStr);\r\n        }\r\n        long clusterTimestamp = Long.parseLong(containerIdStr.substring(pos1 + 1, pos2));\r\n        int pos3 = containerIdStr.indexOf('_', pos2 + 1);\r\n        if (pos3 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid ContainerId: \" + containerIdStr);\r\n        }\r\n        int appId = Integer.parseInt(containerIdStr.substring(pos2 + 1, pos3));\r\n        ApplicationId applicationId = ApplicationId.newInstance(clusterTimestamp, appId);\r\n        int pos4 = containerIdStr.indexOf('_', pos3 + 1);\r\n        if (pos4 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid ContainerId: \" + containerIdStr);\r\n        }\r\n        int attemptId = Integer.parseInt(containerIdStr.substring(pos3 + 1, pos4));\r\n        ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(applicationId, attemptId);\r\n        long id = Long.parseLong(containerIdStr.substring(pos4 + 1));\r\n        long cid = (epoch << 40) | id;\r\n        ContainerId containerId = ContainerId.newContainerId(appAttemptId, cid);\r\n        return containerId;\r\n    } catch (NumberFormatException n) {\r\n        throw new IllegalArgumentException(\"Invalid ContainerId: \" + containerIdStr, n);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationUpdateResponse newInstance()\n{\r\n    ReservationUpdateResponse response = Records.newRecord(ReservationUpdateResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "FinishApplicationMasterResponse newInstance(boolean isRemovedFromRMStateStore)\n{\r\n    FinishApplicationMasterResponse response = Records.newRecord(FinishApplicationMasterResponse.class);\r\n    response.setIsUnregistered(isRemovedFromRMStateStore);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getIsUnregistered",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getIsUnregistered()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setIsUnregistered",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIsUnregistered(boolean isUnregistered)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "ApplicationResourceUsageReport newInstance(int numUsedContainers, int numReservedContainers, Resource usedResources, Resource reservedResources, Resource neededResources, Map<String, Long> resourceSecondsMap, float queueUsagePerc, float clusterUsagePerc, Map<String, Long> preemtedResourceSecondsMap)\n{\r\n    ApplicationResourceUsageReport report = Records.newRecord(ApplicationResourceUsageReport.class);\r\n    report.setNumUsedContainers(numUsedContainers);\r\n    report.setNumReservedContainers(numReservedContainers);\r\n    report.setUsedResources(usedResources);\r\n    report.setReservedResources(reservedResources);\r\n    report.setNeededResources(neededResources);\r\n    report.setResourceSecondsMap(resourceSecondsMap);\r\n    report.setQueueUsagePercentage(queueUsagePerc);\r\n    report.setClusterUsagePercentage(clusterUsagePerc);\r\n    report.setPreemptedResourceSecondsMap(preemtedResourceSecondsMap);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumUsedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumUsedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumUsedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumUsedContainers(int num_containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumReservedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumReservedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumReservedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumReservedContainers(int num_reserved_containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUsedResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getUsedResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUsedResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUsedResources(Resource resources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservedResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getReservedResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservedResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservedResources(Resource reserved_resources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNeededResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getNeededResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNeededResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNeededResources(Resource needed_resources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMemorySeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMemorySeconds(long memory_seconds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMemorySeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getMemorySeconds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setVcoreSeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVcoreSeconds(long vcore_seconds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getVcoreSeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getVcoreSeconds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueUsagePercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getQueueUsagePercentage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueUsagePercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueUsagePercentage(float queueUsagePerc)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getClusterUsagePercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getClusterUsagePercentage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setClusterUsagePercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClusterUsagePercentage(float clusterUsagePerc)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPreemptedMemorySeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPreemptedMemorySeconds(long memorySeconds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPreemptedMemorySeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getPreemptedMemorySeconds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPreemptedVcoreSeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPreemptedVcoreSeconds(long vcoreSeconds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPreemptedVcoreSeconds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getPreemptedVcoreSeconds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceSecondsMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Long> getResourceSecondsMap()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceSecondsMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceSecondsMap(Map<String, Long> resourceSecondsMap)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPreemptedResourceSecondsMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Long> getPreemptedResourceSecondsMap()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPreemptedResourceSecondsMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPreemptedResourceSecondsMap(Map<String, Long> preemptedResourceSecondsMap)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CancelDelegationTokenResponse newInstance()\n{\r\n    CancelDelegationTokenResponse response = Records.newRecord(CancelDelegationTokenResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeUnpublishVolumeRequest newInstance(String volumeId, String targetPath)\n{\r\n    NodeUnpublishVolumeRequest request = Records.newRecord(NodeUnpublishVolumeRequest.class);\r\n    request.setVolumeId(volumeId);\r\n    request.setTargetPath(targetPath);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVolumeId(String volumeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTargetPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTargetPath(String targetPath)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getVolumeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTargetPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTargetPath()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "isSubApplicationEntity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isSubApplicationEntity(TimelineEntity te)\n{\r\n    return (te != null && te instanceof SubApplicationEntity);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setApplicationId(String appId)\n{\r\n    addInfo(YARN_APPLICATION_ID, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshServiceAclsResponse newInstance()\n{\r\n    RefreshServiceAclsResponse response = Records.newRecord(RefreshServiceAclsResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getTimestamp()\n{\r\n    return timestamp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimestamp(long timestamp)\n{\r\n    this.timestamp = timestamp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEventType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getEventType()\n{\r\n    return eventType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEventType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEventType(String eventType)\n{\r\n    this.eventType = eventType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEventInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Object> getEventInfo()\n{\r\n    return eventInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEventInfoJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<String, Object> getEventInfoJAXB()\n{\r\n    return eventInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEventInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEventInfo(String key, Object value)\n{\r\n    this.eventInfo.put(key, value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEventInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEventInfo(Map<String, Object> eventInfo)\n{\r\n    this.eventInfo.putAll(eventInfo);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEventInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setEventInfo(Map<String, Object> eventInfo)\n{\r\n    this.eventInfo = TimelineServiceHelper.mapCastToHashMap(eventInfo);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int compareTo(TimelineEvent other)\n{\r\n    if (timestamp > other.timestamp) {\r\n        return -1;\r\n    } else if (timestamp < other.timestamp) {\r\n        return 1;\r\n    } else {\r\n        return eventType.compareTo(other.eventType);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "boolean equals(Object o)\n{\r\n    if (this == o)\r\n        return true;\r\n    if (o == null || getClass() != o.getClass())\r\n        return false;\r\n    TimelineEvent event = (TimelineEvent) o;\r\n    if (timestamp != event.timestamp)\r\n        return false;\r\n    if (!eventType.equals(event.eventType))\r\n        return false;\r\n    if (eventInfo != null ? !eventInfo.equals(event.eventInfo) : event.eventInfo != null)\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = (int) (timestamp ^ (timestamp >>> 32));\r\n    result = 31 * result + eventType.hashCode();\r\n    result = 31 * result + (eventInfo != null ? eventInfo.hashCode() : 0);\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUser()\n{\r\n    return user;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()\n{\r\n    return containerId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResource()\n{\r\n    return resource;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getContainerType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerType getContainerType()\n{\r\n    return containerType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()\n{\r\n    return executionType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReInitializeContainerResponse newInstance()\n{\r\n    return Records.newRecord(ReInitializeContainerResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RestartContainerResponse newInstance()\n{\r\n    return Records.newRecord(RestartContainerResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "QueueConfigurations newInstance(float capacity, float absoluteCapacity, float maxCapacity, float absoluteMaxCapacity, float maxAMPercentage)\n{\r\n    QueueConfigurations queueConfigurations = Records.newRecord(QueueConfigurations.class);\r\n    queueConfigurations.setCapacity(capacity);\r\n    queueConfigurations.setAbsoluteCapacity(absoluteCapacity);\r\n    queueConfigurations.setMaxCapacity(maxCapacity);\r\n    queueConfigurations.setAbsoluteMaxCapacity(absoluteMaxCapacity);\r\n    queueConfigurations.setMaxAMPercentage(maxAMPercentage);\r\n    return queueConfigurations;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapacity(float capacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAbsoluteCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getAbsoluteCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAbsoluteCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAbsoluteCapacity(float absoluteCapacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getMaxCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaxCapacity(float maxCapacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAbsoluteMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getAbsoluteMaxCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAbsoluteMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAbsoluteMaxCapacity(float absoluteMaxCapacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaxAMPercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getMaxAMPercentage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaxAMPercentage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaxAMPercentage(float maxAMPercentage)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getEffectiveMinCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getEffectiveMinCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setEffectiveMinCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEffectiveMinCapacity(Resource capacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getEffectiveMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getEffectiveMaxCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setEffectiveMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEffectiveMaxCapacity(Resource capacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getConfiguredMinCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getConfiguredMinCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setConfiguredMinCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setConfiguredMinCapacity(Resource configuredMinResource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getConfiguredMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getConfiguredMaxCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setConfiguredMaxCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setConfiguredMaxCapacity(Resource configuredMaxResource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodeAttributesRequest newInstance()\n{\r\n    return Records.newRecord(GetClusterNodeAttributesRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "YarnClusterMetrics newInstance(int numNodeManagers)\n{\r\n    YarnClusterMetrics metrics = Records.newRecord(YarnClusterMetrics.class);\r\n    metrics.setNumNodeManagers(numNodeManagers);\r\n    return metrics;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumNodeManagers(int numNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumDecommissionedNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumDecommissionedNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumDecommissionedNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumDecommissionedNodeManagers(int numDecommissionedNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumActiveNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumActiveNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumActiveNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumActiveNodeManagers(int numActiveNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumLostNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumLostNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumLostNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumLostNodeManagers(int numLostNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumUnhealthyNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumUnhealthyNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumUnhealthyNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumUnhealthyNodeManagers(int numUnhealthNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumRebootedNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumRebootedNodeManagers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumRebootedNodeManagers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumRebootedNodeManagers(int numRebootedNodeManagers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getId()\n{\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(String id)\n{\r\n    this.id = id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getDescription",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDescription()\n{\r\n    return description;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setDescription",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDescription(String description)\n{\r\n    this.description = description;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getOwner",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getOwner()\n{\r\n    return owner;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setOwner",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOwner(String owner)\n{\r\n    this.owner = owner;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getReaders",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getReaders()\n{\r\n    return readers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setReaders",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReaders(String readers)\n{\r\n    this.readers = readers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getWriters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getWriters()\n{\r\n    return writers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setWriters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWriters(String writers)\n{\r\n    this.writers = writers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Long getCreatedTime()\n{\r\n    return createdTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCreatedTime(Long createdTime)\n{\r\n    this.createdTime = createdTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getModifiedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Long getModifiedTime()\n{\r\n    return modifiedTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setModifiedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setModifiedTime(Long modifiedTime)\n{\r\n    this.modifiedTime = modifiedTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ReservationUpdateRequest newInstance(ReservationDefinition reservationDefinition, ReservationId reservationId)\n{\r\n    ReservationUpdateRequest request = Records.newRecord(ReservationUpdateRequest.class);\r\n    request.setReservationDefinition(reservationDefinition);\r\n    request.setReservationId(reservationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationDefinition getReservationDefinition()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationDefinition(ReservationDefinition reservationDefinition)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(ReservationId reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEntities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelineEntity> getEntities()\n{\r\n    return entities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEntity",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEntity(TimelineEntity entity)\n{\r\n    entities.add(entity);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEntities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEntities(List<TimelineEntity> entities)\n{\r\n    this.entities.addAll(entities);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEntities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEntities(List<TimelineEntity> entities)\n{\r\n    this.entities = entities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshClusterMaxPriorityRequest newInstance()\n{\r\n    RefreshClusterMaxPriorityRequest request = Records.newRecord(RefreshClusterMaxPriorityRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNodesToLabelsRequest newInstance()\n{\r\n    return Records.newRecord(GetNodesToLabelsRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ResourceBlacklistRequest newInstance(List<String> additions, List<String> removals)\n{\r\n    ResourceBlacklistRequest blacklistRequest = Records.newRecord(ResourceBlacklistRequest.class);\r\n    blacklistRequest.setBlacklistAdditions(additions);\r\n    blacklistRequest.setBlacklistRemovals(removals);\r\n    return blacklistRequest;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getBlacklistAdditions",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<String> getBlacklistAdditions()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setBlacklistAdditions",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setBlacklistAdditions(List<String> resourceNames)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getBlacklistRemovals",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<String> getBlacklistRemovals()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setBlacklistRemovals",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setBlacklistRemovals(List<String> resourceNames)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getType",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getType()\n{\r\n    if (real == null) {\r\n        return identifier.type;\r\n    } else {\r\n        return real.getType();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setType",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setType(String type)\n{\r\n    if (real == null) {\r\n        identifier.type = type;\r\n    } else {\r\n        real.setType(type);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getId()\n{\r\n    if (real == null) {\r\n        return identifier.id;\r\n    } else {\r\n        return real.getId();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setId(String id)\n{\r\n    if (real == null) {\r\n        identifier.id = id;\r\n    } else {\r\n        real.setId(id);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getIdentifier",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Identifier getIdentifier()\n{\r\n    if (real == null) {\r\n        return identifier;\r\n    } else {\r\n        return real.getIdentifier();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setIdentifier",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setIdentifier(Identifier entityIdentifier)\n{\r\n    if (real == null) {\r\n        this.identifier = entityIdentifier;\r\n    } else {\r\n        real.setIdentifier(entityIdentifier);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getInfoJAXB",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "HashMap<String, Object> getInfoJAXB()\n{\r\n    if (real == null) {\r\n        return info;\r\n    } else {\r\n        return real.getInfoJAXB();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, Object> getInfo()\n{\r\n    if (real == null) {\r\n        return info;\r\n    } else {\r\n        return real.getInfo();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setInfo(Map<String, Object> entityInfos)\n{\r\n    if (real == null) {\r\n        this.info = TimelineServiceHelper.mapCastToHashMap(entityInfos);\r\n    } else {\r\n        real.setInfo(entityInfos);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addInfo(Map<String, Object> entityInfos)\n{\r\n    if (real == null) {\r\n        this.info.putAll(entityInfos);\r\n    } else {\r\n        real.addInfo(entityInfos);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addInfo(String key, Object value)\n{\r\n    if (real == null) {\r\n        info.put(key, value);\r\n    } else {\r\n        real.addInfo(key, value);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getConfigsJAXB",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "HashMap<String, String> getConfigsJAXB()\n{\r\n    if (real == null) {\r\n        return configs;\r\n    } else {\r\n        return real.getConfigsJAXB();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getConfigs",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, String> getConfigs()\n{\r\n    if (real == null) {\r\n        return configs;\r\n    } else {\r\n        return real.getConfigs();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setConfigs",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setConfigs(Map<String, String> entityConfigs)\n{\r\n    if (real == null) {\r\n        this.configs = TimelineServiceHelper.mapCastToHashMap(entityConfigs);\r\n    } else {\r\n        real.setConfigs(entityConfigs);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addConfigs",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addConfigs(Map<String, String> entityConfigs)\n{\r\n    if (real == null) {\r\n        this.configs.putAll(entityConfigs);\r\n    } else {\r\n        real.addConfigs(entityConfigs);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addConfig",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addConfig(String key, String value)\n{\r\n    if (real == null) {\r\n        configs.put(key, value);\r\n    } else {\r\n        real.addConfig(key, value);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getMetrics",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Set<TimelineMetric> getMetrics()\n{\r\n    if (real == null) {\r\n        return metrics;\r\n    } else {\r\n        return real.getMetrics();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setMetrics",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setMetrics(Set<TimelineMetric> entityMetrics)\n{\r\n    if (real == null) {\r\n        this.metrics = entityMetrics;\r\n    } else {\r\n        real.setMetrics(entityMetrics);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addMetrics",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addMetrics(Set<TimelineMetric> entityMetrics)\n{\r\n    if (real == null) {\r\n        this.metrics.addAll(entityMetrics);\r\n    } else {\r\n        real.addMetrics(entityMetrics);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addMetric",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addMetric(TimelineMetric metric)\n{\r\n    if (real == null) {\r\n        metrics.add(metric);\r\n    } else {\r\n        real.addMetric(metric);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getEvents",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NavigableSet<TimelineEvent> getEvents()\n{\r\n    if (real == null) {\r\n        return events;\r\n    } else {\r\n        return real.getEvents();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setEvents",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setEvents(NavigableSet<TimelineEvent> entityEvents)\n{\r\n    if (real == null) {\r\n        this.events = entityEvents;\r\n    } else {\r\n        real.setEvents(entityEvents);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addEvents",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addEvents(Set<TimelineEvent> entityEvents)\n{\r\n    if (real == null) {\r\n        this.events.addAll(entityEvents);\r\n    } else {\r\n        real.addEvents(entityEvents);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addEvent",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addEvent(TimelineEvent event)\n{\r\n    if (real == null) {\r\n        events.add(event);\r\n    } else {\r\n        real.addEvent(event);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getIsRelatedToEntities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, Set<String>> getIsRelatedToEntities()\n{\r\n    if (real == null) {\r\n        return isRelatedToEntities;\r\n    } else {\r\n        return real.getIsRelatedToEntities();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getIsRelatedToEntitiesJAXB",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "HashMap<String, Set<String>> getIsRelatedToEntitiesJAXB()\n{\r\n    if (real == null) {\r\n        return isRelatedToEntities;\r\n    } else {\r\n        return real.getIsRelatedToEntitiesJAXB();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setIsRelatedToEntities",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setIsRelatedToEntities(Map<String, Set<String>> isRelatedTo)\n{\r\n    if (real == null) {\r\n        this.isRelatedToEntities = TimelineServiceHelper.mapCastToHashMap(isRelatedTo);\r\n    } else {\r\n        real.setIsRelatedToEntities(isRelatedTo);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addIsRelatedToEntities",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void addIsRelatedToEntities(Map<String, Set<String>> isRelatedTo)\n{\r\n    if (real == null) {\r\n        for (Map.Entry<String, Set<String>> entry : isRelatedTo.entrySet()) {\r\n            Set<String> ids = this.isRelatedToEntities.get(entry.getKey());\r\n            if (ids == null) {\r\n                ids = new HashSet<>();\r\n                this.isRelatedToEntities.put(entry.getKey(), ids);\r\n            }\r\n            ids.addAll(entry.getValue());\r\n        }\r\n    } else {\r\n        real.addIsRelatedToEntities(isRelatedTo);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addIsRelatedToEntity",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addIsRelatedToEntity(String type, String id)\n{\r\n    if (real == null) {\r\n        Set<String> ids = isRelatedToEntities.get(type);\r\n        if (ids == null) {\r\n            ids = new HashSet<>();\r\n            isRelatedToEntities.put(type, ids);\r\n        }\r\n        ids.add(id);\r\n    } else {\r\n        real.addIsRelatedToEntity(type, id);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getRelatesToEntitiesJAXB",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "HashMap<String, Set<String>> getRelatesToEntitiesJAXB()\n{\r\n    if (real == null) {\r\n        return relatesToEntities;\r\n    } else {\r\n        return real.getRelatesToEntitiesJAXB();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getRelatesToEntities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, Set<String>> getRelatesToEntities()\n{\r\n    if (real == null) {\r\n        return relatesToEntities;\r\n    } else {\r\n        return real.getRelatesToEntities();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addRelatesToEntities",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void addRelatesToEntities(Map<String, Set<String>> relatesTo)\n{\r\n    if (real == null) {\r\n        for (Map.Entry<String, Set<String>> entry : relatesTo.entrySet()) {\r\n            Set<String> ids = this.relatesToEntities.get(entry.getKey());\r\n            if (ids == null) {\r\n                ids = new HashSet<>();\r\n                this.relatesToEntities.put(entry.getKey(), ids);\r\n            }\r\n            ids.addAll(entry.getValue());\r\n        }\r\n    } else {\r\n        real.addRelatesToEntities(relatesTo);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addRelatesToEntity",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addRelatesToEntity(String type, String id)\n{\r\n    if (real == null) {\r\n        Set<String> ids = relatesToEntities.get(type);\r\n        if (ids == null) {\r\n            ids = new HashSet<>();\r\n            relatesToEntities.put(type, ids);\r\n        }\r\n        ids.add(id);\r\n    } else {\r\n        real.addRelatesToEntity(type, id);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setRelatesToEntities",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setRelatesToEntities(Map<String, Set<String>> relatesTo)\n{\r\n    if (real == null) {\r\n        this.relatesToEntities = TimelineServiceHelper.mapCastToHashMap(relatesTo);\r\n    } else {\r\n        real.setRelatesToEntities(relatesTo);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Long getCreatedTime()\n{\r\n    if (real == null) {\r\n        return createdTime;\r\n    } else {\r\n        return real.getCreatedTime();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setCreatedTime(Long createdTs)\n{\r\n    if (real == null) {\r\n        this.createdTime = createdTs;\r\n    } else {\r\n        real.setCreatedTime(createdTs);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setUID",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setUID(String uidKey, String uId)\n{\r\n    if (real == null) {\r\n        info.put(uidKey, uId);\r\n    } else {\r\n        real.addInfo(uidKey, uId);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "isValid",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean isValid()\n{\r\n    return (getId() != null && getType() != null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return getIdentifier().hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (!(obj instanceof TimelineEntity)) {\r\n        return false;\r\n    }\r\n    TimelineEntity other = (TimelineEntity) obj;\r\n    return getIdentifier().equals(other.getIdentifier());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "int compareTo(TimelineEntity other)\n{\r\n    int comparison = getType().compareTo(other.getType());\r\n    if (comparison == 0) {\r\n        if (getIdPrefix() > other.getIdPrefix()) {\r\n            return -1;\r\n        } else if (getIdPrefix() < other.getIdPrefix()) {\r\n            return 1;\r\n        } else {\r\n            return getId().compareTo(other.getId());\r\n        }\r\n    } else {\r\n        return comparison;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getReal",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TimelineEntity getReal()\n{\r\n    return real == null ? this : real;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String toString()\n{\r\n    if (real == null) {\r\n        return identifier.toString();\r\n    } else {\r\n        return real.toString();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getIdPrefix",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getIdPrefix()\n{\r\n    if (real == null) {\r\n        return idPrefix;\r\n    } else {\r\n        return real.getIdPrefix();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setIdPrefix",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setIdPrefix(long entityIdPrefix)\n{\r\n    if (real == null) {\r\n        this.idPrefix = entityIdPrefix;\r\n    } else {\r\n        real.setIdPrefix(entityIdPrefix);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "AddToClusterNodeLabelsRequest newInstance(List<NodeLabel> nodeLabels)\n{\r\n    AddToClusterNodeLabelsRequest request = Records.newRecord(AddToClusterNodeLabelsRequest.class);\r\n    request.setNodeLabels(nodeLabels);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabels(List<NodeLabel> nodeLabels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeLabel> getNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ReInitializeContainerRequest newInstance(ContainerId containerId, ContainerLaunchContext containerLaunchContext, boolean autoCommit)\n{\r\n    ReInitializeContainerRequest record = Records.newRecord(ReInitializeContainerRequest.class);\r\n    record.setContainerId(containerId);\r\n    record.setContainerLaunchContext(containerLaunchContext);\r\n    record.setAutoCommit(autoCommit);\r\n    return record;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerLaunchContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerLaunchContext getContainerLaunchContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerLaunchContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerLaunchContext(ContainerLaunchContext containerLaunchContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAutoCommit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getAutoCommit()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAutoCommit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAutoCommit(boolean autoCommit)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "PreemptionMessage newInstance(StrictPreemptionContract set, PreemptionContract contract)\n{\r\n    PreemptionMessage message = Records.newRecord(PreemptionMessage.class);\r\n    message.setStrictContract(set);\r\n    message.setContract(contract);\r\n    return message;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getStrictContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "StrictPreemptionContract getStrictContract()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setStrictContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStrictContract(StrictPreemptionContract set)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "PreemptionContract getContract()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContract(PreemptionContract contract)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getAccepted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getAccepted()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setAccepted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAccepted(boolean b)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "NodeId newInstance(String host, int port)\n{\r\n    NodeId nodeId = Records.newRecord(NodeId.class);\r\n    nodeId.setHost(host);\r\n    nodeId.setPort(port);\r\n    nodeId.build();\r\n    return nodeId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getPort()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPort(int port)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String toString()\n{\r\n    return this.getHost() + \":\" + this.getPort();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 493217;\r\n    int result = 8501;\r\n    result = prime * result + this.getHost().hashCode();\r\n    result = prime * result + this.getPort();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    NodeId other = (NodeId) obj;\r\n    if (!this.getHost().equals(other.getHost()))\r\n        return false;\r\n    if (this.getPort() != other.getPort())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "int compareTo(NodeId other)\n{\r\n    int hostCompare = this.getHost().compareTo(other.getHost());\r\n    if (hostCompare == 0) {\r\n        if (this.getPort() > other.getPort()) {\r\n            return 1;\r\n        } else if (this.getPort() < other.getPort()) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n    return hostCompare;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromString",
  "errType" : [ "NumberFormatException" ],
  "containingMethodsNum" : 2,
  "sourceCodeText" : "NodeId fromString(String nodeIdStr)\n{\r\n    String[] parts = nodeIdStr.split(\":\");\r\n    if (parts.length != 2) {\r\n        throw new IllegalArgumentException(\"Invalid NodeId [\" + nodeIdStr + \"]. Expected host:port\");\r\n    }\r\n    try {\r\n        NodeId nodeId = NodeId.newInstance(parts[0].trim(), Integer.parseInt(parts[1]));\r\n        return nodeId;\r\n    } catch (NumberFormatException e) {\r\n        throw new IllegalArgumentException(\"Invalid port: \" + parts[1], e);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getConfigurationProvider",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ConfigurationProvider getConfigurationProvider(Configuration bootstrapConf)\n{\r\n    Class<? extends ConfigurationProvider> defaultProviderClass;\r\n    try {\r\n        defaultProviderClass = (Class<? extends ConfigurationProvider>) Class.forName(YarnConfiguration.DEFAULT_RM_CONFIGURATION_PROVIDER_CLASS);\r\n    } catch (Exception e) {\r\n        throw new YarnRuntimeException(\"Invalid default configuration provider class\" + YarnConfiguration.DEFAULT_RM_CONFIGURATION_PROVIDER_CLASS, e);\r\n    }\r\n    ConfigurationProvider configurationProvider = ReflectionUtils.newInstance(bootstrapConf.getClass(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS, defaultProviderClass, ConfigurationProvider.class), bootstrapConf);\r\n    return configurationProvider;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getEntities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelineEntity> getEntities()\n{\r\n    return entities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setEntities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEntities(List<TimelineEntity> timelineEntities)\n{\r\n    this.entities = timelineEntities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addEntities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEntities(List<TimelineEntity> timelineEntities)\n{\r\n    this.entities.addAll(timelineEntities);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addEntity",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEntity(TimelineEntity entity)\n{\r\n    entities.add(entity);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ReservationListRequest newInstance(String queue, String reservationId, long startTime, long endTime, boolean includeReservationAllocations)\n{\r\n    ReservationListRequest request = Records.newRecord(ReservationListRequest.class);\r\n    request.setQueue(queue);\r\n    request.setReservationId(reservationId);\r\n    request.setStartTime(startTime);\r\n    request.setEndTime(endTime);\r\n    request.setIncludeResourceAllocations(includeReservationAllocations);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationListRequest newInstance(String queue, String reservationId, boolean includeReservationAllocations)\n{\r\n    return newInstance(queue, reservationId, -1, -1, includeReservationAllocations);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationListRequest newInstance(String queue, String reservationId)\n{\r\n    return newInstance(queue, reservationId, -1, -1, false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueue(String queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(String reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getStartTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(long startTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getEndTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getEndTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setEndTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEndTime(long endTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getIncludeResourceAllocations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getIncludeResourceAllocations()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setIncludeResourceAllocations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIncludeResourceAllocations(boolean includeReservationAllocations)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "initResourceInformations",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void initResourceInformations(long memory, long vcores, int numberOfKnownResourceTypes)\n{\r\n    this.memoryResInfo = newDefaultInformation(MEMORY_URI, MEMORY_MB.getUnits(), memory);\r\n    this.vcoresResInfo = newDefaultInformation(VCORES_URI, VCORES.getUnits(), vcores);\r\n    resources = new ResourceInformation[numberOfKnownResourceTypes];\r\n    resources[MEMORY_INDEX] = memoryResInfo;\r\n    resources[VCORES_INDEX] = vcoresResInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "getMemory",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getMemory()\n{\r\n    return castToIntSafely(memoryResInfo.getValue());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "setMemory",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setMemory(int memory)\n{\r\n    this.memoryResInfo.setValue(memory);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "getMemorySize",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getMemorySize()\n{\r\n    return memoryResInfo.getValue();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "setMemorySize",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setMemorySize(long memory)\n{\r\n    this.memoryResInfo.setValue(memory);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "getVirtualCores",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getVirtualCores()\n{\r\n    return castToIntSafely(vcoresResInfo.getValue());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "setVirtualCores",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setVirtualCores(int vcores)\n{\r\n    this.vcoresResInfo.setValue(vcores);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (!(obj instanceof Resource)) {\r\n        return false;\r\n    }\r\n    Resource other = (Resource) obj;\r\n    if (getMemorySize() != other.getMemorySize() || getVirtualCores() != other.getVirtualCores()) {\r\n        return false;\r\n    }\r\n    if (resources.length > 2) {\r\n        ResourceInformation[] otherVectors = other.getResources();\r\n        if (resources.length != otherVectors.length) {\r\n            return false;\r\n        }\r\n        for (int i = 2; i < resources.length; i++) {\r\n            ResourceInformation a = resources[i];\r\n            ResourceInformation b = otherVectors[i];\r\n            if ((a != b) && ((a == null) || !a.equals(b))) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "int compareTo(Resource other)\n{\r\n    if (resources.length <= 2) {\r\n        long diff = this.getMemorySize() - other.getMemorySize();\r\n        if (diff == 0) {\r\n            return this.getVirtualCores() - other.getVirtualCores();\r\n        } else if (diff > 0) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    return super.compareTo(other);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\impl",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 47;\r\n    return prime * (prime + Long.hashCode(getMemorySize())) + getVirtualCores();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ContainerRetryContext newInstance(ContainerRetryPolicy retryPolicy, Set<Integer> errorCodes, int maxRetries, int retryInterval, long failuresValidityInterval)\n{\r\n    ContainerRetryContext containerRetryContext = Records.newRecord(ContainerRetryContext.class);\r\n    containerRetryContext.setRetryPolicy(retryPolicy);\r\n    containerRetryContext.setErrorCodes(errorCodes);\r\n    containerRetryContext.setMaxRetries(maxRetries);\r\n    containerRetryContext.setRetryInterval(retryInterval);\r\n    containerRetryContext.setFailuresValidityInterval(failuresValidityInterval);\r\n    return containerRetryContext;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainerRetryContext newInstance(ContainerRetryPolicy retryPolicy, Set<Integer> errorCodes, int maxRetries, int retryInterval)\n{\r\n    return newInstance(retryPolicy, errorCodes, maxRetries, retryInterval, -1);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRetryPolicy",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerRetryPolicy getRetryPolicy()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRetryPolicy",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRetryPolicy(ContainerRetryPolicy retryPolicy)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getErrorCodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<Integer> getErrorCodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setErrorCodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setErrorCodes(Set<Integer> errorCodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaxRetries",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getMaxRetries()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaxRetries",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaxRetries(int maxRetries)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRetryInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getRetryInterval()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRetryInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRetryInterval(int retryInterval)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFailuresValidityInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getFailuresValidityInterval()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFailuresValidityInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailuresValidityInterval(long failuresValidityInterval)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ContainerUpdateResponse newInstance(List<ContainerId> successfullyUpdatedContainers, Map<ContainerId, SerializedException> failedRequests)\n{\r\n    ContainerUpdateResponse response = Records.newRecord(ContainerUpdateResponse.class);\r\n    response.setSuccessfullyUpdatedContainers(successfullyUpdatedContainers);\r\n    response.setFailedRequests(failedRequests);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSuccessfullyUpdatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getSuccessfullyUpdatedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSuccessfullyUpdatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSuccessfullyUpdatedContainers(List<ContainerId> succeedUpdatedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeAttributeKey newInstance(String attributeName)\n{\r\n    return newInstance(NodeAttribute.PREFIX_CENTRALIZED, attributeName);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeAttributeKey newInstance(String attributePrefix, String attributeName)\n{\r\n    NodeAttributeKey nodeAttributeKey = Records.newRecord(NodeAttributeKey.class);\r\n    nodeAttributeKey.setAttributePrefix(attributePrefix);\r\n    nodeAttributeKey.setAttributeName(attributeName);\r\n    return nodeAttributeKey;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributePrefix",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAttributePrefix()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributePrefix",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributePrefix(String attributePrefix)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAttributeName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeName(String attributeName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationReportResponse newInstance(ApplicationReport ApplicationReport)\n{\r\n    GetApplicationReportResponse response = Records.newRecord(GetApplicationReportResponse.class);\r\n    response.setApplicationReport(ApplicationReport);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationReport getApplicationReport()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationReport(ApplicationReport ApplicationReport)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshQueuesRequest newInstance()\n{\r\n    RefreshQueuesRequest request = Records.newRecord(RefreshQueuesRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 20,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource, String applicationType, boolean keepContainers, String appLabelExpression, String amContainerLabelExpression)\n{\r\n    ApplicationSubmissionContext context = Records.newRecord(ApplicationSubmissionContext.class);\r\n    context.setApplicationId(applicationId);\r\n    context.setApplicationName(applicationName);\r\n    context.setQueue(queue);\r\n    context.setPriority(priority);\r\n    context.setAMContainerSpec(amContainer);\r\n    context.setUnmanagedAM(isUnmanagedAM);\r\n    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\r\n    context.setMaxAppAttempts(maxAppAttempts);\r\n    context.setApplicationType(applicationType);\r\n    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\r\n    context.setNodeLabelExpression(appLabelExpression);\r\n    context.setResource(resource);\r\n    ResourceRequest amReq = Records.newRecord(ResourceRequest.class);\r\n    amReq.setResourceName(ResourceRequest.ANY);\r\n    amReq.setCapability(resource);\r\n    amReq.setNumContainers(1);\r\n    amReq.setRelaxLocality(true);\r\n    amReq.setNodeLabelExpression(amContainerLabelExpression);\r\n    context.setAMContainerResourceRequests(Collections.singletonList(amReq));\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource, String applicationType, boolean keepContainers)\n{\r\n    return newInstance(applicationId, applicationName, queue, priority, amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts, resource, applicationType, keepContainers, null, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource, String applicationType)\n{\r\n    return newInstance(applicationId, applicationName, queue, priority, amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts, resource, applicationType, false, null, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource)\n{\r\n    return newInstance(applicationId, applicationName, queue, priority, amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts, resource, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 12,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, String applicationType, boolean keepContainers, String appLabelExpression, ResourceRequest resourceRequest)\n{\r\n    ApplicationSubmissionContext context = Records.newRecord(ApplicationSubmissionContext.class);\r\n    context.setApplicationId(applicationId);\r\n    context.setApplicationName(applicationName);\r\n    context.setQueue(queue);\r\n    context.setAMContainerSpec(amContainer);\r\n    context.setUnmanagedAM(isUnmanagedAM);\r\n    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\r\n    context.setMaxAppAttempts(maxAppAttempts);\r\n    context.setApplicationType(applicationType);\r\n    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\r\n    context.setNodeLabelExpression(appLabelExpression);\r\n    context.setAMContainerResourceRequests(Collections.singletonList(resourceRequest));\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource, String applicationType, boolean keepContainers, long attemptFailuresValidityInterval)\n{\r\n    ApplicationSubmissionContext context = newInstance(applicationId, applicationName, queue, priority, amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts, resource, applicationType, keepContainers);\r\n    context.setAttemptFailuresValidityInterval(attemptFailuresValidityInterval);\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ApplicationSubmissionContext newInstance(ApplicationId applicationId, String applicationName, String queue, Priority priority, ContainerLaunchContext amContainer, boolean isUnmanagedAM, boolean cancelTokensWhenComplete, int maxAppAttempts, Resource resource, String applicationType, boolean keepContainers, LogAggregationContext logAggregationContext)\n{\r\n    ApplicationSubmissionContext context = newInstance(applicationId, applicationName, queue, priority, amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts, resource, applicationType, keepContainers);\r\n    context.setLogAggregationContext(logAggregationContext);\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getApplicationName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationName(String applicationName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueue(String queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAMContainerSpec",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerLaunchContext getAMContainerSpec()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAMContainerSpec",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMContainerSpec(ContainerLaunchContext amContainer)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUnmanagedAM",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getUnmanagedAM()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUnmanagedAM",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUnmanagedAM(boolean value)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCancelTokensWhenComplete",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getCancelTokensWhenComplete()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCancelTokensWhenComplete",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCancelTokensWhenComplete(boolean cancel)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaxAppAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getMaxAppAttempts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaxAppAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaxAppAttempts(int maxAppAttempts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResource(Resource resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getApplicationType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationType(String applicationType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getKeepContainersAcrossApplicationAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getKeepContainersAcrossApplicationAttempts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setKeepContainersAcrossApplicationAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setKeepContainersAcrossApplicationAttempts(boolean keepContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getApplicationTags()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTags(Set<String> tags)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNodeLabelExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabelExpression(String nodeLabelExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAMContainerResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceRequest getAMContainerResourceRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAMContainerResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMContainerResourceRequest(ResourceRequest request)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAMContainerResourceRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ResourceRequest> getAMContainerResourceRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAMContainerResourceRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMContainerResourceRequests(List<ResourceRequest> requests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttemptFailuresValidityInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAttemptFailuresValidityInterval()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttemptFailuresValidityInterval",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttemptFailuresValidityInterval(long attemptFailuresValidityInterval)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLogAggregationContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LogAggregationContext getLogAggregationContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLogAggregationContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLogAggregationContext(LogAggregationContext logAggregationContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationID",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationID()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationID",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationID(ReservationId reservationID)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationTimeoutType, Long> getApplicationTimeouts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTimeouts(Map<ApplicationTimeoutType, Long> applicationTimeouts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationSchedulingPropertiesMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getApplicationSchedulingPropertiesMap()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationSchedulingPropertiesMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationSchedulingPropertiesMap(Map<String, String> schedulingEnvMap)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NMToken newInstance(NodeId nodeId, Token token)\n{\r\n    NMToken nmToken = Records.newRecord(NMToken.class);\r\n    nmToken.setNodeId(nodeId);\r\n    nmToken.setToken(token);\r\n    return nmToken;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeId getNodeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeId(NodeId nodeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setToken(Token token)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    int result = 1;\r\n    result = prime * result + ((getNodeId() == null) ? 0 : getNodeId().hashCode());\r\n    result = prime * result + ((getToken() == null) ? 0 : getToken().hashCode());\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    NMToken other = (NMToken) obj;\r\n    if (getNodeId() == null) {\r\n        if (other.getNodeId() != null)\r\n            return false;\r\n    } else if (!getNodeId().equals(other.getNodeId()))\r\n        return false;\r\n    if (getToken() == null) {\r\n        if (other.getToken() != null)\r\n            return false;\r\n    } else if (!getToken().equals(other.getToken()))\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReplaceLabelsOnNodeResponse newInstance()\n{\r\n    return Records.newRecord(ReplaceLabelsOnNodeResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CollectorInfo newInstance(String collectorAddr)\n{\r\n    return newInstance(collectorAddr, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "CollectorInfo newInstance(String collectorAddr, Token token)\n{\r\n    CollectorInfo amCollectorInfo = Records.newRecord(CollectorInfo.class);\r\n    amCollectorInfo.setCollectorAddr(collectorAddr);\r\n    amCollectorInfo.setCollectorToken(token);\r\n    return amCollectorInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCollectorAddr",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getCollectorAddr()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCollectorAddr",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCollectorAddr(String addr)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCollectorToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getCollectorToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCollectorToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCollectorToken(Token token)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNewApplicationRequest newInstance()\n{\r\n    GetNewApplicationRequest request = Records.newRecord(GetNewApplicationRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetAttributesToNodesResponse newInstance(Map<NodeAttributeKey, List<NodeToAttributeValue>> map)\n{\r\n    GetAttributesToNodesResponse response = Records.newRecord(GetAttributesToNodesResponse.class);\r\n    response.setAttributeToNodes(map);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAttributeToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeToNodes(Map<NodeAttributeKey, List<NodeToAttributeValue>> map)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<NodeAttributeKey, List<NodeToAttributeValue>> getAttributesToNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetResourceProfileResponse newInstance()\n{\r\n    return Records.newRecord(GetResourceProfileResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResource(Resource r)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object other)\n{\r\n    if (this == other) {\r\n        return true;\r\n    }\r\n    if (!(other instanceof GetResourceProfileResponse)) {\r\n        return false;\r\n    }\r\n    return this.getResource().equals(((GetResourceProfileResponse) other).getResource());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return getResource().hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "CancelDelegationTokenRequest newInstance(Token dToken)\n{\r\n    CancelDelegationTokenRequest request = Records.newRecord(CancelDelegationTokenRequest.class);\r\n    request.setDelegationToken(dToken);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getDelegationToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDelegationToken(Token dToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "SchedulingRequest newInstance(long allocationRequestId, Priority priority, ExecutionTypeRequest executionType, Set<String> allocationTags, ResourceSizing resourceSizing, PlacementConstraint placementConstraintExpression)\n{\r\n    return SchedulingRequest.newBuilder().allocationRequestId(allocationRequestId).priority(priority).executionType(executionType).allocationTags(allocationTags).resourceSizing(resourceSizing).placementConstraintExpression(placementConstraintExpression).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newBuilder",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SchedulingRequestBuilder newBuilder()\n{\r\n    return new SchedulingRequestBuilder();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocationRequestId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocationRequestId(long allocationRequestId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionTypeRequest getExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionTypeRequest executionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getAllocationTags()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocationTags(Set<String> allocationTags)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceSizing",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceSizing getResourceSizing()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceSizing",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceSizing(ResourceSizing resourceSizing)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPlacementConstraint",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "PlacementConstraint getPlacementConstraint()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPlacementConstraint",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPlacementConstraint(PlacementConstraint placementConstraint)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "GetNewApplicationResponse newInstance(ApplicationId applicationId, Resource minCapability, Resource maxCapability)\n{\r\n    GetNewApplicationResponse response = Records.newRecord(GetNewApplicationResponse.class);\r\n    response.setApplicationId(applicationId);\r\n    response.setMaximumResourceCapability(maxCapability);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getMaximumResourceCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getMaximumResourceCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setMaximumResourceCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaximumResourceCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\factory\\providers",
  "methodName" : "getRecordFactory",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RecordFactory getRecordFactory(Configuration conf)\n{\r\n    if (conf == null) {\r\n        conf = defaultConf;\r\n    }\r\n    String recordFactoryClassName = conf.get(YarnConfiguration.IPC_RECORD_FACTORY_CLASS, YarnConfiguration.DEFAULT_IPC_RECORD_FACTORY_CLASS);\r\n    return (RecordFactory) getFactoryClassInstance(recordFactoryClassName);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\factory\\providers",
  "methodName" : "getFactoryClassInstance",
  "errType" : [ "ClassNotFoundException", "NoSuchMethodException", "InvocationTargetException", "IllegalAccessException" ],
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Object getFactoryClassInstance(String factoryClassName)\n{\r\n    try {\r\n        Class<?> clazz = Class.forName(factoryClassName);\r\n        Method method = clazz.getMethod(\"get\", null);\r\n        method.setAccessible(true);\r\n        return method.invoke(null, null);\r\n    } catch (ClassNotFoundException e) {\r\n        throw new YarnRuntimeException(e);\r\n    } catch (NoSuchMethodException e) {\r\n        throw new YarnRuntimeException(e);\r\n    } catch (InvocationTargetException e) {\r\n        throw new YarnRuntimeException(e);\r\n    } catch (IllegalAccessException e) {\r\n        throw new YarnRuntimeException(e);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshAdminAclsResponse newInstance()\n{\r\n    RefreshAdminAclsResponse response = Records.newRecord(RefreshAdminAclsResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceProfilesRequest newInstance()\n{\r\n    return Records.newRecord(GetAllResourceProfilesRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "MoveApplicationAcrossQueuesResponse newInstance()\n{\r\n    MoveApplicationAcrossQueuesResponse response = Records.newRecord(MoveApplicationAcrossQueuesResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeUnpublishVolumeResponse newInstance()\n{\r\n    return Records.newRecord(NodeUnpublishVolumeResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterMetricsResponse newInstance(YarnClusterMetrics metrics)\n{\r\n    GetClusterMetricsResponse response = Records.newRecord(GetClusterMetricsResponse.class);\r\n    response.setClusterMetrics(metrics);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getClusterMetrics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "YarnClusterMetrics getClusterMetrics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setClusterMetrics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClusterMetrics(YarnClusterMetrics metrics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "IncreaseContainersResourceResponse newInstance(List<ContainerId> successfullyIncreasedContainers, Map<ContainerId, SerializedException> failedRequests)\n{\r\n    IncreaseContainersResourceResponse response = Records.newRecord(IncreaseContainersResourceResponse.class);\r\n    response.setSuccessfullyIncreasedContainers(successfullyIncreasedContainers);\r\n    response.setFailedRequests(failedRequests);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSuccessfullyIncreasedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getSuccessfullyIncreasedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSuccessfullyIncreasedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSuccessfullyIncreasedContainers(List<ContainerId> succeedIncreasedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getAllEvents",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<EventsOfOneEntity> getAllEvents()\n{\r\n    return allEvents;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEvent",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEvent(EventsOfOneEntity eventsOfOneEntity)\n{\r\n    allEvents.add(eventsOfOneEntity);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEvents",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEvents(List<EventsOfOneEntity> allEvents)\n{\r\n    this.allEvents.addAll(allEvents);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEvents",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setEvents(List<EventsOfOneEntity> allEvents)\n{\r\n    this.allEvents.clear();\r\n    this.allEvents.addAll(allEvents);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodesRequest newInstance(EnumSet<NodeState> states)\n{\r\n    GetClusterNodesRequest request = Records.newRecord(GetClusterNodesRequest.class);\r\n    request.setNodeStates(states);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodesRequest newInstance()\n{\r\n    GetClusterNodesRequest request = Records.newRecord(GetClusterNodesRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeStates",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "EnumSet<NodeState> getNodeStates()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeStates",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeStates(EnumSet<NodeState> states)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "FailApplicationAttemptResponse newInstance()\n{\r\n    FailApplicationAttemptResponse response = Records.newRecord(FailApplicationAttemptResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "TimelineEntityGroupId newInstance(ApplicationId applicationId, String id)\n{\r\n    TimelineEntityGroupId timelineEntityGroupId = new TimelineEntityGroupId();\r\n    timelineEntityGroupId.setApplicationId(applicationId);\r\n    timelineEntityGroupId.setTimelineEntityGroupId(id);\r\n    return timelineEntityGroupId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()\n{\r\n    return this.applicationId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId appID)\n{\r\n    this.applicationId = appID;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getTimelineEntityGroupId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTimelineEntityGroupId()\n{\r\n    return this.id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setTimelineEntityGroupId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimelineEntityGroupId(String timelineEntityGroupId)\n{\r\n    this.id = timelineEntityGroupId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = getTimelineEntityGroupId().hashCode();\r\n    result = 31 * result + getApplicationId().hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    TimelineEntityGroupId otherObject = (TimelineEntityGroupId) obj;\r\n    if (!this.getApplicationId().equals(otherObject.getApplicationId())) {\r\n        return false;\r\n    }\r\n    if (!this.getTimelineEntityGroupId().equals(otherObject.getTimelineEntityGroupId())) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int compareTo(TimelineEntityGroupId other)\n{\r\n    int compareAppIds = this.getApplicationId().compareTo(other.getApplicationId());\r\n    if (compareAppIds == 0) {\r\n        return this.getTimelineEntityGroupId().compareTo(other.getTimelineEntityGroupId());\r\n    } else {\r\n        return compareAppIds;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(TIMELINE_ENTITY_GROUPID_STR_PREFIX + \"_\");\r\n    ApplicationId appId = getApplicationId();\r\n    sb.append(appId.getClusterTimestamp()).append(\"_\").append(appId.getId()).append(\"_\").append(getTimelineEntityGroupId());\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "fromString",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "TimelineEntityGroupId fromString(String timelineEntityGroupIdStr)\n{\r\n    StringBuffer buf = new StringBuffer();\r\n    Iterator<String> it = SPLITTER.split(timelineEntityGroupIdStr).iterator();\r\n    if (!it.next().equals(TIMELINE_ENTITY_GROUPID_STR_PREFIX)) {\r\n        throw new IllegalArgumentException(\"Invalid TimelineEntityGroupId prefix: \" + timelineEntityGroupIdStr);\r\n    }\r\n    ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()), Integer.parseInt(it.next()));\r\n    buf.append(it.next());\r\n    while (it.hasNext()) {\r\n        buf.append(\"_\");\r\n        buf.append(it.next());\r\n    }\r\n    return TimelineEntityGroupId.newInstance(appId, buf.toString());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceRequest newInstance(Priority priority, String hostName, Resource capability, int numContainers)\n{\r\n    return ResourceRequest.newBuilder().priority(priority).resourceName(hostName).capability(capability).numContainers(numContainers).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceRequest newInstance(Priority priority, String hostName, Resource capability, int numContainers, boolean relaxLocality)\n{\r\n    return ResourceRequest.newBuilder().priority(priority).resourceName(hostName).capability(capability).numContainers(numContainers).relaxLocality(relaxLocality).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceRequest newInstance(Priority priority, String hostName, Resource capability, int numContainers, boolean relaxLocality, String labelExpression)\n{\r\n    return ResourceRequest.newBuilder().priority(priority).resourceName(hostName).capability(capability).numContainers(numContainers).relaxLocality(relaxLocality).nodeLabelExpression(labelExpression).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceRequest newInstance(Priority priority, String hostName, Resource capability, int numContainers, boolean relaxLocality, String labelExpression, ExecutionTypeRequest executionTypeRequest)\n{\r\n    return ResourceRequest.newBuilder().priority(priority).resourceName(hostName).capability(capability).numContainers(numContainers).relaxLocality(relaxLocality).nodeLabelExpression(labelExpression).executionTypeRequest(executionTypeRequest).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "clone",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceRequest clone(ResourceRequest rr)\n{\r\n    return ResourceRequest.newBuilder().priority(rr.getPriority()).resourceName(rr.getResourceName()).capability(rr.getCapability()).numContainers(rr.getNumContainers()).relaxLocality(rr.getRelaxLocality()).nodeLabelExpression(rr.getNodeLabelExpression()).executionTypeRequest(rr.getExecutionTypeRequest()).allocationRequestId(rr.getAllocationRequestId()).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newBuilder",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceRequestBuilder newBuilder()\n{\r\n    return new ResourceRequestBuilder();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "isAnyLocation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isAnyLocation(String hostName)\n{\r\n    return ANY.equals(hostName);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getResourceName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceName(String resourceName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumContainers(int numContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRelaxLocality",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getRelaxLocality()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionTypeRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionTypeRequest(ExecutionTypeRequest execSpec)\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionTypeRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionTypeRequest getExecutionTypeRequest()\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRelaxLocality",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRelaxLocality(boolean relaxLocality)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNodeLabelExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabelExpression(String nodelabelExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocationRequestId()\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocationRequestId(long allocationRequestID)\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    Resource capability = getCapability();\r\n    String hostName = getResourceName();\r\n    Priority priority = getPriority();\r\n    result = prime * result + ((capability == null) ? 0 : capability.hashCode());\r\n    result = prime * result + ((hostName == null) ? 0 : hostName.hashCode());\r\n    result = prime * result + getNumContainers();\r\n    result = prime * result + ((priority == null) ? 0 : priority.hashCode());\r\n    result = prime * result + Long.valueOf(getAllocationRequestId()).hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 24,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ResourceRequest other = (ResourceRequest) obj;\r\n    Resource capability = getCapability();\r\n    if (capability == null) {\r\n        if (other.getCapability() != null)\r\n            return false;\r\n    } else if (!capability.equals(other.getCapability()))\r\n        return false;\r\n    String hostName = getResourceName();\r\n    if (hostName == null) {\r\n        if (other.getResourceName() != null)\r\n            return false;\r\n    } else if (!hostName.equals(other.getResourceName()))\r\n        return false;\r\n    if (getNumContainers() != other.getNumContainers())\r\n        return false;\r\n    Priority priority = getPriority();\r\n    if (priority == null) {\r\n        if (other.getPriority() != null)\r\n            return false;\r\n    } else if (!priority.equals(other.getPriority()))\r\n        return false;\r\n    ExecutionTypeRequest execTypeRequest = getExecutionTypeRequest();\r\n    if (execTypeRequest == null) {\r\n        if (other.getExecutionTypeRequest() != null) {\r\n            return false;\r\n        }\r\n    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\r\n        return false;\r\n    }\r\n    if (getAllocationRequestId() != other.getAllocationRequestId()) {\r\n        return false;\r\n    }\r\n    if (getNodeLabelExpression() == null) {\r\n        if (other.getNodeLabelExpression() != null) {\r\n            return false;\r\n        }\r\n    } else {\r\n        String label1 = getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\r\n        String label2 = other.getNodeLabelExpression() == null ? null : other.getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\r\n        if (!label1.equals(label2)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "int compareTo(ResourceRequest other)\n{\r\n    int priorityComparison = this.getPriority().compareTo(other.getPriority());\r\n    if (priorityComparison == 0) {\r\n        int hostNameComparison = this.getResourceName().compareTo(other.getResourceName());\r\n        if (hostNameComparison == 0) {\r\n            int execTypeReqComparison = this.getExecutionTypeRequest().compareTo(other.getExecutionTypeRequest());\r\n            if (execTypeReqComparison == 0) {\r\n                int capabilityComparison = this.getCapability().compareTo(other.getCapability());\r\n                if (capabilityComparison == 0) {\r\n                    int numContainerComparison = this.getNumContainers() - other.getNumContainers();\r\n                    if (numContainerComparison == 0) {\r\n                        return Long.compare(getAllocationRequestId(), other.getAllocationRequestId());\r\n                    } else {\r\n                        return numContainerComparison;\r\n                    }\r\n                } else {\r\n                    return capabilityComparison;\r\n                }\r\n            } else {\r\n                return execTypeReqComparison;\r\n            }\r\n        } else {\r\n            return hostNameComparison;\r\n        }\r\n    } else {\r\n        return priorityComparison;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getPath()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPath(String p)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetDelegationTokenResponse newInstance(Token rmDTToken)\n{\r\n    GetDelegationTokenResponse response = Records.newRecord(GetDelegationTokenResponse.class);\r\n    response.setRMDelegationToken(rmDTToken);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getRMDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getRMDelegationToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setRMDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRMDelegationToken(Token rmDTToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "targetIn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractConstraint targetIn(String scope, TargetExpression... targetExpressions)\n{\r\n    return new SingleConstraint(scope, 1, Integer.MAX_VALUE, targetExpressions);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "targetNotIn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractConstraint targetNotIn(String scope, TargetExpression... targetExpressions)\n{\r\n    return new SingleConstraint(scope, 0, 0, targetExpressions);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "targetNodeAttribute",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractConstraint targetNodeAttribute(String scope, NodeAttributeOpCode opCode, TargetExpression... targetExpressions)\n{\r\n    return new SingleConstraint(scope, -1, -1, opCode, targetExpressions);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "cardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint cardinality(String scope, int minCardinality, int maxCardinality, String... allocationTags)\n{\r\n    return new SingleConstraint(scope, minCardinality, maxCardinality, PlacementTargets.allocationTag(allocationTags));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "cardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint cardinality(String scope, String namespace, int minCardinality, int maxCardinality, String... allocationTags)\n{\r\n    return new SingleConstraint(scope, minCardinality, maxCardinality, PlacementTargets.allocationTagWithNamespace(namespace, allocationTags));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "minCardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint minCardinality(String scope, int minCardinality, String... allocationTags)\n{\r\n    return cardinality(scope, minCardinality, Integer.MAX_VALUE, allocationTags);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "minCardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint minCardinality(String scope, String namespace, int minCardinality, String... allocationTags)\n{\r\n    return cardinality(scope, namespace, minCardinality, Integer.MAX_VALUE, allocationTags);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "maxCardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint maxCardinality(String scope, int maxCardinality, String... allocationTags)\n{\r\n    return cardinality(scope, 0, maxCardinality, allocationTags);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "maxCardinality",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AbstractConstraint maxCardinality(String scope, String tagNamespace, int maxCardinality, String... allocationTags)\n{\r\n    return cardinality(scope, tagNamespace, 0, maxCardinality, allocationTags);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "targetCardinality",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractConstraint targetCardinality(String scope, int minCardinality, int maxCardinality, TargetExpression... targetExpressions)\n{\r\n    return new SingleConstraint(scope, minCardinality, maxCardinality, targetExpressions);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "and",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "And and(AbstractConstraint... children)\n{\r\n    return new And(children);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "or",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Or or(AbstractConstraint... children)\n{\r\n    return new Or(children);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "delayedOr",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "DelayedOr delayedOr(TimedPlacementConstraint... children)\n{\r\n    return new DelayedOr(children);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "timedClockConstraint",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "TimedPlacementConstraint timedClockConstraint(AbstractConstraint constraint, long delay, TimeUnit timeUnit)\n{\r\n    return new TimedPlacementConstraint(constraint, timeUnit.toMillis(delay), TimedPlacementConstraint.DelayUnit.MILLISECONDS);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "timedOpportunitiesConstraint",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TimedPlacementConstraint timedOpportunitiesConstraint(AbstractConstraint constraint, long delay)\n{\r\n    return new TimedPlacementConstraint(constraint, delay, TimedPlacementConstraint.DelayUnit.OPPORTUNITIES);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "PlacementConstraint build(AbstractConstraint constraintExpr)\n{\r\n    return constraintExpr.build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodeAttributesResponse newInstance(Set<NodeAttributeInfo> attributes)\n{\r\n    GetClusterNodeAttributesResponse response = Records.newRecord(GetClusterNodeAttributesResponse.class);\r\n    response.setNodeAttributes(attributes);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeAttributes(Set<NodeAttributeInfo> attributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<NodeAttributeInfo> getNodeAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetQueueUserAclsInfoResponse newInstance(List<QueueUserACLInfo> queueUserAclsList)\n{\r\n    GetQueueUserAclsInfoResponse response = Records.newRecord(GetQueueUserAclsInfoResponse.class);\r\n    response.setUserAclsInfoList(queueUserAclsList);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUserAclsInfoList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<QueueUserACLInfo> getUserAclsInfoList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUserAclsInfoList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUserAclsInfoList(List<QueueUserACLInfo> queueUserAclsList)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodePublishVolumeResponse newInstance()\n{\r\n    return Records.newRecord(NodePublishVolumeResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainerReport newInstance(ContainerId containerId, Resource allocatedResource, NodeId assignedNode, Priority priority, long creationTime, long finishTime, String diagnosticInfo, String logUrl, int containerExitStatus, ContainerState containerState, String nodeHttpAddress)\n{\r\n    return newInstance(containerId, allocatedResource, assignedNode, priority, creationTime, finishTime, diagnosticInfo, logUrl, containerExitStatus, containerState, nodeHttpAddress, ExecutionType.GUARANTEED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "ContainerReport newInstance(ContainerId containerId, Resource allocatedResource, NodeId assignedNode, Priority priority, long creationTime, long finishTime, String diagnosticInfo, String logUrl, int containerExitStatus, ContainerState containerState, String nodeHttpAddress, ExecutionType executionType)\n{\r\n    ContainerReport report = Records.newRecord(ContainerReport.class);\r\n    report.setContainerId(containerId);\r\n    report.setAllocatedResource(allocatedResource);\r\n    report.setAssignedNode(assignedNode);\r\n    report.setPriority(priority);\r\n    report.setCreationTime(creationTime);\r\n    report.setFinishTime(finishTime);\r\n    report.setDiagnosticsInfo(diagnosticInfo);\r\n    report.setLogUrl(logUrl);\r\n    report.setContainerExitStatus(containerExitStatus);\r\n    report.setContainerState(containerState);\r\n    report.setNodeHttpAddress(nodeHttpAddress);\r\n    report.setExecutionType(executionType);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocatedResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getAllocatedResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocatedResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocatedResource(Resource resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAssignedNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeId getAssignedNode()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAssignedNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAssignedNode(NodeId nodeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCreationTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getCreationTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCreationTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCreationTime(long creationTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getFinishTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinishTime(long finishTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDiagnosticsInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnosticsInfo()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDiagnosticsInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnosticsInfo(String diagnosticsInfo)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLogUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getLogUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLogUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLogUrl(String logUrl)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerState getContainerState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerState(ContainerState containerState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerExitStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getContainerExitStatus()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerExitStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerExitStatus(int containerExitStatus)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getExposedPorts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExposedPorts(Map<String, List<Map<String, String>>> ports)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNodeHttpAddress()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeHttpAddress(String nodeHttpAddress)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionType executionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return this.constraintExpr.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "getConstraintExpr",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractConstraint getConstraintExpr()\n{\r\n    return constraintExpr;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean equals(Object o)\n{\r\n    if (this == o) {\r\n        return true;\r\n    }\r\n    if (!(o instanceof PlacementConstraint)) {\r\n        return false;\r\n    }\r\n    PlacementConstraint that = (PlacementConstraint) o;\r\n    return getConstraintExpr() != null ? getConstraintExpr().equals(that.getConstraintExpr()) : that.getConstraintExpr() == null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\resource",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    return getConstraintExpr() != null ? getConstraintExpr().hashCode() : 0;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Container newInstance(ContainerId containerId, NodeId nodeId, String nodeHttpAddress, Resource resource, Priority priority, Token containerToken)\n{\r\n    return newInstance(containerId, nodeId, nodeHttpAddress, resource, priority, containerToken, ExecutionType.GUARANTEED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "Container newInstance(ContainerId containerId, NodeId nodeId, String nodeHttpAddress, Resource resource, Priority priority, Token containerToken, ExecutionType executionType)\n{\r\n    Container container = Records.newRecord(Container.class);\r\n    container.setId(containerId);\r\n    container.setNodeId(nodeId);\r\n    container.setNodeHttpAddress(nodeHttpAddress);\r\n    container.setResource(resource);\r\n    container.setPriority(priority);\r\n    container.setContainerToken(containerToken);\r\n    container.setExecutionType(executionType);\r\n    return container;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(ContainerId id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeId getNodeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeId(NodeId nodeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNodeHttpAddress()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeHttpAddress(String nodeHttpAddress)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, List<Map<String, String>>> getExposedPorts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExposedPorts(Map<String, List<Map<String, String>>> ports)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResource(Resource resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getContainerToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerToken(Token containerToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionType executionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocationRequestId()\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocationRequestId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocationRequestId(long allocationRequestID)\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getVersion()\n{\r\n    return 0;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVersion(int version)\n{\r\n    throw new UnsupportedOperationException();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocationTags",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Set<String> getAllocationTags()\n{\r\n    return Collections.emptySet();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocationTags(Set<String> allocationTags)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Type getType()\n{\r\n    return type;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setType(Type metricType)\n{\r\n    this.type = metricType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getId()\n{\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(String metricId)\n{\r\n    this.id = metricId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getRealtimeAggregationOp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TimelineMetricOperation getRealtimeAggregationOp()\n{\r\n    return realtimeAggregationOp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setRealtimeAggregationOp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRealtimeAggregationOp(final TimelineMetricOperation op)\n{\r\n    this.realtimeAggregationOp = op;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getValuesJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TreeMap<Long, Number> getValuesJAXB()\n{\r\n    return values;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getValues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<Long, Number> getValues()\n{\r\n    return values;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setValues",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void setValues(Map<Long, Number> vals)\n{\r\n    if (type == Type.SINGLE_VALUE) {\r\n        overwrite(vals);\r\n    } else {\r\n        if (vals != null) {\r\n            this.values = new TreeMap<>(Collections.reverseOrder());\r\n            this.values.putAll(vals);\r\n        } else {\r\n            this.values = null;\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addValues",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addValues(Map<Long, Number> vals)\n{\r\n    if (type == Type.SINGLE_VALUE) {\r\n        overwrite(vals);\r\n    } else {\r\n        this.values.putAll(vals);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addValue",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void addValue(long timestamp, Number value)\n{\r\n    if (type == Type.SINGLE_VALUE) {\r\n        values.clear();\r\n    }\r\n    values.put(timestamp, value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "overwrite",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void overwrite(Map<Long, Number> vals)\n{\r\n    if (vals.size() > 1) {\r\n        throw new IllegalArgumentException(\"Values cannot contain more than one point in \" + Type.SINGLE_VALUE + \" mode\");\r\n    }\r\n    this.values.clear();\r\n    this.values.putAll(vals);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "isValid",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isValid()\n{\r\n    return (id != null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = id.hashCode();\r\n    result = 31 * result + type.hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object o)\n{\r\n    if (this == o) {\r\n        return true;\r\n    }\r\n    if (!(o instanceof TimelineMetric)) {\r\n        return false;\r\n    }\r\n    TimelineMetric m = (TimelineMetric) o;\r\n    if (!id.equals(m.id)) {\r\n        return false;\r\n    }\r\n    if (type != m.type) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return \"{id: \" + id + \", type: \" + type + \", realtimeAggregationOp: \" + realtimeAggregationOp + \"; \" + values.toString() + \"}\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getLatestSingleValueMetric",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "TimelineMetric getLatestSingleValueMetric(TimelineMetric metric)\n{\r\n    if (metric.getType() == Type.SINGLE_VALUE) {\r\n        return metric;\r\n    } else {\r\n        TimelineMetric singleValueMetric = new TimelineMetric(Type.SINGLE_VALUE);\r\n        Long firstKey = metric.values.firstKey();\r\n        if (firstKey != null) {\r\n            Number firstValue = metric.values.get(firstKey);\r\n            singleValueMetric.addValue(firstKey, firstValue);\r\n        }\r\n        return singleValueMetric;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getSingleDataTimestamp",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "long getSingleDataTimestamp()\n{\r\n    if (this.type == Type.SINGLE_VALUE) {\r\n        if (values.size() == 0) {\r\n            throw new YarnRuntimeException(\"Values for this timeline metric is \" + \"empty.\");\r\n        } else {\r\n            return values.firstKey();\r\n        }\r\n    } else {\r\n        throw new YarnRuntimeException(\"Type for this timeline metric is not \" + \"SINGLE_VALUE.\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getSingleDataValue",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Number getSingleDataValue()\n{\r\n    if (this.type == Type.SINGLE_VALUE) {\r\n        if (values.size() == 0) {\r\n            return null;\r\n        } else {\r\n            return values.get(values.firstKey());\r\n        }\r\n    } else {\r\n        throw new YarnRuntimeException(\"Type for this timeline metric is not \" + \"SINGLE_VALUE.\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "aggregateTo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "TimelineMetric aggregateTo(TimelineMetric incomingMetric, TimelineMetric baseAggregatedMetric)\n{\r\n    return aggregateTo(incomingMetric, baseAggregatedMetric, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "aggregateTo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "TimelineMetric aggregateTo(TimelineMetric incomingMetric, TimelineMetric baseAggregatedMetric, Map<Object, Object> state)\n{\r\n    TimelineMetricOperation operation = incomingMetric.getRealtimeAggregationOp();\r\n    return operation.aggregate(incomingMetric, baseAggregatedMetric, state);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "FinishApplicationMasterRequest newInstance(FinalApplicationStatus finalAppStatus, String diagnostics, String url)\n{\r\n    FinishApplicationMasterRequest request = Records.newRecord(FinishApplicationMasterRequest.class);\r\n    request.setFinalApplicationStatus(finalAppStatus);\r\n    request.setDiagnostics(diagnostics);\r\n    request.setTrackingUrl(url);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFinalApplicationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "FinalApplicationStatus getFinalApplicationStatus()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFinalApplicationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinalApplicationStatus(FinalApplicationStatus finalState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTrackingUrl(String url)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RenewDelegationTokenRequest newInstance(Token dToken)\n{\r\n    RenewDelegationTokenRequest request = Records.newRecord(RenewDelegationTokenRequest.class);\r\n    request.setDelegationToken(dToken);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getDelegationToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDelegationToken(Token dToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "GetQueueInfoRequest newInstance(String queueName, boolean includeApplications, boolean includeChildQueues, boolean recursive)\n{\r\n    GetQueueInfoRequest request = Records.newRecord(GetQueueInfoRequest.class);\r\n    request.setQueueName(queueName);\r\n    request.setIncludeApplications(includeApplications);\r\n    request.setIncludeChildQueues(includeChildQueues);\r\n    request.setRecursive(recursive);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueueName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueName(String queueName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getIncludeApplications",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getIncludeApplications()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setIncludeApplications",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIncludeApplications(boolean includeApplications)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getIncludeChildQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getIncludeChildQueues()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setIncludeChildQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIncludeChildQueues(boolean includeChildQueues)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getRecursive",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getRecursive()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setRecursive",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRecursive(boolean recursive)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodesToAttributesMappingResponse newInstance()\n{\r\n    return Records.newRecord(NodesToAttributesMappingResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAttributesToNodesRequest newInstance()\n{\r\n    return Records.newRecord(GetAttributesToNodesRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetAttributesToNodesRequest newInstance(Set<NodeAttributeKey> attributes)\n{\r\n    GetAttributesToNodesRequest request = Records.newRecord(GetAttributesToNodesRequest.class);\r\n    request.setNodeAttributes(attributes);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeAttributes(Set<NodeAttributeKey> attributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<NodeAttributeKey> getNodeAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNodesToAttributesResponse newInstance(Map<String, Set<NodeAttribute>> map)\n{\r\n    GetNodesToAttributesResponse response = Records.newRecord(GetNodesToAttributesResponse.class);\r\n    response.setNodeToAttributes(map);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeToAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeToAttributes(Map<String, Set<NodeAttribute>> map)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeToAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Set<NodeAttribute>> getNodeToAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getId()\n{\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(String eventId)\n{\r\n    this.id = eventId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getInfoJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<String, Object> getInfoJAXB()\n{\r\n    return info;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Object> getInfo()\n{\r\n    return info;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setInfo(Map<String, Object> infos)\n{\r\n    this.info = TimelineServiceHelper.mapCastToHashMap(infos);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addInfo(Map<String, Object> infos)\n{\r\n    this.info.putAll(infos);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addInfo(String key, Object value)\n{\r\n    info.put(key, value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getTimestamp()\n{\r\n    return timestamp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimestamp(long ts)\n{\r\n    this.timestamp = ts;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "isValid",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isValid()\n{\r\n    return (id != null && timestamp != INVALID_TIMESTAMP);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = (int) (timestamp ^ (timestamp >>> 32));\r\n    result = 31 * result + id.hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object o)\n{\r\n    if (this == o) {\r\n        return true;\r\n    }\r\n    if (!(o instanceof TimelineEvent)) {\r\n        return false;\r\n    }\r\n    TimelineEvent event = (TimelineEvent) o;\r\n    if (timestamp != event.timestamp) {\r\n        return false;\r\n    }\r\n    if (!id.equals(event.id)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int compareTo(TimelineEvent other)\n{\r\n    if (timestamp > other.timestamp) {\r\n        return -1;\r\n    } else if (timestamp < other.timestamp) {\r\n        return 1;\r\n    } else {\r\n        return id.compareTo(other.id);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceTypeInfoResponse newInstance()\n{\r\n    return Records.newRecord(GetAllResourceTypeInfoResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceTypeInfo(List<ResourceTypeInfo> resourceTypes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ResourceTypeInfo> getResourceTypeInfo()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object other)\n{\r\n    if (this == other) {\r\n        return true;\r\n    }\r\n    if (!(other instanceof GetAllResourceTypeInfoResponse)) {\r\n        return false;\r\n    }\r\n    return ((GetAllResourceTypeInfoResponse) other).getResourceTypeInfo().equals(this.getResourceTypeInfo());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return this.getResourceTypeInfo().hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "FailApplicationAttemptRequest newInstance(ApplicationAttemptId attemptId)\n{\r\n    FailApplicationAttemptRequest request = Records.newRecord(FailApplicationAttemptRequest.class);\r\n    request.setApplicationAttemptId(attemptId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptId(ApplicationAttemptId applicationAttemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationReportRequest newInstance(ApplicationId applicationId)\n{\r\n    GetApplicationReportRequest request = Records.newRecord(GetApplicationReportRequest.class);\r\n    request.setApplicationId(applicationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ValidateVolumeCapabilitiesRequest newInstance(String volumeId, List<VolumeCapability> volumeCapabilities, Map<String, String> volumeAttributes)\n{\r\n    ValidateVolumeCapabilitiesRequest request = Records.newRecord(ValidateVolumeCapabilitiesRequest.class);\r\n    request.setVolumeId(volumeId);\r\n    request.setVolumeAttributes(volumeAttributes);\r\n    for (VolumeCapability capability : volumeCapabilities) {\r\n        request.addVolumeCapability(capability);\r\n    }\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ValidateVolumeCapabilitiesRequest newInstance(String volumeId, Map<String, String> volumeAttributes)\n{\r\n    ValidateVolumeCapabilitiesRequest request = Records.newRecord(ValidateVolumeCapabilitiesRequest.class);\r\n    request.setVolumeId(volumeId);\r\n    request.setVolumeAttributes(volumeAttributes);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVolumeId(String volumeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getVolumeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVolumeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVolumeAttributes(Map<String, String> attributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getVolumeAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "addVolumeCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void addVolumeCapability(VolumeCapability volumeCapability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeCapabilities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<VolumeCapability> getVolumeCapabilities()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String getId()\n{\r\n    String id = super.getId();\r\n    if (id == null) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(getCluster()).append('/').append(getDate().getTime()).append('/').append(getUser()).append('@').append(getFlowName());\r\n        id = sb.toString();\r\n        setId(id);\r\n    }\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "int compareTo(TimelineEntity entity)\n{\r\n    int comparison = getType().compareTo(entity.getType());\r\n    if (comparison == 0) {\r\n        FlowActivityEntity other = (FlowActivityEntity) entity;\r\n        int clusterComparison = getCluster().compareTo(other.getCluster());\r\n        if (clusterComparison != 0) {\r\n            return clusterComparison;\r\n        }\r\n        int dateComparisonDescending = (int) (other.getDate().getTime() - getDate().getTime());\r\n        if (dateComparisonDescending != 0) {\r\n            return dateComparisonDescending;\r\n        }\r\n        int userComparison = getUser().compareTo(other.getUser());\r\n        if (userComparison != 0) {\r\n            return userComparison;\r\n        }\r\n        return getFlowName().compareTo(other.getFlowName());\r\n    } else {\r\n        return comparison;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    return super.equals(obj);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return super.hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getCluster",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getCluster()\n{\r\n    return (String) getInfo().get(CLUSTER_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setCluster",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setCluster(String cluster)\n{\r\n    addInfo(CLUSTER_INFO_KEY, cluster);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getDate",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Date getDate()\n{\r\n    Object date = getInfo().get(DATE_INFO_KEY);\r\n    if (date != null) {\r\n        if (date instanceof Long) {\r\n            return new Date((Long) date);\r\n        } else if (date instanceof Date) {\r\n            return (Date) date;\r\n        }\r\n    }\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setDate",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setDate(long time)\n{\r\n    Date date = new Date(time);\r\n    addInfo(DATE_INFO_KEY, date);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getUser()\n{\r\n    return (String) getInfo().get(USER_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setUser",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setUser(String user)\n{\r\n    addInfo(USER_INFO_KEY, user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getFlowName",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getFlowName()\n{\r\n    return (String) getInfo().get(FLOW_NAME_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setFlowName",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setFlowName(String flowName)\n{\r\n    addInfo(FLOW_NAME_INFO_KEY, flowName);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addFlowRun",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addFlowRun(FlowRunEntity run)\n{\r\n    flowRuns.add(run);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addFlowRuns",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addFlowRuns(Collection<FlowRunEntity> runs)\n{\r\n    flowRuns.addAll(runs);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getFlowRuns",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NavigableSet<FlowRunEntity> getFlowRuns()\n{\r\n    return flowRuns;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getNumberOfRuns",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getNumberOfRuns()\n{\r\n    return flowRuns.size();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "UpdateContainerError newInstance(String reason, UpdateContainerRequest updateContainerRequest)\n{\r\n    UpdateContainerError error = Records.newRecord(UpdateContainerError.class);\r\n    error.setReason(reason);\r\n    error.setUpdateContainerRequest(updateContainerRequest);\r\n    return error;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReason",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getReason()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReason",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReason(String reason)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCurrentContainerVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getCurrentContainerVersion()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCurrentContainerVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCurrentContainerVersion(int currentVersion)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUpdateContainerRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "UpdateContainerRequest getUpdateContainerRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUpdateContainerRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdateContainerRequest(UpdateContainerRequest updateContainerRequest)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    String reason = getReason();\r\n    UpdateContainerRequest updateReq = getUpdateContainerRequest();\r\n    result = prime * result + ((reason == null) ? 0 : reason.hashCode());\r\n    result = prime * result + ((updateReq == null) ? 0 : updateReq.hashCode());\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String toString()\n{\r\n    return \"UpdateContainerError{reason=\" + getReason() + \", \" + \"currentVersion=\" + getCurrentContainerVersion() + \", \" + \"req=\" + getUpdateContainerRequest() + \"}\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    UpdateContainerError other = (UpdateContainerError) obj;\r\n    String reason = getReason();\r\n    if (reason == null) {\r\n        if (other.getReason() != null) {\r\n            return false;\r\n        }\r\n    } else if (!reason.equals(other.getReason())) {\r\n        return false;\r\n    }\r\n    UpdateContainerRequest req = getUpdateContainerRequest();\r\n    if (req == null) {\r\n        if (other.getUpdateContainerRequest() != null) {\r\n            return false;\r\n        }\r\n    } else if (!req.equals(other.getUpdateContainerRequest())) {\r\n        return false;\r\n    }\r\n    return getCurrentContainerVersion() == other.getCurrentContainerVersion();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Priority newInstance(int p)\n{\r\n    Priority priority = Records.newRecord(Priority.class);\r\n    priority.setPriority(p);\r\n    return priority;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(int priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 517861;\r\n    int result = 9511;\r\n    result = prime * result + getPriority();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    Priority other = (Priority) obj;\r\n    if (getPriority() != other.getPriority())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int compareTo(Priority other)\n{\r\n    return other.getPriority() - this.getPriority();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return \"{Priority: \" + getPriority() + \"}\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshSuperUserGroupsConfigurationResponse newInstance()\n{\r\n    RefreshSuperUserGroupsConfigurationResponse response = Records.newRecord(RefreshSuperUserGroupsConfigurationResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "KillApplicationRequest newInstance(ApplicationId applicationId)\n{\r\n    KillApplicationRequest request = Records.newRecord(KillApplicationRequest.class);\r\n    request.setApplicationId(applicationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ContainerUpdateRequest newInstance(List<Token> containersToIncrease)\n{\r\n    ContainerUpdateRequest request = Records.newRecord(ContainerUpdateRequest.class);\r\n    request.setContainersToUpdate(containersToIncrease);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainersToUpdate",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<Token> getContainersToUpdate()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainersToUpdate",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainersToUpdate(List<Token> containersToUpdate)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesRequest newInstance()\n{\r\n    RefreshNodesRequest request = Records.newRecord(RefreshNodesRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshNodesRequest newInstance(DecommissionType decommissionType)\n{\r\n    RefreshNodesRequest request = Records.newRecord(RefreshNodesRequest.class);\r\n    request.setDecommissionType(decommissionType);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "RefreshNodesRequest newInstance(DecommissionType decommissionType, Integer timeout)\n{\r\n    RefreshNodesRequest request = Records.newRecord(RefreshNodesRequest.class);\r\n    request.setDecommissionType(decommissionType);\r\n    request.setDecommissionTimeout(timeout);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setDecommissionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDecommissionType(DecommissionType decommissionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getDecommissionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "DecommissionType getDecommissionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setDecommissionTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDecommissionTimeout(Integer timeout)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getDecommissionTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Integer getDecommissionTimeout()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshUserToGroupsMappingsRequest newInstance()\n{\r\n    RefreshUserToGroupsMappingsRequest request = Records.newRecord(RefreshUserToGroupsMappingsRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getName()\n{\r\n    return name;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setName(String rName)\n{\r\n    this.name = rName;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUnits",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUnits()\n{\r\n    return units;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUnits",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setUnits(String rUnits)\n{\r\n    if (!UnitsConversionUtil.KNOWN_UNITS.contains(rUnits)) {\r\n        throw new IllegalArgumentException(\"Unknown unit '\" + rUnits + \"'. Known units are \" + UnitsConversionUtil.KNOWN_UNITS);\r\n    }\r\n    this.units = rUnits;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUnitsWithoutValidation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUnitsWithoutValidation(String rUnits)\n{\r\n    this.units = rUnits;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceTypes getResourceType()\n{\r\n    return resourceType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceType(ResourceTypes type)\n{\r\n    this.resourceType = type;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getValue()\n{\r\n    return value;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setValue(long rValue)\n{\r\n    this.value = rValue;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMinimumAllocation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getMinimumAllocation()\n{\r\n    return minimumAllocation;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMinimumAllocation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMinimumAllocation(long minimumAllocation)\n{\r\n    this.minimumAllocation = minimumAllocation;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaximumAllocation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getMaximumAllocation()\n{\r\n    return maximumAllocation;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaximumAllocation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaximumAllocation(long maximumAllocation)\n{\r\n    this.maximumAllocation = maximumAllocation;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getAttributes()\n{\r\n    return attributes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributes(Map<String, String> attributes)\n{\r\n    if (attributes != null) {\r\n        this.attributes = attributes;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getTags()\n{\r\n    return this.tags;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTags(Set<String> tags)\n{\r\n    if (tags != null) {\r\n        this.tags = tags;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(ResourceInformation other)\n{\r\n    ResourceInformation ret = new ResourceInformation();\r\n    copy(other, ret);\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, long value, ResourceTypes type, long minimumAllocation, long maximumAllocation)\n{\r\n    return ResourceInformation.newInstance(name, units, value, type, minimumAllocation, maximumAllocation, ImmutableSet.of(), ImmutableMap.of());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, long value, ResourceTypes type, long minimumAllocation, long maximumAllocation, Set<String> tags, Map<String, String> attributes)\n{\r\n    ResourceInformation ret = new ResourceInformation();\r\n    ret.setName(name);\r\n    ret.setResourceType(type);\r\n    ret.setUnitsWithoutValidation(units);\r\n    ret.setValue(value);\r\n    ret.setMinimumAllocation(minimumAllocation);\r\n    ret.setMaximumAllocation(maximumAllocation);\r\n    ret.setTags(tags);\r\n    ret.setAttributes(attributes);\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, long value)\n{\r\n    return ResourceInformation.newInstance(name, units, value, ResourceTypes.COUNTABLE, 0L, Long.MAX_VALUE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units)\n{\r\n    return ResourceInformation.newInstance(name, units, 0L, ResourceTypes.COUNTABLE, 0L, Long.MAX_VALUE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, long value, Set<String> tags, Map<String, String> attributes)\n{\r\n    return ResourceInformation.newInstance(name, units, value, ResourceTypes.COUNTABLE, 0L, Long.MAX_VALUE, tags, attributes);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, ResourceTypes resourceType)\n{\r\n    return ResourceInformation.newInstance(name, units, 0L, resourceType, 0L, Long.MAX_VALUE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, String units, long minRes, long maxRes)\n{\r\n    return ResourceInformation.newInstance(name, units, 0L, ResourceTypes.COUNTABLE, minRes, maxRes);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name, long value)\n{\r\n    return ResourceInformation.newInstance(name, \"\", value, ResourceTypes.COUNTABLE, 0L, Long.MAX_VALUE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation newInstance(String name)\n{\r\n    return ResourceInformation.newInstance(name, \"\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "copy",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "void copy(ResourceInformation src, ResourceInformation dst)\n{\r\n    dst.setName(src.getName());\r\n    dst.setResourceType(src.getResourceType());\r\n    dst.setUnits(src.getUnits());\r\n    dst.setValue(src.getValue());\r\n    dst.setMinimumAllocation(src.getMinimumAllocation());\r\n    dst.setMaximumAllocation(src.getMaximumAllocation());\r\n    dst.setTags(src.getTags());\r\n    dst.setAttributes(src.getAttributes());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String toString()\n{\r\n    return \"name: \" + this.name + \", units: \" + this.units + \", type: \" + resourceType + \", value: \" + value + \", minimum allocation: \" + minimumAllocation + \", maximum allocation: \" + maximumAllocation + \", tags: \" + tags + \", attributes \" + attributes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getShorthandRepresentation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getShorthandRepresentation()\n{\r\n    return \"\" + this.value + this.units;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof ResourceInformation)) {\r\n        return false;\r\n    }\r\n    ResourceInformation r = (ResourceInformation) obj;\r\n    if (!this.name.equals(r.getName()) || !this.resourceType.equals(r.getResourceType()) || !this.tags.equals(r.getTags()) || !this.attributes.equals(r.getAttributes())) {\r\n        return false;\r\n    }\r\n    if (this.units.equals(r.units)) {\r\n        return this.value == r.value;\r\n    }\r\n    return (UnitsConversionUtil.compare(this.units, this.value, r.units, r.value) == 0);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 263167;\r\n    int result = 939769357 + name.hashCode();\r\n    result = prime * result + resourceType.hashCode();\r\n    result = prime * result + units.hashCode();\r\n    result = prime * result + Long.hashCode(value);\r\n    if (tags != null && !tags.isEmpty()) {\r\n        result = prime * result + tags.hashCode();\r\n    }\r\n    if (attributes != null && !attributes.isEmpty()) {\r\n        result = prime * result + attributes.hashCode();\r\n    }\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int compareTo(ResourceInformation other)\n{\r\n    int diff = this.name.compareTo(other.name);\r\n    if (diff == 0) {\r\n        diff = UnitsConversionUtil.compare(this.units, this.value, other.units, other.value);\r\n        if (diff == 0) {\r\n            diff = this.resourceType.compareTo(other.resourceType);\r\n        }\r\n    }\r\n    return diff;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainersRequest newInstance(ApplicationAttemptId applicationAttemptId)\n{\r\n    GetContainersRequest request = Records.newRecord(GetContainersRequest.class);\r\n    request.setApplicationAttemptId(applicationAttemptId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptId(ApplicationAttemptId applicationAttemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeToAttributes newInstance(String node, List<NodeAttribute> attributes)\n{\r\n    NodeToAttributes nodeIdToAttributes = Records.newRecord(NodeToAttributes.class);\r\n    nodeIdToAttributes.setNode(node);\r\n    nodeIdToAttributes.setNodeAttributes(attributes);\r\n    return nodeIdToAttributes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNode()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNode(String node)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeAttribute> getNodeAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeAttributes(List<NodeAttribute> attributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationDeleteRequest newInstance(ReservationId reservationId)\n{\r\n    ReservationDeleteRequest request = Records.newRecord(ReservationDeleteRequest.class);\r\n    request.setReservationId(reservationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(ReservationId reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationSubmissionResponse newInstance()\n{\r\n    ReservationSubmissionResponse response = Records.newRecord(ReservationSubmissionResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "RegisterApplicationMasterRequest newInstance(String host, int port, String trackingUrl)\n{\r\n    RegisterApplicationMasterRequest request = Records.newRecord(RegisterApplicationMasterRequest.class);\r\n    request.setHost(host);\r\n    request.setRpcPort(port);\r\n    request.setTrackingUrl(trackingUrl);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getRpcPort()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRpcPort(int port)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTrackingUrl(String trackingUrl)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getPlacementConstraints",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<Set<String>, PlacementConstraint> getPlacementConstraints()\n{\r\n    return new HashMap<>();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setPlacementConstraints",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPlacementConstraints(Map<Set<String>, PlacementConstraint> placementConstraints)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\csi",
  "methodName" : "getCsiDriverNames",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String[] getCsiDriverNames(Configuration conf)\n{\r\n    return conf.getStrings(YarnConfiguration.NM_CSI_DRIVER_NAMES);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\csi",
  "methodName" : "getCsiDriverEndpoint",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String getCsiDriverEndpoint(String driverName, Configuration conf) throws YarnException\n{\r\n    String driverEndpointProperty = YarnConfiguration.NM_CSI_DRIVER_PREFIX + driverName + YarnConfiguration.NM_CSI_DRIVER_ENDPOINT_SUFFIX;\r\n    String driverEndpoint = conf.get(driverEndpointProperty);\r\n    if (Strings.isNullOrEmpty(driverEndpoint)) {\r\n        throw new YarnException(\"CSI driver's endpoint is not specified or\" + \" invalid, property \" + driverEndpointProperty + \" is not defined\");\r\n    }\r\n    return driverEndpoint;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\csi",
  "methodName" : "getCsiAdaptorAddressForDriver",
  "errType" : [ "IllegalArgumentException" ],
  "containingMethodsNum" : 1,
  "sourceCodeText" : "InetSocketAddress getCsiAdaptorAddressForDriver(String driverName, Configuration conf) throws YarnException\n{\r\n    String configName = YarnConfiguration.NM_CSI_ADAPTOR_PREFIX + driverName + YarnConfiguration.NM_CSI_ADAPTOR_ADDRESS_SUFFIX;\r\n    String errorMessage = \"Failed to load CSI adaptor address for driver \" + driverName + \", configuration property \" + configName + \" is not defined or invalid.\";\r\n    try {\r\n        InetSocketAddress address = conf.getSocketAddr(configName, null, -1);\r\n        if (address == null) {\r\n            throw new YarnException(errorMessage);\r\n        }\r\n        return address;\r\n    } catch (IllegalArgumentException e) {\r\n        throw new YarnException(errorMessage);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ValidateVolumeCapabilitiesResponse newInstance(boolean supported, String responseMessage)\n{\r\n    ValidateVolumeCapabilitiesResponse record = Records.newRecord(ValidateVolumeCapabilitiesResponse.class);\r\n    record.setResponseMessage(responseMessage);\r\n    record.setSupported(supported);\r\n    return record;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSupported",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSupported(boolean supported)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "isSupported",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isSupported()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResponseMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResponseMessage(String responseMessage)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResponseMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getResponseMessage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RemoveFromClusterNodeLabelsResponse newInstance()\n{\r\n    return Records.newRecord(RemoveFromClusterNodeLabelsResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "StartContainerRequest newInstance(ContainerLaunchContext context, Token container)\n{\r\n    StartContainerRequest request = Records.newRecord(StartContainerRequest.class);\r\n    request.setContainerLaunchContext(context);\r\n    request.setContainerToken(container);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerLaunchContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerLaunchContext getContainerLaunchContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerLaunchContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerLaunchContext(ContainerLaunchContext context)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getContainerToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerToken(Token container)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 15,
  "sourceCodeText" : "QueueInfo newInstance(String queueName, String queuePath, float capacity, float maximumCapacity, float currentCapacity, List<QueueInfo> childQueues, List<ApplicationReport> applications, QueueState queueState, Set<String> accessibleNodeLabels, String defaultNodeLabelExpression, QueueStatistics queueStatistics, boolean preemptionDisabled, float weight, int maxParallelApps)\n{\r\n    QueueInfo queueInfo = Records.newRecord(QueueInfo.class);\r\n    queueInfo.setQueueName(queueName);\r\n    queueInfo.setQueuePath(queuePath);\r\n    queueInfo.setCapacity(capacity);\r\n    queueInfo.setMaximumCapacity(maximumCapacity);\r\n    queueInfo.setCurrentCapacity(currentCapacity);\r\n    queueInfo.setChildQueues(childQueues);\r\n    queueInfo.setApplications(applications);\r\n    queueInfo.setQueueState(queueState);\r\n    queueInfo.setAccessibleNodeLabels(accessibleNodeLabels);\r\n    queueInfo.setDefaultNodeLabelExpression(defaultNodeLabelExpression);\r\n    queueInfo.setQueueStatistics(queueStatistics);\r\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\r\n    queueInfo.setWeight(weight);\r\n    queueInfo.setMaxParallelApps(maxParallelApps);\r\n    return queueInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "QueueInfo newInstance(String queueName, String queuePath, float capacity, float maximumCapacity, float currentCapacity, List<QueueInfo> childQueues, List<ApplicationReport> applications, QueueState queueState, Set<String> accessibleNodeLabels, String defaultNodeLabelExpression, QueueStatistics queueStatistics, boolean preemptionDisabled, float weight, int maxParallelApps, Map<String, QueueConfigurations> queueConfigurations)\n{\r\n    QueueInfo queueInfo = QueueInfo.newInstance(queueName, queuePath, capacity, maximumCapacity, currentCapacity, childQueues, applications, queueState, accessibleNodeLabels, defaultNodeLabelExpression, queueStatistics, preemptionDisabled, weight, maxParallelApps);\r\n    queueInfo.setQueueConfigurations(queueConfigurations);\r\n    return queueInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "QueueInfo newInstance(String queueName, String queuePath, float capacity, float maximumCapacity, float currentCapacity, List<QueueInfo> childQueues, List<ApplicationReport> applications, QueueState queueState, Set<String> accessibleNodeLabels, String defaultNodeLabelExpression, QueueStatistics queueStatistics, boolean preemptionDisabled, float weight, int maxParallelApps, Map<String, QueueConfigurations> queueConfigurations, boolean intraQueuePreemptionDisabled)\n{\r\n    QueueInfo queueInfo = QueueInfo.newInstance(queueName, queuePath, capacity, maximumCapacity, currentCapacity, childQueues, applications, queueState, accessibleNodeLabels, defaultNodeLabelExpression, queueStatistics, preemptionDisabled, weight, maxParallelApps, queueConfigurations);\r\n    queueInfo.setIntraQueuePreemptionDisabled(intraQueuePreemptionDisabled);\r\n    return queueInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueueName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueName(String queueName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueuePath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueuePath()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueuePath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueuePath(String queuePath)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapacity(float capacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getWeight",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getWeight()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setWeight",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWeight(float weight)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaxParallelApps",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getMaxParallelApps()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaxParallelApps",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaxParallelApps(int maxParallelApps)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMaximumCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getMaximumCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setMaximumCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaximumCapacity(float maximumCapacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCurrentCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getCurrentCapacity()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCurrentCapacity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCurrentCapacity(float currentCapacity)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getChildQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<QueueInfo> getChildQueues()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setChildQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setChildQueues(List<QueueInfo> childQueues)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplications",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ApplicationReport> getApplications()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplications",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplications(List<ApplicationReport> applications)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "QueueState getQueueState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueState(QueueState queueState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAccessibleNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getAccessibleNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAccessibleNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAccessibleNodeLabels(Set<String> labels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDefaultNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDefaultNodeLabelExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDefaultNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDefaultNodeLabelExpression(String defaultLabelExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueStatistics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "QueueStatistics getQueueStatistics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueStatistics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueStatistics(QueueStatistics queueStatistics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPreemptionDisabled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Boolean getPreemptionDisabled()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPreemptionDisabled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPreemptionDisabled(boolean preemptionDisabled)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueConfigurations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, QueueConfigurations> getQueueConfigurations()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueConfigurations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueConfigurations(Map<String, QueueConfigurations> queueConfigurations)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getIntraQueuePreemptionDisabled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Boolean getIntraQueuePreemptionDisabled()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setIntraQueuePreemptionDisabled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIntraQueuePreemptionDisabled(boolean intraQueuePreemptionDisabled)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesResourcesResponse newInstance()\n{\r\n    RefreshNodesResourcesResponse response = Records.newRecord(RefreshNodesResourcesResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationRequest newInstance(Resource capability, int numContainers)\n{\r\n    return newInstance(capability, numContainers, 1, -1);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "ReservationRequest newInstance(Resource capability, int numContainers, int concurrency, long duration)\n{\r\n    ReservationRequest request = Records.newRecord(ReservationRequest.class);\r\n    request.setCapability(capability);\r\n    request.setNumContainers(numContainers);\r\n    request.setConcurrency(concurrency);\r\n    request.setDuration(duration);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumContainers(int numContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getConcurrency",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getConcurrency()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setConcurrency",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setConcurrency(int numContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDuration",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getDuration()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDuration",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDuration(long duration)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    Resource capability = getCapability();\r\n    result = prime * result + ((capability == null) ? 0 : capability.hashCode());\r\n    result = prime * result + getNumContainers();\r\n    result = prime * result + getConcurrency();\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ReservationRequest other = (ReservationRequest) obj;\r\n    Resource capability = getCapability();\r\n    if (capability == null) {\r\n        if (other.getCapability() != null)\r\n            return false;\r\n    } else if (!capability.equals(other.getCapability()))\r\n        return false;\r\n    if (getNumContainers() != other.getNumContainers())\r\n        return false;\r\n    if (getConcurrency() != other.getConcurrency())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "int compareTo(ReservationRequest other)\n{\r\n    int numContainersComparison = this.getNumContainers() - other.getNumContainers();\r\n    if (numContainersComparison == 0) {\r\n        int concurrencyComparison = this.getConcurrency() - other.getConcurrency();\r\n        if (concurrencyComparison == 0) {\r\n            return this.getCapability().compareTo(other.getCapability());\r\n        } else {\r\n            return concurrencyComparison;\r\n        }\r\n    } else {\r\n        return numContainersComparison;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ReservationRequests newInstance(List<ReservationRequest> reservationResources, ReservationRequestInterpreter type)\n{\r\n    ReservationRequests reservationRequests = Records.newRecord(ReservationRequests.class);\r\n    reservationRequests.setReservationResources(reservationResources);\r\n    reservationRequests.setInterpreter(type);\r\n    return reservationRequests;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ReservationRequest> getReservationResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationResources(List<ReservationRequest> reservationResources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getInterpreter",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationRequestInterpreter getInterpreter()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setInterpreter",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setInterpreter(ReservationRequestInterpreter interpreter)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "checkSpecialResources",
  "errType" : null,
  "containingMethodsNum" : 12,
  "sourceCodeText" : "void checkSpecialResources(Map<String, ResourceInformation> resourceInformationMap) throws YarnRuntimeException\n{\r\n    String[] keys = { \"memory\", ResourceInformation.MEMORY_URI, ResourceInformation.VCORES_URI };\r\n    for (String key : keys) {\r\n        if (resourceInformationMap.containsKey(key)) {\r\n            LOG.warn(\"Attempt to define resource '\" + key + \"', but it is not allowed.\");\r\n            throw new YarnRuntimeException(\"Attempt to re-define mandatory resource '\" + key + \"'.\");\r\n        }\r\n    }\r\n    for (Map.Entry<String, ResourceInformation> mandatoryResourceEntry : ResourceInformation.SPECIAL_RESOURCES.entrySet()) {\r\n        String key = mandatoryResourceEntry.getKey();\r\n        ResourceInformation mandatoryRI = mandatoryResourceEntry.getValue();\r\n        ResourceInformation newDefinedRI = resourceInformationMap.get(key);\r\n        if (newDefinedRI != null) {\r\n            String expectedUnit = mandatoryRI.getUnits();\r\n            ResourceTypes expectedType = mandatoryRI.getResourceType();\r\n            String actualUnit = newDefinedRI.getUnits();\r\n            ResourceTypes actualType = newDefinedRI.getResourceType();\r\n            if (!expectedUnit.equals(actualUnit) || !expectedType.equals(actualType)) {\r\n                throw new YarnRuntimeException(\"Defined mandatory resource type=\" + key + \" inside resource-types.xml, however its type or \" + \"unit is conflict to mandatory resource types, expected type=\" + expectedType + \", unit=\" + expectedUnit + \"; actual type=\" + actualType + \" actual unit=\" + actualUnit);\r\n            }\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "addMandatoryResources",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "void addMandatoryResources(Map<String, ResourceInformation> res)\n{\r\n    ResourceInformation ri;\r\n    if (!res.containsKey(MEMORY)) {\r\n        LOG.debug(\"Adding resource type - name = {}, units = {}, type = {}\", MEMORY, ResourceInformation.MEMORY_MB.getUnits(), ResourceTypes.COUNTABLE);\r\n        ri = ResourceInformation.newInstance(MEMORY, ResourceInformation.MEMORY_MB.getUnits());\r\n        res.put(MEMORY, ri);\r\n    }\r\n    if (!res.containsKey(VCORES)) {\r\n        LOG.debug(\"Adding resource type - name = {}, units = {}, type = {}\", VCORES, ResourceInformation.VCORES.getUnits(), ResourceTypes.COUNTABLE);\r\n        ri = ResourceInformation.newInstance(VCORES);\r\n        res.put(VCORES, ri);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "setAllocationForMandatoryResources",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void setAllocationForMandatoryResources(Map<String, ResourceInformation> res, Configuration conf)\n{\r\n    ResourceInformation mem = res.get(ResourceInformation.MEMORY_MB.getName());\r\n    mem.setMinimumAllocation(getAllocation(conf, YarnConfiguration.RESOURCE_TYPES + \".\" + mem.getName() + MINIMUM_ALLOCATION, YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB, YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\r\n    mem.setMaximumAllocation(getAllocation(conf, YarnConfiguration.RESOURCE_TYPES + \".\" + mem.getName() + MAXIMUM_ALLOCATION, YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB, YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB));\r\n    ResourceInformation cpu = res.get(ResourceInformation.VCORES.getName());\r\n    cpu.setMinimumAllocation(getAllocation(conf, YarnConfiguration.RESOURCE_TYPES + \".\" + cpu.getName() + MINIMUM_ALLOCATION, YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES, YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES));\r\n    cpu.setMaximumAllocation(getAllocation(conf, YarnConfiguration.RESOURCE_TYPES + \".\" + cpu.getName() + MAXIMUM_ALLOCATION, YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES, YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getAllocation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "long getAllocation(Configuration conf, String resourceTypesKey, String schedulerKey, long schedulerDefault)\n{\r\n    long value = conf.getLong(resourceTypesKey, -1L);\r\n    if (value == -1) {\r\n        LOG.debug(\"Mandatory Resource '{}' is not \" + \"configured in resource-types config file. Setting allocation \" + \"specified using '{}'\", resourceTypesKey, schedulerKey);\r\n        value = conf.getLong(schedulerKey, schedulerDefault);\r\n    }\r\n    return value;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "validateNameOfResourceNameAndThrowException",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void validateNameOfResourceNameAndThrowException(String resourceName) throws YarnRuntimeException\n{\r\n    Matcher matcher = RESOURCE_NAME_PATTERN.matcher(resourceName);\r\n    if (!matcher.matches()) {\r\n        String message = String.format(\"'%s' is not a valid resource name. A valid resource name must\" + \" begin with a letter and contain only letters, numbers, \" + \"and any of: '.', '_', or '-'. A valid resource name may also\" + \" be optionally preceded by a name space followed by a slash.\" + \" A valid name space consists of period-separated groups of\" + \" letters, numbers, and dashes.\", resourceName);\r\n        throw new YarnRuntimeException(message);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "fetchMaximumAllocationFromConfig",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Resource fetchMaximumAllocationFromConfig(Configuration conf)\n{\r\n    Map<String, ResourceInformation> resourceInformationMap = getResourceInformationMapFromConfig(conf);\r\n    Resource ret = Resource.newInstance(0, 0);\r\n    for (ResourceInformation entry : resourceInformationMap.values()) {\r\n        ret.setResourceValue(entry.getName(), entry.getMaximumAllocation());\r\n    }\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceInformationMapFromConfig",
  "errType" : null,
  "containingMethodsNum" : 17,
  "sourceCodeText" : "Map<String, ResourceInformation> getResourceInformationMapFromConfig(Configuration conf)\n{\r\n    Map<String, ResourceInformation> resourceInformationMap = new HashMap<>();\r\n    String[] resourceNames = conf.getTrimmedStrings(YarnConfiguration.RESOURCE_TYPES);\r\n    if (resourceNames != null && resourceNames.length != 0) {\r\n        for (String resourceName : resourceNames) {\r\n            String resourceUnits = conf.get(YarnConfiguration.RESOURCE_TYPES + \".\" + resourceName + UNITS, \"\");\r\n            String resourceTypeName = conf.get(YarnConfiguration.RESOURCE_TYPES + \".\" + resourceName + TYPE, ResourceTypes.COUNTABLE.toString());\r\n            Long minimumAllocation = conf.getLong(YarnConfiguration.RESOURCE_TYPES + \".\" + resourceName + MINIMUM_ALLOCATION, 0L);\r\n            Long maximumAllocation = conf.getLong(YarnConfiguration.RESOURCE_TYPES + \".\" + resourceName + MAXIMUM_ALLOCATION, Long.MAX_VALUE);\r\n            if (resourceName == null || resourceName.isEmpty() || resourceUnits == null || resourceTypeName == null) {\r\n                throw new YarnRuntimeException(\"Incomplete configuration for resource type '\" + resourceName + \"'. One of name, units or type is configured incorrectly.\");\r\n            }\r\n            ResourceTypes resourceType = ResourceTypes.valueOf(resourceTypeName);\r\n            String[] resourceTags = conf.getTrimmedStrings(YarnConfiguration.RESOURCE_TYPES + \".\" + resourceName + TAGS);\r\n            Set<String> resourceTagSet = new HashSet<>();\r\n            Collections.addAll(resourceTagSet, resourceTags);\r\n            LOG.info(\"Adding resource type - name = \" + resourceName + \", units = \" + resourceUnits + \", type = \" + resourceTypeName);\r\n            if (resourceInformationMap.containsKey(resourceName)) {\r\n                throw new YarnRuntimeException(\"Error in config, key '\" + resourceName + \"' specified twice\");\r\n            }\r\n            resourceInformationMap.put(resourceName, ResourceInformation.newInstance(resourceName, resourceUnits, 0L, resourceType, minimumAllocation, maximumAllocation, resourceTagSet, null));\r\n        }\r\n    }\r\n    for (String name : resourceInformationMap.keySet()) {\r\n        validateNameOfResourceNameAndThrowException(name);\r\n    }\r\n    checkSpecialResources(resourceInformationMap);\r\n    addMandatoryResources(resourceInformationMap);\r\n    setAllocationForMandatoryResources(resourceInformationMap, conf);\r\n    return resourceInformationMap;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "initializeResourcesMap",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void initializeResourcesMap(Configuration conf)\n{\r\n    Map<String, ResourceInformation> resourceInformationMap = getResourceInformationMapFromConfig(conf);\r\n    initializeResourcesFromResourceInformationMap(resourceInformationMap);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "initializeResourcesFromResourceInformationMap",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void initializeResourcesFromResourceInformationMap(Map<String, ResourceInformation> resourceInformationMap)\n{\r\n    resourceTypes = Collections.unmodifiableMap(resourceInformationMap);\r\n    nonCountableResourceTypes = new HashMap<>();\r\n    updateKnownResources();\r\n    updateResourceTypeIndex();\r\n    initializedResources = true;\r\n    numKnownResourceTypes = resourceTypes.size();\r\n    numNonCountableResourceTypes = nonCountableResourceTypes.size();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "updateKnownResources",
  "errType" : null,
  "containingMethodsNum" : 12,
  "sourceCodeText" : "void updateKnownResources()\n{\r\n    resourceTypesArray = new ResourceInformation[resourceTypes.size()];\r\n    List<ResourceInformation> nonCountableResources = new ArrayList<>();\r\n    int index = 2;\r\n    for (ResourceInformation resInfo : resourceTypes.values()) {\r\n        if (resInfo.getName().equals(MEMORY)) {\r\n            resourceTypesArray[0] = ResourceInformation.newInstance(resourceTypes.get(MEMORY));\r\n        } else if (resInfo.getName().equals(VCORES)) {\r\n            resourceTypesArray[1] = ResourceInformation.newInstance(resourceTypes.get(VCORES));\r\n        } else {\r\n            if (resInfo.getTags() != null && resInfo.getTags().contains(EXTERNAL_VOLUME_RESOURCE_TAG)) {\r\n                nonCountableResources.add(resInfo);\r\n                continue;\r\n            }\r\n            resourceTypesArray[index] = ResourceInformation.newInstance(resInfo);\r\n            index++;\r\n        }\r\n    }\r\n    for (ResourceInformation resInfo : nonCountableResources) {\r\n        resourceTypesArray[index] = ResourceInformation.newInstance(resInfo);\r\n        nonCountableResourceTypes.put(resInfo.getName(), resInfo);\r\n        index++;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "updateResourceTypeIndex",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void updateResourceTypeIndex()\n{\r\n    RESOURCE_NAME_TO_INDEX.clear();\r\n    for (int index = 0; index < resourceTypesArray.length; index++) {\r\n        ResourceInformation resInfo = resourceTypesArray[index];\r\n        RESOURCE_NAME_TO_INDEX.put(resInfo.getName(), index);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypeIndex",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Integer> getResourceTypeIndex()\n{\r\n    return RESOURCE_NAME_TO_INDEX;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, ResourceInformation> getResourceTypes()\n{\r\n    return getResourceTypes(null, YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypesArray",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInformation[] getResourceTypesArray()\n{\r\n    initializeResourceTypesIfNeeded();\r\n    return resourceTypesArray;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getNumberOfKnownResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getNumberOfKnownResourceTypes()\n{\r\n    if (numKnownResourceTypes < 0) {\r\n        initializeResourceTypesIfNeeded();\r\n    }\r\n    return numKnownResourceTypes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getNumberOfCountableResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getNumberOfCountableResourceTypes()\n{\r\n    if (numKnownResourceTypes < 0) {\r\n        initializeResourceTypesIfNeeded();\r\n    }\r\n    return numKnownResourceTypes - numNonCountableResourceTypes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, ResourceInformation> getResourceTypes(Configuration conf)\n{\r\n    return getResourceTypes(conf, YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "initializeResourceTypesIfNeeded",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void initializeResourceTypesIfNeeded()\n{\r\n    initializeResourceTypesIfNeeded(null, YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "initializeResourceTypesIfNeeded",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void initializeResourceTypesIfNeeded(Configuration conf, String resourceFile)\n{\r\n    if (!initializedResources) {\r\n        synchronized (ResourceUtils.class) {\r\n            if (!initializedResources) {\r\n                Configuration resConf = conf;\r\n                if (resConf == null) {\r\n                    resConf = new YarnConfiguration();\r\n                }\r\n                addResourcesFileToConf(resourceFile, resConf);\r\n                initializeResourcesMap(resConf);\r\n            }\r\n        }\r\n    }\r\n    numKnownResourceTypes = resourceTypes.size();\r\n    numNonCountableResourceTypes = nonCountableResourceTypes.size();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, ResourceInformation> getResourceTypes(Configuration conf, String resourceFile)\n{\r\n    initializeResourceTypesIfNeeded(conf, resourceFile);\r\n    return resourceTypes;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getConfInputStream",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 4,
  "sourceCodeText" : "InputStream getConfInputStream(String resourceFile, Configuration conf) throws IOException, YarnException\n{\r\n    ConfigurationProvider provider = ConfigurationProviderFactory.getConfigurationProvider(conf);\r\n    try {\r\n        provider.init(conf);\r\n    } catch (Exception e) {\r\n        throw new IOException(e);\r\n    }\r\n    InputStream ris = provider.getConfigurationInputStream(conf, resourceFile);\r\n    if (ris == null) {\r\n        if (conf.getResource(resourceFile) == null) {\r\n            throw new FileNotFoundException(\"Unable to find \" + resourceFile);\r\n        }\r\n        throw new IOException(\"Unable to open resource types file '\" + resourceFile + \"'. Using provider \" + provider);\r\n    }\r\n    return ris;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "addResourcesFileToConf",
  "errType" : [ "FileNotFoundException", "IOException|YarnException" ],
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void addResourcesFileToConf(String resourceFile, Configuration conf)\n{\r\n    try {\r\n        InputStream ris = getConfInputStream(resourceFile, conf);\r\n        LOG.debug(\"Found {}, adding to configuration\", resourceFile);\r\n        conf.addResource(ris);\r\n    } catch (FileNotFoundException fe) {\r\n        LOG.info(\"Unable to find '\" + resourceFile + \"'.\");\r\n    } catch (IOException | YarnException ex) {\r\n        LOG.error(\"Exception trying to read resource types configuration '\" + resourceFile + \"'.\", ex);\r\n        throw new YarnRuntimeException(ex);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "resetResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void resetResourceTypes()\n{\r\n    initializedResources = false;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "resetResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<String, ResourceInformation> resetResourceTypes(Configuration conf)\n{\r\n    synchronized (ResourceUtils.class) {\r\n        initializedResources = false;\r\n    }\r\n    return getResourceTypes(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getUnits",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getUnits(String resourceValue)\n{\r\n    return parseResourceValue(resourceValue)[0];\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "parseResourceValue",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "String[] parseResourceValue(String resourceValue)\n{\r\n    String[] resource = new String[2];\r\n    int i = 0;\r\n    for (; i < resourceValue.length(); i++) {\r\n        if (Character.isAlphabetic(resourceValue.charAt(i))) {\r\n            break;\r\n        }\r\n    }\r\n    String units = resourceValue.substring(i);\r\n    if (StringUtils.isAlpha(units) || units.equals(\"\")) {\r\n        resource[0] = units;\r\n        resource[1] = resourceValue.substring(0, i);\r\n        return resource;\r\n    } else {\r\n        throw new IllegalArgumentException(\"Units '\" + units + \"'\" + \" contains non alphabet characters, which is not allowed.\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getValue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getValue(String resourceValue)\n{\r\n    return Long.parseLong(parseResourceValue(resourceValue)[1]);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getNodeResourceInformation",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Map<String, ResourceInformation> getNodeResourceInformation(Configuration conf)\n{\r\n    if (!initializedNodeResources) {\r\n        synchronized (ResourceUtils.class) {\r\n            if (!initializedNodeResources) {\r\n                Map<String, ResourceInformation> nodeResources = initializeNodeResourceInformation(conf);\r\n                checkSpecialResources(nodeResources);\r\n                addMandatoryResources(nodeResources);\r\n                setAllocationForMandatoryResources(nodeResources, conf);\r\n                readOnlyNodeResources = Collections.unmodifiableMap(nodeResources);\r\n                initializedNodeResources = true;\r\n            }\r\n        }\r\n    }\r\n    return readOnlyNodeResources;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "initializeNodeResourceInformation",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Map<String, ResourceInformation> initializeNodeResourceInformation(Configuration conf)\n{\r\n    Map<String, ResourceInformation> nodeResources = new HashMap<>();\r\n    addResourcesFileToConf(YarnConfiguration.NODE_RESOURCES_CONFIGURATION_FILE, conf);\r\n    for (Map.Entry<String, String> entry : conf) {\r\n        String key = entry.getKey();\r\n        String value = entry.getValue();\r\n        addResourceTypeInformation(key, value, nodeResources);\r\n    }\r\n    return nodeResources;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "addResourceTypeInformation",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "void addResourceTypeInformation(String prop, String value, Map<String, ResourceInformation> nodeResources)\n{\r\n    if (prop.startsWith(YarnConfiguration.NM_RESOURCES_PREFIX)) {\r\n        LOG.info(\"Found resource entry \" + prop);\r\n        String resourceType = prop.substring(YarnConfiguration.NM_RESOURCES_PREFIX.length());\r\n        if (!nodeResources.containsKey(resourceType)) {\r\n            nodeResources.put(resourceType, ResourceInformation.newInstance(resourceType));\r\n        }\r\n        String units = getUnits(value);\r\n        Long resourceValue = Long.valueOf(value.substring(0, value.length() - units.length()));\r\n        String destUnit = getDefaultUnit(resourceType);\r\n        if (!units.equals(destUnit)) {\r\n            resourceValue = UnitsConversionUtil.convert(units, destUnit, resourceValue);\r\n            units = destUnit;\r\n        }\r\n        nodeResources.get(resourceType).setValue(resourceValue);\r\n        nodeResources.get(resourceType).setUnits(units);\r\n        LOG.debug(\"Setting value for resource type {} to {} with units {}\", resourceType, resourceValue, units);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "resetNodeResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void resetNodeResources()\n{\r\n    initializedNodeResources = false;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypesMinimumAllocation",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "Resource getResourceTypesMinimumAllocation()\n{\r\n    Resource ret = Resource.newInstance(0, 0);\r\n    for (ResourceInformation entry : resourceTypesArray) {\r\n        String name = entry.getName();\r\n        if (name.equals(ResourceInformation.MEMORY_MB.getName())) {\r\n            ret.setMemorySize(entry.getMinimumAllocation());\r\n        } else if (name.equals(ResourceInformation.VCORES.getName())) {\r\n            Long tmp = entry.getMinimumAllocation();\r\n            if (tmp > Integer.MAX_VALUE) {\r\n                tmp = (long) Integer.MAX_VALUE;\r\n            }\r\n            ret.setVirtualCores(tmp.intValue());\r\n        } else {\r\n            ret.setResourceValue(name, entry.getMinimumAllocation());\r\n        }\r\n    }\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourceTypesMaximumAllocation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Resource getResourceTypesMaximumAllocation()\n{\r\n    Resource ret = Resource.newInstance(0, 0);\r\n    for (ResourceInformation entry : resourceTypesArray) {\r\n        ret.setResourceValue(entry.getName(), entry.getMaximumAllocation());\r\n    }\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getDefaultUnit",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String getDefaultUnit(String resourceType)\n{\r\n    ResourceInformation ri = getResourceTypes().get(resourceType);\r\n    if (ri != null) {\r\n        return ri.getUnits();\r\n    }\r\n    return \"\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getResourcesTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "List<ResourceTypeInfo> getResourcesTypeInfo()\n{\r\n    List<ResourceTypeInfo> array = new ArrayList<>();\r\n    Collection<ResourceInformation> resourcesInfo = ResourceUtils.getResourceTypes().values();\r\n    for (ResourceInformation resourceInfo : resourcesInfo) {\r\n        array.add(ResourceTypeInfo.newInstance(resourceInfo.getName(), resourceInfo.getUnits(), resourceInfo.getResourceType()));\r\n    }\r\n    return array;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "reinitializeResources",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void reinitializeResources(List<ResourceTypeInfo> resourceTypeInfo)\n{\r\n    Map<String, ResourceInformation> resourceInformationMap = new HashMap<>();\r\n    for (ResourceTypeInfo resourceType : resourceTypeInfo) {\r\n        resourceInformationMap.put(resourceType.getName(), ResourceInformation.newInstance(resourceType.getName(), resourceType.getDefaultUnit(), resourceType.getResourceType()));\r\n    }\r\n    ResourceUtils.initializeResourcesFromResourceInformationMap(resourceInformationMap);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getRequestedResourcesFromConfig",
  "errType" : null,
  "containingMethodsNum" : 16,
  "sourceCodeText" : "List<ResourceInformation> getRequestedResourcesFromConfig(Configuration configuration, String prefix)\n{\r\n    List<ResourceInformation> result = new ArrayList<>();\r\n    Map<String, String> customResourcesMap = configuration.getValByRegex(\"^\" + Pattern.quote(prefix) + YARN_IO_OPTIONAL + \"[^.]+$\");\r\n    for (Entry<String, String> resource : customResourcesMap.entrySet()) {\r\n        String resourceName = resource.getKey().substring(prefix.length());\r\n        Matcher matcher = RESOURCE_REQUEST_VALUE_PATTERN.matcher(resource.getValue());\r\n        if (!matcher.matches()) {\r\n            String errorMsg = \"Invalid resource request specified for property \" + resource.getKey() + \": \\\"\" + resource.getValue() + \"\\\", expected format is: value[ ][units]\";\r\n            LOG.error(errorMsg);\r\n            throw new IllegalArgumentException(errorMsg);\r\n        }\r\n        long value = Long.parseLong(matcher.group(1));\r\n        String unit = matcher.group(2);\r\n        if (unit.isEmpty()) {\r\n            unit = ResourceUtils.getDefaultUnit(resourceName);\r\n        }\r\n        ResourceInformation resourceInformation = new ResourceInformation();\r\n        resourceInformation.setName(resourceName);\r\n        resourceInformation.setValue(value);\r\n        resourceInformation.setUnits(unit);\r\n        result.add(resourceInformation);\r\n    }\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "areMandatoryResourcesAvailable",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void areMandatoryResourcesAvailable(Resource res)\n{\r\n    ResourceInformation memoryResourceInformation = res.getResourceInformation(MEMORY);\r\n    if (memoryResourceInformation != null) {\r\n        long value = memoryResourceInformation.getValue();\r\n        if (value > Integer.MAX_VALUE) {\r\n            throw new IllegalArgumentException(\"Value '\" + value + \"' for \" + \"resource memory is more than the maximum for an integer.\");\r\n        }\r\n        if (value == 0) {\r\n            throw new IllegalArgumentException(\"Invalid value for resource '\" + MEMORY + \"'. Value cannot be 0(zero).\");\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException(\"Mandatory resource 'memory-mb' \" + \"is missing.\");\r\n    }\r\n    ResourceInformation vcoresResourceInformation = res.getResourceInformation(VCORES);\r\n    if (vcoresResourceInformation != null) {\r\n        long value = vcoresResourceInformation.getValue();\r\n        if (value > Integer.MAX_VALUE) {\r\n            throw new IllegalArgumentException(\"Value '\" + value + \"' for resource\" + \" vcores is more than the maximum for an integer.\");\r\n        }\r\n        if (value == 0) {\r\n            throw new IllegalArgumentException(\"Invalid value for resource '\" + VCORES + \"'. Value cannot be 0(zero).\");\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException(\"Mandatory resource 'vcores' \" + \"is missing.\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "createResourceTypesArray",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "ResourceInformation[] createResourceTypesArray(Map<String, Long> res)\n{\r\n    initializeResourceTypesIfNeeded();\r\n    ResourceInformation[] info = new ResourceInformation[resourceTypes.size()];\r\n    for (Entry<String, Integer> entry : RESOURCE_NAME_TO_INDEX.entrySet()) {\r\n        int index = entry.getValue();\r\n        Long value = res.get(entry.getKey());\r\n        if (value == null) {\r\n            value = 0L;\r\n        }\r\n        info[index] = new ResourceInformation();\r\n        ResourceInformation.copy(resourceTypesArray[index], info[index]);\r\n        info[index].setValue(value);\r\n    }\r\n    return info;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "createResourceWithSameValue",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Resource createResourceWithSameValue(long value)\n{\r\n    LightWeightResource res = new LightWeightResource(value, Long.valueOf(value).intValue());\r\n    int numberOfResources = getNumberOfKnownResourceTypes();\r\n    for (int i = 2; i < numberOfResources; i++) {\r\n        res.setResourceValue(i, value);\r\n    }\r\n    return res;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "createResourceFromString",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Resource createResourceFromString(String resourceStr, List<ResourceTypeInfo> resourceTypeInfos)\n{\r\n    Map<String, Long> typeToValue = parseResourcesString(resourceStr);\r\n    validateResourceTypes(typeToValue.keySet(), resourceTypeInfos);\r\n    Resource resource = Resource.newInstance(0, 0);\r\n    for (Entry<String, Long> entry : typeToValue.entrySet()) {\r\n        resource.setResourceValue(entry.getKey(), entry.getValue());\r\n    }\r\n    return resource;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "parseResourcesString",
  "errType" : null,
  "containingMethodsNum" : 20,
  "sourceCodeText" : "Map<String, Long> parseResourcesString(String resourcesStr)\n{\r\n    Map<String, Long> resources = new HashMap<>();\r\n    String[] pairs = resourcesStr.trim().split(\",\");\r\n    for (String resource : pairs) {\r\n        resource = resource.trim();\r\n        if (!resource.matches(RES_PATTERN)) {\r\n            throw new IllegalArgumentException(\"\\\"\" + resource + \"\\\" is not a \" + \"valid resource type/amount pair. \" + \"Please provide key=amount pairs separated by commas.\");\r\n        }\r\n        String[] splits = resource.split(\"=\");\r\n        String key = splits[0], value = splits[1];\r\n        String units = getUnits(value);\r\n        String valueWithoutUnit = value.substring(0, value.length() - units.length()).trim();\r\n        long resourceValue = Long.parseLong(valueWithoutUnit);\r\n        if (units.equals(\"M\") || units.equals(\"m\")) {\r\n            units = \"Mi\";\r\n        } else if (units.equals(\"G\") || units.equals(\"g\")) {\r\n            units = \"Gi\";\r\n        } else if (units.isEmpty()) {\r\n        } else {\r\n            throw new IllegalArgumentException(\"Acceptable units are M/G or empty\");\r\n        }\r\n        if (key.equals(ResourceInformation.MEMORY_URI)) {\r\n            if (!units.isEmpty()) {\r\n                resourceValue = UnitsConversionUtil.convert(units, \"Mi\", resourceValue);\r\n            }\r\n        }\r\n        if (key.equals(\"memory\")) {\r\n            key = ResourceInformation.MEMORY_URI;\r\n            resourceValue = UnitsConversionUtil.convert(units, \"Mi\", resourceValue);\r\n        }\r\n        if (key.equals(\"gpu\")) {\r\n            key = ResourceInformation.GPU_URI;\r\n        }\r\n        if (key.equals(\"fpga\")) {\r\n            key = ResourceInformation.FPGA_URI;\r\n        }\r\n        resources.put(key, resourceValue);\r\n    }\r\n    return resources;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "validateResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void validateResourceTypes(Iterable<String> resourceNames, List<ResourceTypeInfo> resourceTypeInfos) throws ResourceNotFoundException\n{\r\n    for (String resourceName : resourceNames) {\r\n        if (!resourceTypeInfos.stream().anyMatch(e -> e.getName().equals(resourceName))) {\r\n            throw new ResourceNotFoundException(\"Unknown resource: \" + resourceName);\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\resource",
  "methodName" : "getCustomResourcesStrings",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "StringBuilder getCustomResourcesStrings(Resource resource)\n{\r\n    StringBuilder res = new StringBuilder();\r\n    if (ResourceUtils.getNumberOfKnownResourceTypes() > 2) {\r\n        ResourceInformation[] resources = resource.getResources();\r\n        for (int i = 2; i < resources.length; i++) {\r\n            ResourceInformation resInfo = resources[i];\r\n            res.append(\",\" + resInfo.getName() + \"=\" + resInfo.getValue());\r\n        }\r\n    }\r\n    return res;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesResponse newInstance()\n{\r\n    RefreshNodesResponse response = Records.newRecord(RefreshNodesResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "EnhancedHeadroom newInstance(int totalPendingCount, int totalActiveCores)\n{\r\n    EnhancedHeadroom enhancedHeadroom = Records.newRecord(EnhancedHeadroom.class);\r\n    enhancedHeadroom.setTotalPendingCount(totalPendingCount);\r\n    enhancedHeadroom.setTotalActiveCores(totalActiveCores);\r\n    return enhancedHeadroom;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTotalPendingCount",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTotalPendingCount(int totalPendingCount)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTotalPendingCount",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getTotalPendingCount()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTotalActiveCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTotalActiveCores(int totalActiveCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTotalActiveCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getTotalActiveCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"<pendingCount:\").append(this.getTotalPendingCount());\r\n    sb.append(\", activeCores:\").append(this.getTotalActiveCores());\r\n    sb.append(\">\");\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "LocalResource newInstance(URL url, LocalResourceType type, LocalResourceVisibility visibility, long size, long timestamp, String pattern)\n{\r\n    return newInstance(url, type, visibility, size, timestamp, pattern, false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "LocalResource newInstance(URL url, LocalResourceType type, LocalResourceVisibility visibility, long size, long timestamp, String pattern, boolean shouldBeUploadedToSharedCache)\n{\r\n    LocalResource resource = Records.newRecord(LocalResource.class);\r\n    resource.setResource(url);\r\n    resource.setType(type);\r\n    resource.setVisibility(visibility);\r\n    resource.setSize(size);\r\n    resource.setTimestamp(timestamp);\r\n    resource.setPattern(pattern);\r\n    resource.setShouldBeUploadedToSharedCache(shouldBeUploadedToSharedCache);\r\n    return resource;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "LocalResource newInstance(URL url, LocalResourceType type, LocalResourceVisibility visibility, long size, long timestamp)\n{\r\n    return newInstance(url, type, visibility, size, timestamp, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "LocalResource newInstance(URL url, LocalResourceType type, LocalResourceVisibility visibility, long size, long timestamp, boolean shouldBeUploadedToSharedCache)\n{\r\n    return newInstance(url, type, visibility, size, timestamp, null, shouldBeUploadedToSharedCache);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "URL getResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResource(URL resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getSize",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getSize()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setSize",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSize(long size)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getTimestamp()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimestamp(long timestamp)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LocalResourceType getType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setType(LocalResourceType type)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getVisibility",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LocalResourceVisibility getVisibility()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setVisibility",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVisibility(LocalResourceVisibility visibility)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getPattern()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPattern(String pattern)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getShouldBeUploadedToSharedCache",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getShouldBeUploadedToSharedCache()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setShouldBeUploadedToSharedCache",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setShouldBeUploadedToSharedCache(boolean shouldBeUploadedToSharedCache)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationListResponse newInstance(List<ReservationAllocationState> reservationAllocationState)\n{\r\n    ReservationListResponse response = Records.newRecord(ReservationListResponse.class);\r\n    response.setReservationAllocationState(reservationAllocationState);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationAllocationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ReservationAllocationState> getReservationAllocationState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationAllocationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationAllocationState(List<ReservationAllocationState> reservationAllocationState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainerLaunchContext newInstance(Map<String, LocalResource> localResources, Map<String, String> environment, List<String> commands, Map<String, ByteBuffer> serviceData, ByteBuffer tokens, Map<ApplicationAccessType, String> acls)\n{\r\n    return newInstance(localResources, environment, commands, serviceData, tokens, acls, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "ContainerLaunchContext newInstance(Map<String, LocalResource> localResources, Map<String, String> environment, List<String> commands, Map<String, ByteBuffer> serviceData, ByteBuffer tokens, Map<ApplicationAccessType, String> acls, ContainerRetryContext containerRetryContext)\n{\r\n    ContainerLaunchContext container = Records.newRecord(ContainerLaunchContext.class);\r\n    container.setLocalResources(localResources);\r\n    container.setEnvironment(environment);\r\n    container.setCommands(commands);\r\n    container.setServiceData(serviceData);\r\n    container.setTokens(tokens);\r\n    container.setApplicationACLs(acls);\r\n    container.setContainerRetryContext(containerRetryContext);\r\n    return container;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTokens",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getTokens()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTokens",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTokens(ByteBuffer tokens)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTokensConf",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getTokensConf()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTokensConf",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTokensConf(ByteBuffer tokensConf)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLocalResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, LocalResource> getLocalResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLocalResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLocalResources(Map<String, LocalResource> localResources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getServiceData",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, ByteBuffer> getServiceData()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setServiceData",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setServiceData(Map<String, ByteBuffer> serviceData)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getEnvironment",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getEnvironment()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setEnvironment",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEnvironment(Map<String, String> environment)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCommands",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<String> getCommands()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCommands",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCommands(List<String> commands)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationACLs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationAccessType, String> getApplicationACLs()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationACLs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationACLs(Map<ApplicationAccessType, String> acls)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerRetryContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerRetryContext getContainerRetryContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerRetryContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerRetryContext(ContainerRetryContext containerRetryContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "UpdateNodeResourceRequest newInstance(Map<NodeId, ResourceOption> nodeResourceMap)\n{\r\n    UpdateNodeResourceRequest request = Records.newRecord(UpdateNodeResourceRequest.class);\r\n    request.setNodeResourceMap(nodeResourceMap);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodeResourceMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<NodeId, ResourceOption> getNodeResourceMap()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodeResourceMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeResourceMap(Map<NodeId, ResourceOption> nodeResourceMap)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "URL newInstance(String scheme, String host, int port, String file)\n{\r\n    URL url = Records.newRecord(URL.class);\r\n    url.setScheme(scheme);\r\n    url.setHost(host);\r\n    url.setPort(port);\r\n    url.setFile(file);\r\n    return url;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getScheme",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getScheme()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setScheme",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setScheme(String scheme)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUserInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUserInfo()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUserInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUserInfo(String userInfo)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getPort()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPort(int port)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFile",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getFile()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFile",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFile(String file)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toPath",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Path toPath() throws URISyntaxException\n{\r\n    return new Path(new URI(getScheme(), getUserInfo(), getHost(), getPort(), getFile(), null, null));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromURI",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "URL fromURI(URI uri, Configuration conf)\n{\r\n    URL url = RecordFactoryProvider.getRecordFactory(conf).newRecordInstance(URL.class);\r\n    if (uri.getHost() != null) {\r\n        url.setHost(uri.getHost());\r\n    }\r\n    if (uri.getUserInfo() != null) {\r\n        url.setUserInfo(uri.getUserInfo());\r\n    }\r\n    url.setPort(uri.getPort());\r\n    url.setScheme(uri.getScheme());\r\n    url.setFile(uri.getPath());\r\n    return url;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromURI",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "URL fromURI(URI uri)\n{\r\n    return fromURI(uri, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "URL fromPath(Path path, Configuration conf)\n{\r\n    return fromURI(path.toUri(), conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "URL fromPath(Path path)\n{\r\n    return fromURI(path.toUri());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "StrictPreemptionContract newInstance(Set<PreemptionContainer> containers)\n{\r\n    StrictPreemptionContract contract = Records.newRecord(StrictPreemptionContract.class);\r\n    contract.setContainers(containers);\r\n    return contract;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<PreemptionContainer> getContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainers(Set<PreemptionContainer> containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getErrors",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelineWriteError> getErrors()\n{\r\n    return errors;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addError",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addError(TimelineWriteError error)\n{\r\n    errors.add(error);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addErrors",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addErrors(List<TimelineWriteError> writeErrors)\n{\r\n    this.errors.addAll(writeErrors);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setErrors",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setErrors(List<TimelineWriteError> writeErrors)\n{\r\n    this.errors.clear();\r\n    this.errors.addAll(writeErrors);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "SubmitApplicationResponse newInstance()\n{\r\n    SubmitApplicationResponse response = Records.newRecord(SubmitApplicationResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "createKnownUnitsSet",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Set<String> createKnownUnitsSet()\n{\r\n    Set<String> ret = new HashSet<>();\r\n    ret.addAll(Arrays.asList(UNITS));\r\n    return ret;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "getConverter",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Converter getConverter(String unit)\n{\r\n    switch(unit) {\r\n        case \"p\":\r\n            return PICO;\r\n        case \"n\":\r\n            return NANO;\r\n        case \"u\":\r\n            return MICRO;\r\n        case \"m\":\r\n            return MILLI;\r\n        case \"\":\r\n            return BASE;\r\n        case \"k\":\r\n            return KILO;\r\n        case \"M\":\r\n            return MEGA;\r\n        case \"G\":\r\n            return GIGA;\r\n        case \"T\":\r\n            return TERA;\r\n        case \"P\":\r\n            return PETA;\r\n        case \"Ki\":\r\n            return KILO_BINARY;\r\n        case \"Mi\":\r\n            return MEGA_BINARY;\r\n        case \"Gi\":\r\n            return GIGA_BINARY;\r\n        case \"Ti\":\r\n            return TERA_BINARY;\r\n        case \"Pi\":\r\n            return PETA_BINARY;\r\n        default:\r\n            throw new IllegalArgumentException(\"Unknown unit '\" + unit + \"'. Known units are \" + KNOWN_UNITS);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "convert",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "long convert(String fromUnit, String toUnit, long fromValue)\n{\r\n    if (toUnit == null || fromUnit == null) {\r\n        throw new IllegalArgumentException(\"One or more arguments are null\");\r\n    }\r\n    if (fromUnit.equals(toUnit)) {\r\n        return fromValue;\r\n    }\r\n    Converter fc = getConverter(fromUnit);\r\n    Converter tc = getConverter(toUnit);\r\n    long numerator = fc.numerator * tc.denominator;\r\n    long denominator = fc.denominator * tc.numerator;\r\n    long numeratorMultiplierLimit = Long.MAX_VALUE / numerator;\r\n    if (numerator < denominator) {\r\n        if (numeratorMultiplierLimit < fromValue) {\r\n            String overflowMsg = \"Converting \" + fromValue + \" from '\" + fromUnit + \"' to '\" + toUnit + \"' will result in an overflow of Long\";\r\n            throw new IllegalArgumentException(overflowMsg);\r\n        }\r\n        return (fromValue * numerator) / denominator;\r\n    }\r\n    if (numeratorMultiplierLimit > fromValue) {\r\n        return (numerator * fromValue) / denominator;\r\n    }\r\n    long tmp = numerator / denominator;\r\n    if ((Long.MAX_VALUE / tmp) < fromValue) {\r\n        String overflowMsg = \"Converting \" + fromValue + \" from '\" + fromUnit + \"' to '\" + toUnit + \"' will result in an overflow of Long\";\r\n        throw new IllegalArgumentException(overflowMsg);\r\n    }\r\n    return fromValue * tmp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "compare",
  "errType" : [ "IllegalArgumentException" ],
  "containingMethodsNum" : 22,
  "sourceCodeText" : "int compare(String unitA, long valueA, String unitB, long valueB)\n{\r\n    checkUnitArgument(unitA);\r\n    checkUnitArgument(unitB);\r\n    if (unitA.equals(unitB)) {\r\n        return Long.compare(valueA, valueB);\r\n    }\r\n    Converter unitAC = getConverter(unitA);\r\n    Converter unitBC = getConverter(unitB);\r\n    int unitAPos = SORTED_UNITS.indexOf(unitA);\r\n    int unitBPos = SORTED_UNITS.indexOf(unitB);\r\n    try {\r\n        long tmpA = valueA;\r\n        long tmpB = valueB;\r\n        if (unitAPos < unitBPos) {\r\n            tmpB = convert(unitB, unitA, valueB);\r\n        } else {\r\n            tmpA = convert(unitA, unitB, valueA);\r\n        }\r\n        return Long.compare(tmpA, tmpB);\r\n    } catch (IllegalArgumentException ie) {\r\n        BigInteger tmpA = BigInteger.valueOf(valueA);\r\n        BigInteger tmpB = BigInteger.valueOf(valueB);\r\n        if (unitAPos < unitBPos) {\r\n            tmpB = tmpB.multiply(BigInteger.valueOf(unitBC.numerator));\r\n            tmpB = tmpB.multiply(BigInteger.valueOf(unitAC.denominator));\r\n            tmpB = tmpB.divide(BigInteger.valueOf(unitBC.denominator));\r\n            tmpB = tmpB.divide(BigInteger.valueOf(unitAC.numerator));\r\n        } else {\r\n            tmpA = tmpA.multiply(BigInteger.valueOf(unitAC.numerator));\r\n            tmpA = tmpA.multiply(BigInteger.valueOf(unitBC.denominator));\r\n            tmpA = tmpA.divide(BigInteger.valueOf(unitAC.denominator));\r\n            tmpA = tmpA.divide(BigInteger.valueOf(unitBC.numerator));\r\n        }\r\n        return tmpA.compareTo(tmpB);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "checkUnitArgument",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void checkUnitArgument(String unit)\n{\r\n    if (unit == null) {\r\n        throw new IllegalArgumentException(\"Unit cannot be null\");\r\n    } else if (!KNOWN_UNITS.contains(unit)) {\r\n        throw new IllegalArgumentException(\"Unknown unit '\" + unit + \"'\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "compareUnits",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "int compareUnits(String unitA, String unitB)\n{\r\n    checkUnitArgument(unitA);\r\n    checkUnitArgument(unitB);\r\n    int unitAPos = SORTED_UNITS.indexOf(unitA);\r\n    int unitBPos = SORTED_UNITS.indexOf(unitB);\r\n    return Integer.compare(unitAPos, unitBPos);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceProfilesResponse newInstance()\n{\r\n    return Records.newRecord(GetAllResourceProfilesResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceProfiles(Map<String, Resource> profiles)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Resource> getResourceProfiles()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object other)\n{\r\n    if (this == other) {\r\n        return true;\r\n    }\r\n    if (!(other instanceof GetAllResourceProfilesResponse)) {\r\n        return false;\r\n    }\r\n    return ((GetAllResourceProfilesResponse) other).getResourceProfiles().equals(this.getResourceProfiles());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return this.getResourceProfiles().hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetLabelsToNodesRequest newInstance()\n{\r\n    return Records.newRecord(GetLabelsToNodesRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetLabelsToNodesRequest newInstance(Set<String> nodeLabels)\n{\r\n    GetLabelsToNodesRequest request = Records.newRecord(GetLabelsToNodesRequest.class);\r\n    request.setNodeLabels(nodeLabels);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabels(Set<String> nodeLabels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptsResponse newInstance(List<ApplicationAttemptReport> applicationAttempts)\n{\r\n    GetApplicationAttemptsResponse response = Records.newRecord(GetApplicationAttemptsResponse.class);\r\n    response.setApplicationAttemptList(applicationAttempts);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationAttemptList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ApplicationAttemptReport> getApplicationAttemptList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationAttemptList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptList(List<ApplicationAttemptReport> applicationAttempts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEntityType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getEntityType()\n{\r\n    return entityType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEntityType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEntityType(String entityType)\n{\r\n    this.entityType = entityType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEntityId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getEntityId()\n{\r\n    return entityId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEntityId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEntityId(String entityId)\n{\r\n    this.entityId = entityId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Long getStartTime()\n{\r\n    return startTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(Long startTime)\n{\r\n    this.startTime = startTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getEvents",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelineEvent> getEvents()\n{\r\n    return events;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEvent",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEvent(TimelineEvent event)\n{\r\n    events.add(event);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addEvents",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addEvents(List<TimelineEvent> events)\n{\r\n    this.events.addAll(events);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setEvents",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEvents(List<TimelineEvent> events)\n{\r\n    this.events = events;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getRelatedEntities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Set<String>> getRelatedEntities()\n{\r\n    return relatedEntities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getRelatedEntitiesJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<String, Set<String>> getRelatedEntitiesJAXB()\n{\r\n    return relatedEntities;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addRelatedEntity",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void addRelatedEntity(String entityType, String entityId)\n{\r\n    Set<String> thisRelatedEntity = relatedEntities.get(entityType);\r\n    if (thisRelatedEntity == null) {\r\n        thisRelatedEntity = new HashSet<String>();\r\n        relatedEntities.put(entityType, thisRelatedEntity);\r\n    }\r\n    thisRelatedEntity.add(entityId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addRelatedEntities",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addRelatedEntities(Map<String, Set<String>> relatedEntities)\n{\r\n    for (Entry<String, Set<String>> relatedEntity : relatedEntities.entrySet()) {\r\n        Set<String> thisRelatedEntity = this.relatedEntities.get(relatedEntity.getKey());\r\n        if (thisRelatedEntity == null) {\r\n            this.relatedEntities.put(relatedEntity.getKey(), relatedEntity.getValue());\r\n        } else {\r\n            thisRelatedEntity.addAll(relatedEntity.getValue());\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setRelatedEntities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setRelatedEntities(Map<String, Set<String>> relatedEntities)\n{\r\n    this.relatedEntities = TimelineServiceHelper.mapCastToHashMap(relatedEntities);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getPrimaryFilters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Set<Object>> getPrimaryFilters()\n{\r\n    return primaryFilters;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getPrimaryFiltersJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<String, Set<Object>> getPrimaryFiltersJAXB()\n{\r\n    return primaryFilters;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addPrimaryFilter",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void addPrimaryFilter(String key, Object value)\n{\r\n    Set<Object> thisPrimaryFilter = primaryFilters.get(key);\r\n    if (thisPrimaryFilter == null) {\r\n        thisPrimaryFilter = new HashSet<Object>();\r\n        primaryFilters.put(key, thisPrimaryFilter);\r\n    }\r\n    thisPrimaryFilter.add(value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addPrimaryFilters",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addPrimaryFilters(Map<String, Set<Object>> primaryFilters)\n{\r\n    for (Entry<String, Set<Object>> primaryFilter : primaryFilters.entrySet()) {\r\n        Set<Object> thisPrimaryFilter = this.primaryFilters.get(primaryFilter.getKey());\r\n        if (thisPrimaryFilter == null) {\r\n            this.primaryFilters.put(primaryFilter.getKey(), primaryFilter.getValue());\r\n        } else {\r\n            thisPrimaryFilter.addAll(primaryFilter.getValue());\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setPrimaryFilters",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setPrimaryFilters(Map<String, Set<Object>> primaryFilters)\n{\r\n    this.primaryFilters = TimelineServiceHelper.mapCastToHashMap(primaryFilters);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getOtherInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Object> getOtherInfo()\n{\r\n    return otherInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getOtherInfoJAXB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "HashMap<String, Object> getOtherInfoJAXB()\n{\r\n    return otherInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addOtherInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addOtherInfo(String key, Object value)\n{\r\n    this.otherInfo.put(key, value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addOtherInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addOtherInfo(Map<String, Object> otherInfo)\n{\r\n    this.otherInfo.putAll(otherInfo);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setOtherInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setOtherInfo(Map<String, Object> otherInfo)\n{\r\n    this.otherInfo = TimelineServiceHelper.mapCastToHashMap(otherInfo);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getDomainId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDomainId()\n{\r\n    return domainId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setDomainId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDomainId(String domainId)\n{\r\n    this.domainId = domainId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    int result = 1;\r\n    result = prime * result + ((entityId == null) ? 0 : entityId.hashCode());\r\n    result = prime * result + ((entityType == null) ? 0 : entityType.hashCode());\r\n    result = prime * result + ((events == null) ? 0 : events.hashCode());\r\n    result = prime * result + ((otherInfo == null) ? 0 : otherInfo.hashCode());\r\n    result = prime * result + ((primaryFilters == null) ? 0 : primaryFilters.hashCode());\r\n    result = prime * result + ((relatedEntities == null) ? 0 : relatedEntities.hashCode());\r\n    result = prime * result + ((startTime == null) ? 0 : startTime.hashCode());\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    TimelineEntity other = (TimelineEntity) obj;\r\n    if (entityId == null) {\r\n        if (other.entityId != null)\r\n            return false;\r\n    } else if (!entityId.equals(other.entityId))\r\n        return false;\r\n    if (entityType == null) {\r\n        if (other.entityType != null)\r\n            return false;\r\n    } else if (!entityType.equals(other.entityType))\r\n        return false;\r\n    if (events == null) {\r\n        if (other.events != null)\r\n            return false;\r\n    } else if (!events.equals(other.events))\r\n        return false;\r\n    if (otherInfo == null) {\r\n        if (other.otherInfo != null)\r\n            return false;\r\n    } else if (!otherInfo.equals(other.otherInfo))\r\n        return false;\r\n    if (primaryFilters == null) {\r\n        if (other.primaryFilters != null)\r\n            return false;\r\n    } else if (!primaryFilters.equals(other.primaryFilters))\r\n        return false;\r\n    if (relatedEntities == null) {\r\n        if (other.relatedEntities != null)\r\n            return false;\r\n    } else if (!relatedEntities.equals(other.relatedEntities))\r\n        return false;\r\n    if (startTime == null) {\r\n        if (other.startTime != null)\r\n            return false;\r\n    } else if (!startTime.equals(other.startTime))\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int compareTo(TimelineEntity other)\n{\r\n    int comparison = entityType.compareTo(other.entityType);\r\n    if (comparison == 0) {\r\n        long thisStartTime = startTime == null ? Long.MIN_VALUE : startTime;\r\n        long otherStartTime = other.startTime == null ? Long.MIN_VALUE : other.startTime;\r\n        if (thisStartTime > otherStartTime) {\r\n            return -1;\r\n        } else if (thisStartTime < otherStartTime) {\r\n            return 1;\r\n        } else {\r\n            return entityId.compareTo(other.entityId);\r\n        }\r\n    } else {\r\n        return comparison;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ReservationAllocationState newInstance(long acceptanceTime, String user, List<ResourceAllocationRequest> resourceAllocations, ReservationId reservationId, ReservationDefinition reservationDefinition)\n{\r\n    ReservationAllocationState ri = Records.newRecord(ReservationAllocationState.class);\r\n    ri.setAcceptanceTime(acceptanceTime);\r\n    ri.setUser(user);\r\n    ri.setResourceAllocationRequests(resourceAllocations);\r\n    ri.setReservationId(reservationId);\r\n    ri.setReservationDefinition(reservationDefinition);\r\n    return ri;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAcceptanceTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAcceptanceTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAcceptanceTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAcceptanceTime(long acceptanceTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUser()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUser(String user)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceAllocationRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ResourceAllocationRequest> getResourceAllocationRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceAllocationRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceAllocationRequests(List<ResourceAllocationRequest> resourceAllocations)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(ReservationId reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationDefinition getReservationDefinition()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationDefinition(ReservationDefinition reservationDefinition)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNodesToAttributesRequest newInstance(Set<String> hostNames)\n{\r\n    GetNodesToAttributesRequest request = Records.newRecord(GetNodesToAttributesRequest.class);\r\n    request.setHostNames(hostNames);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setHostNames",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHostNames(Set<String> hostnames)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getHostNames",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getHostNames()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainerStatus newInstance(ContainerId containerId, ContainerState containerState, String diagnostics, int exitStatus)\n{\r\n    return newInstance(containerId, ExecutionType.GUARANTEED, containerState, diagnostics, exitStatus);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ContainerStatus newInstance(ContainerId containerId, ExecutionType executionType, ContainerState containerState, String diagnostics, int exitStatus)\n{\r\n    ContainerStatus containerStatus = Records.newRecord(ContainerStatus.class);\r\n    containerStatus.setExecutionType(executionType);\r\n    containerStatus.setState(containerState);\r\n    containerStatus.setContainerId(containerId);\r\n    containerStatus.setDiagnostics(diagnostics);\r\n    containerStatus.setExitStatus(exitStatus);\r\n    return containerStatus;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionType executionType)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerState getState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setState(ContainerState state)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExitStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getExitStatus()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExitStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExitStatus(int exitStatus)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource capability)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getIPs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<String> getIPs()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setIPs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIPs(List<String> ips)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerSubState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerSubState(ContainerSubState subState)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerSubState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerSubState getContainerSubState()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getExposedPorts()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExposedPorts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExposedPorts(String ports)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ReservationSubmissionRequest newInstance(ReservationDefinition reservationDefinition, String queueName, ReservationId reservationId)\n{\r\n    ReservationSubmissionRequest request = Records.newRecord(ReservationSubmissionRequest.class);\r\n    request.setReservationDefinition(reservationDefinition);\r\n    request.setQueue(queueName);\r\n    request.setReservationId(reservationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationDefinition getReservationDefinition()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationDefinition",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationDefinition(ReservationDefinition reservationDefinition)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueue(String queueName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(ReservationId reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()\n{\r\n    return this.applicationId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "UpdateContainerRequest newInstance(int version, ContainerId containerId, ContainerUpdateType updateType, Resource targetCapability, ExecutionType targetExecutionType)\n{\r\n    UpdateContainerRequest request = Records.newRecord(UpdateContainerRequest.class);\r\n    request.setContainerVersion(version);\r\n    request.setContainerId(containerId);\r\n    request.setContainerUpdateType(updateType);\r\n    request.setExecutionType(targetExecutionType);\r\n    request.setCapability(targetCapability);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getContainerVersion()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerVersion(int containerVersion)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerUpdateType getContainerUpdateType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerUpdateType(ContainerUpdateType updateType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionType executionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    ContainerId cId = getContainerId();\r\n    ExecutionType execType = getExecutionType();\r\n    Resource capability = getCapability();\r\n    ContainerUpdateType updateType = getContainerUpdateType();\r\n    result = prime * result + ((capability == null) ? 0 : capability.hashCode());\r\n    result = prime * result + ((cId == null) ? 0 : cId.hashCode());\r\n    result = prime * result + getContainerVersion();\r\n    result = prime * result + ((execType == null) ? 0 : execType.hashCode());\r\n    result = prime * result + ((updateType == null) ? 0 : updateType.hashCode());\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "String toString()\n{\r\n    return \"UpdateReq{\" + \"containerId=\" + getContainerId() + \", \" + \"containerVersion=\" + getContainerVersion() + \", \" + \"targetExecType=\" + getExecutionType() + \", \" + \"targetCapability=\" + getCapability() + \", \" + \"updateType=\" + getContainerUpdateType() + \", \" + \"}\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 16,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    UpdateContainerRequest other = (UpdateContainerRequest) obj;\r\n    Resource capability = getCapability();\r\n    if (capability == null) {\r\n        if (other.getCapability() != null) {\r\n            return false;\r\n        }\r\n    } else if (!capability.equals(other.getCapability())) {\r\n        return false;\r\n    }\r\n    ContainerId cId = getContainerId();\r\n    if (cId == null) {\r\n        if (other.getContainerId() != null) {\r\n            return false;\r\n        }\r\n    } else if (!cId.equals(other.getContainerId())) {\r\n        return false;\r\n    }\r\n    if (getContainerVersion() != other.getContainerVersion()) {\r\n        return false;\r\n    }\r\n    ExecutionType execType = getExecutionType();\r\n    if (execType == null) {\r\n        if (other.getExecutionType() != null) {\r\n            return false;\r\n        }\r\n    } else if (!execType.equals(other.getExecutionType())) {\r\n        return false;\r\n    }\r\n    ContainerUpdateType updateType = getContainerUpdateType();\r\n    if (updateType == null) {\r\n        if (other.getContainerUpdateType() != null) {\r\n            return false;\r\n        }\r\n    } else if (!updateType.equals(other.getContainerUpdateType())) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "SubmitApplicationRequest newInstance(ApplicationSubmissionContext context)\n{\r\n    SubmitApplicationRequest request = Records.newRecord(SubmitApplicationRequest.class);\r\n    request.setApplicationSubmissionContext(context);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationSubmissionContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationSubmissionContext getApplicationSubmissionContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationSubmissionContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationSubmissionContext(ApplicationSubmissionContext context)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptReportResponse newInstance(ApplicationAttemptReport ApplicationAttemptReport)\n{\r\n    GetApplicationAttemptReportResponse response = Records.newRecord(GetApplicationAttemptReportResponse.class);\r\n    response.setApplicationAttemptReport(ApplicationAttemptReport);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationAttemptReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptReport getApplicationAttemptReport()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationAttemptReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptReport(ApplicationAttemptReport applicationAttemptReport)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodesResponse newInstance(List<NodeReport> nodeReports)\n{\r\n    GetClusterNodesResponse response = Records.newRecord(GetClusterNodesResponse.class);\r\n    response.setNodeReports(nodeReports);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeReports",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeReport> getNodeReports()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeReports",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeReports(List<NodeReport> nodeReports)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RenewDelegationTokenResponse newInstance(long expTime)\n{\r\n    RenewDelegationTokenResponse response = Records.newRecord(RenewDelegationTokenResponse.class);\r\n    response.setNextExpirationTime(expTime);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNextExpirationTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNextExpirationTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNextExpirationTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextExpirationTime(long expTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getId()\n{\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(String id)\n{\r\n    this.id = id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getDescription",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDescription()\n{\r\n    return description;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setDescription",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDescription(String description)\n{\r\n    this.description = description;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getOwner",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getOwner()\n{\r\n    return owner;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setOwner",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOwner(String owner)\n{\r\n    this.owner = owner;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getReaders",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getReaders()\n{\r\n    return readers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setReaders",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReaders(String readers)\n{\r\n    this.readers = readers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getWriters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getWriters()\n{\r\n    return writers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setWriters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWriters(String writers)\n{\r\n    this.writers = writers;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Long getCreatedTime()\n{\r\n    return createdTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setCreatedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCreatedTime(Long createdTime)\n{\r\n    this.createdTime = createdTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getModifiedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Long getModifiedTime()\n{\r\n    return modifiedTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setModifiedTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setModifiedTime(Long modifiedTime)\n{\r\n    this.modifiedTime = modifiedTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetResourceProfileRequest newInstance(String profile)\n{\r\n    GetResourceProfileRequest request = Records.newRecord(GetResourceProfileRequest.class);\r\n    request.setProfileName(profile);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setProfileName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setProfileName(String profileName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getProfileName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getProfileName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean equals(Object other)\n{\r\n    if (this == other) {\r\n        return true;\r\n    }\r\n    if (!(other instanceof GetResourceProfileRequest)) {\r\n        return false;\r\n    }\r\n    return this.getProfileName().equals(((GetResourceProfileRequest) other).getProfileName());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    return getProfileName().hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "GetContainerStatusesResponse newInstance(List<ContainerStatus> statuses, Map<ContainerId, SerializedException> failedRequests)\n{\r\n    GetContainerStatusesResponse response = Records.newRecord(GetContainerStatusesResponse.class);\r\n    response.setContainerStatuses(statuses);\r\n    response.setFailedRequests(failedRequests);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerStatus> getContainerStatuses()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerStatuses(List<ContainerStatus> statuses)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAppId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getAppId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAppId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAppId(ApplicationId id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getResourceKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceKey(String key)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\exceptions",
  "methodName" : "getInvalidResourceType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "InvalidResourceType getInvalidResourceType()\n{\r\n    return invalidResourceType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Token newInstance(byte[] identifier, String kind, byte[] password, String service)\n{\r\n    Token token = Records.newRecord(Token.class);\r\n    token.setIdentifier(ByteBuffer.wrap(identifier));\r\n    token.setKind(kind);\r\n    token.setPassword(ByteBuffer.wrap(password));\r\n    token.setService(service);\r\n    return token;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getIdentifier",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getIdentifier()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setIdentifier",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIdentifier(ByteBuffer identifier)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPassword",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getPassword()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPassword",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPassword(ByteBuffer password)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getKind",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getKind()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setKind",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setKind(String kind)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getService",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getService()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setService",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setService(String service)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNewReservationRequest newInstance()\n{\r\n    GetNewReservationRequest request = Records.newRecord(GetNewReservationRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "compare",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "int compare(Number n1, Number n2)\n{\r\n    if (n1 == null || n2 == null) {\r\n        throw new YarnRuntimeException(\"Number to be compared shouldn't be null.\");\r\n    }\r\n    if (n1 instanceof Integer || n1 instanceof Long) {\r\n        if (n1.longValue() == n2.longValue()) {\r\n            return 0;\r\n        } else {\r\n            return (n1.longValue() < n2.longValue()) ? -1 : 1;\r\n        }\r\n    }\r\n    if (n1 instanceof Float || n1 instanceof Double) {\r\n        if (n1.doubleValue() == n2.doubleValue()) {\r\n            return 0;\r\n        } else {\r\n            return (n1.doubleValue() < n2.doubleValue()) ? -1 : 1;\r\n        }\r\n    }\r\n    throw new YarnRuntimeException(\"Unsupported types for number comparison: \" + n1.getClass().getName() + \", \" + n2.getClass().getName());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "sub",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Number sub(Number n1, Number n2)\n{\r\n    if (n1 == null) {\r\n        throw new YarnRuntimeException(\"Number to be subtracted shouldn't be null.\");\r\n    } else if (n2 == null) {\r\n        return n1;\r\n    }\r\n    if (n1 instanceof Integer || n1 instanceof Long) {\r\n        return n1.longValue() - n2.longValue();\r\n    }\r\n    if (n1 instanceof Float || n1 instanceof Double) {\r\n        return n1.doubleValue() - n2.doubleValue();\r\n    }\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "sum",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "Number sum(Number n1, Number n2)\n{\r\n    if (n1 == null) {\r\n        return n2;\r\n    } else if (n2 == null) {\r\n        return n1;\r\n    }\r\n    if (n1 instanceof Integer || n1 instanceof Long) {\r\n        return n1.longValue() + n2.longValue();\r\n    }\r\n    if (n1 instanceof Float || n1 instanceof Double) {\r\n        return n1.doubleValue() + n2.doubleValue();\r\n    }\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ApplicationTimeout newInstance(ApplicationTimeoutType type, String expiryTime, long remainingTime)\n{\r\n    ApplicationTimeout timeouts = Records.newRecord(ApplicationTimeout.class);\r\n    timeouts.setTimeoutType(type);\r\n    timeouts.setExpiryTime(expiryTime);\r\n    timeouts.setRemainingTime(remainingTime);\r\n    return timeouts;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTimeoutType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationTimeoutType getTimeoutType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTimeoutType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimeoutType(ApplicationTimeoutType timeoutType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExpiryTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getExpiryTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExpiryTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExpiryTime(String expiryTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRemainingTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getRemainingTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRemainingTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRemainingTime(long remainingTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "StartContainersRequest newInstance(List<StartContainerRequest> requests)\n{\r\n    StartContainersRequest request = Records.newRecord(StartContainersRequest.class);\r\n    request.setStartContainerRequests(requests);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getStartContainerRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<StartContainerRequest> getStartContainerRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setStartContainerRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartContainerRequests(List<StartContainerRequest> request)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RemoveFromClusterNodeLabelsRequest newInstance(Set<String> labels)\n{\r\n    RemoveFromClusterNodeLabelsRequest request = Records.newRecord(RemoveFromClusterNodeLabelsRequest.class);\r\n    request.setNodeLabels(labels);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabels(Set<String> labels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "MoveApplicationAcrossQueuesRequest newInstance(ApplicationId appId, String queue)\n{\r\n    MoveApplicationAcrossQueuesRequest request = Records.newRecord(MoveApplicationAcrossQueuesRequest.class);\r\n    request.setApplicationId(appId);\r\n    request.setTargetQueue(queue);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId appId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTargetQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTargetQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTargetQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTargetQueue(String queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshClusterMaxPriorityResponse newInstance()\n{\r\n    RefreshClusterMaxPriorityResponse response = Records.newRecord(RefreshClusterMaxPriorityResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodeLabelsRequest newInstance()\n{\r\n    return Records.newRecord(GetClusterNodeLabelsRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ExecutionTypeRequest newInstance()\n{\r\n    return newInstance(ExecutionType.GUARANTEED, false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ExecutionTypeRequest newInstance(ExecutionType execType)\n{\r\n    return newInstance(execType, false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ExecutionTypeRequest newInstance(ExecutionType execType, boolean ensureExecutionType)\n{\r\n    ExecutionTypeRequest executionTypeRequest = Records.newRecord(ExecutionTypeRequest.class);\r\n    executionTypeRequest.setExecutionType(execType);\r\n    executionTypeRequest.setEnforceExecutionType(ensureExecutionType);\r\n    return executionTypeRequest;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExecutionType(ExecutionType execType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ExecutionType getExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setEnforceExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEnforceExecutionType(boolean enforceExecutionType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getEnforceExecutionType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getEnforceExecutionType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    ExecutionType executionType = getExecutionType();\r\n    boolean ensureExecutionType = getEnforceExecutionType();\r\n    result = prime * result + ((executionType == null) ? 0 : executionType.hashCode());\r\n    result = prime * result + (ensureExecutionType ? 0 : 1);\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    ExecutionTypeRequest other = (ExecutionTypeRequest) obj;\r\n    ExecutionType executionType = getExecutionType();\r\n    if (executionType == null) {\r\n        if (other.getExecutionType() != null) {\r\n            return false;\r\n        }\r\n    } else if (executionType != other.getExecutionType()) {\r\n        return false;\r\n    }\r\n    boolean enforceExecutionType = getEnforceExecutionType();\r\n    return enforceExecutionType == other.getEnforceExecutionType();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshUserToGroupsMappingsResponse newInstance()\n{\r\n    RefreshUserToGroupsMappingsResponse response = Records.newRecord(RefreshUserToGroupsMappingsResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ApplicationAttemptId newInstance(ApplicationId appId, int attemptId)\n{\r\n    ApplicationAttemptId appAttemptId = Records.newRecord(ApplicationAttemptId.class);\r\n    appAttemptId.setApplicationId(appId);\r\n    appAttemptId.setAttemptId(attemptId);\r\n    appAttemptId.build();\r\n    return appAttemptId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId appID)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttemptId(int attemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 347671;\r\n    int result = 5501;\r\n    ApplicationId appId = getApplicationId();\r\n    result = prime * result + appId.hashCode();\r\n    result = prime * result + getAttemptId();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ApplicationAttemptId other = (ApplicationAttemptId) obj;\r\n    if (!this.getApplicationId().equals(other.getApplicationId()))\r\n        return false;\r\n    if (this.getAttemptId() != other.getAttemptId())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int compareTo(ApplicationAttemptId other)\n{\r\n    int compareAppIds = this.getApplicationId().compareTo(other.getApplicationId());\r\n    if (compareAppIds == 0) {\r\n        return this.getAttemptId() - other.getAttemptId();\r\n    } else {\r\n        return compareAppIds;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder(64);\r\n    sb.append(APP_ATTEMPT_ID_PREFIX);\r\n    ApplicationId appId = getApplicationId();\r\n    sb.append(appId.getClusterTimestamp()).append('_');\r\n    FastNumberFormat.format(sb, appId.getId(), APP_ID_MIN_DIGITS);\r\n    sb.append('_');\r\n    FastNumberFormat.format(sb, getAttemptId(), ATTEMPT_ID_MIN_DIGITS);\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "fromString",
  "errType" : [ "NumberFormatException" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "ApplicationAttemptId fromString(String appAttemptIdStr)\n{\r\n    if (!appAttemptIdStr.startsWith(APP_ATTEMPT_ID_PREFIX)) {\r\n        throw new IllegalArgumentException(\"Invalid AppAttemptId prefix: \" + appAttemptIdStr);\r\n    }\r\n    try {\r\n        int pos1 = APP_ATTEMPT_ID_PREFIX.length() - 1;\r\n        int pos2 = appAttemptIdStr.indexOf('_', pos1 + 1);\r\n        if (pos2 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid AppAttemptId: \" + appAttemptIdStr);\r\n        }\r\n        long rmId = Long.parseLong(appAttemptIdStr.substring(pos1 + 1, pos2));\r\n        int pos3 = appAttemptIdStr.indexOf('_', pos2 + 1);\r\n        if (pos3 < 0) {\r\n            throw new IllegalArgumentException(\"Invalid AppAttemptId: \" + appAttemptIdStr);\r\n        }\r\n        int appId = Integer.parseInt(appAttemptIdStr.substring(pos2 + 1, pos3));\r\n        ApplicationId applicationId = ApplicationId.newInstance(rmId, appId);\r\n        int attemptId = Integer.parseInt(appAttemptIdStr.substring(pos3 + 1));\r\n        ApplicationAttemptId applicationAttemptId = ApplicationAttemptId.newInstance(applicationId, attemptId);\r\n        return applicationAttemptId;\r\n    } catch (NumberFormatException n) {\r\n        throw new IllegalArgumentException(\"Invalid AppAttemptId: \" + appAttemptIdStr, n);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String getId()\n{\r\n    String id = super.getId();\r\n    if (id == null) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(getInfo().get(USER_INFO_KEY).toString()).append('@').append(getInfo().get(FLOW_NAME_INFO_KEY).toString()).append('/').append(getInfo().get(FLOW_RUN_ID_INFO_KEY).toString());\r\n        id = sb.toString();\r\n        setId(id);\r\n    }\r\n    return id;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getUser()\n{\r\n    return (String) getInfo().get(USER_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setUser",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setUser(String user)\n{\r\n    addInfo(USER_INFO_KEY, user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getName()\n{\r\n    return (String) getInfo().get(FLOW_NAME_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setName(String name)\n{\r\n    addInfo(FLOW_NAME_INFO_KEY, name);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getVersion",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getVersion()\n{\r\n    return (String) getInfo().get(FLOW_VERSION_INFO_KEY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setVersion",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setVersion(String version)\n{\r\n    addInfo(FLOW_VERSION_INFO_KEY, version);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getRunId",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "long getRunId()\n{\r\n    Object runId = getInfo().get(FLOW_RUN_ID_INFO_KEY);\r\n    return runId == null ? 0L : ((Number) runId).longValue();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setRunId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setRunId(long runId)\n{\r\n    addInfo(FLOW_RUN_ID_INFO_KEY, runId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getStartTime()\n{\r\n    return getCreatedTime();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setStartTime(long startTime)\n{\r\n    setCreatedTime(startTime);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getMaxEndTime",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "long getMaxEndTime()\n{\r\n    Object time = getInfo().get(FLOW_RUN_END_TIME);\r\n    return time == null ? 0L : ((Number) time).longValue();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setMaxEndTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setMaxEndTime(long endTime)\n{\r\n    addInfo(FLOW_RUN_END_TIME, endTime);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUser()\n{\r\n    return this.user;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()\n{\r\n    return this.applicationId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getApplicationDataForService",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getApplicationDataForService()\n{\r\n    return this.appDataForService;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeToAttributeValue newInstance(String hostname, String attributeValue)\n{\r\n    NodeToAttributeValue nodeToAttributeValue = Records.newRecord(NodeToAttributeValue.class);\r\n    nodeToAttributeValue.setAttributeValue(attributeValue);\r\n    nodeToAttributeValue.setHostname(hostname);\r\n    return nodeToAttributeValue;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAttributeValue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeValue(String attributeValue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHostname",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHostname()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHostname",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHostname(String hostname)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\constraint",
  "methodName" : "parseExpression",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "AbstractConstraint parseExpression(String constraintStr) throws PlacementConstraintParseException\n{\r\n    TargetConstraintParser tp = new TargetConstraintParser(constraintStr);\r\n    Optional<AbstractConstraint> constraintOptional = Optional.ofNullable(tp.tryParse());\r\n    if (!constraintOptional.isPresent()) {\r\n        CardinalityConstraintParser cp = new CardinalityConstraintParser(constraintStr);\r\n        constraintOptional = Optional.ofNullable(cp.tryParse());\r\n        if (!constraintOptional.isPresent()) {\r\n            ConjunctionConstraintParser jp = new ConjunctionConstraintParser(constraintStr);\r\n            constraintOptional = Optional.ofNullable(jp.tryParse());\r\n        }\r\n        if (!constraintOptional.isPresent()) {\r\n            NodeConstraintParser np = new NodeConstraintParser(constraintStr);\r\n            constraintOptional = Optional.ofNullable(np.tryParse());\r\n        }\r\n        if (!constraintOptional.isPresent()) {\r\n            throw new PlacementConstraintParseException(\"Invalid constraint expression \" + constraintStr);\r\n        }\r\n    }\r\n    return constraintOptional.get();\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util\\constraint",
  "methodName" : "parsePlacementSpec",
  "errType" : null,
  "containingMethodsNum" : 15,
  "sourceCodeText" : "Map<SourceTags, PlacementConstraint> parsePlacementSpec(String expression) throws PlacementConstraintParseException\n{\r\n    Map<SourceTags, PlacementConstraint> result = new LinkedHashMap<>();\r\n    PlacementConstraintParser.ConstraintTokenizer tokenizer = new PlacementConstraintParser.MultipleConstraintsTokenizer(expression);\r\n    tokenizer.validate();\r\n    while (tokenizer.hasMoreElements()) {\r\n        String specStr = tokenizer.nextElement();\r\n        final SourceTags st;\r\n        PlacementConstraint constraint;\r\n        String delimiter = new String(new char[] { '[', BRACKET_END, ']', EXPRESSION_VAL_DELIM });\r\n        String[] splitted = specStr.split(delimiter, 2);\r\n        if (splitted.length == 2) {\r\n            st = SourceTags.parseFrom(splitted[0] + String.valueOf(BRACKET_END));\r\n            constraint = PlacementConstraintParser.parseExpression(splitted[1]).build();\r\n        } else if (splitted.length == 1) {\r\n            NodeConstraintParser np = new NodeConstraintParser(specStr);\r\n            Optional<AbstractConstraint> constraintOptional = Optional.ofNullable(np.tryParse());\r\n            if (constraintOptional.isPresent()) {\r\n                st = SourceTags.emptySourceTags();\r\n                constraint = constraintOptional.get().build();\r\n            } else {\r\n                st = SourceTags.parseFrom(specStr);\r\n                constraint = null;\r\n            }\r\n        } else {\r\n            throw new PlacementConstraintParseException(\"Unexpected placement constraint expression \" + specStr);\r\n        }\r\n        result.put(st, constraint);\r\n    }\r\n    Set<SourceTags> sourceTagSet = result.keySet();\r\n    if (sourceTagSet.stream().filter(sourceTags -> sourceTags.isEmpty()).findAny().isPresent()) {\r\n        if (result.size() != 1) {\r\n            throw new PlacementConstraintParseException(\"Source allocation tags is required for a multi placement\" + \" constraint expression.\");\r\n        }\r\n    }\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "RegisterApplicationMasterResponse newInstance(Resource minCapability, Resource maxCapability, Map<ApplicationAccessType, String> acls, ByteBuffer key, List<Container> containersFromPreviousAttempt, String queue, List<NMToken> nmTokensFromPreviousAttempts)\n{\r\n    RegisterApplicationMasterResponse response = Records.newRecord(RegisterApplicationMasterResponse.class);\r\n    response.setMaximumResourceCapability(maxCapability);\r\n    response.setApplicationACLs(acls);\r\n    response.setClientToAMTokenMasterKey(key);\r\n    response.setContainersFromPreviousAttempts(containersFromPreviousAttempt);\r\n    response.setNMTokensFromPreviousAttempts(nmTokensFromPreviousAttempts);\r\n    response.setQueue(queue);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getMaximumResourceCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getMaximumResourceCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setMaximumResourceCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setMaximumResourceCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationACLs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationAccessType, String> getApplicationACLs()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationACLs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationACLs(Map<ApplicationAccessType, String> acls)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getClientToAMTokenMasterKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getClientToAMTokenMasterKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setClientToAMTokenMasterKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClientToAMTokenMasterKey(ByteBuffer key)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueue(String queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainersFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<Container> getContainersFromPreviousAttempts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainersFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainersFromPreviousAttempts(List<Container> containersFromPreviousAttempt)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNMTokensFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NMToken> getNMTokensFromPreviousAttempts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNMTokensFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNMTokensFromPreviousAttempts(List<NMToken> nmTokens)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSchedulerResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "EnumSet<SchedulerResourceTypes> getSchedulerResourceTypes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSchedulerResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSchedulerResourceTypes(EnumSet<SchedulerResourceTypes> types)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Resource> getResourceProfiles()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceProfiles(Map<String, Resource> profiles)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ResourceTypeInfo> getResourceTypes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceTypes(List<ResourceTypeInfo> types)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "UpdateApplicationPriorityRequest newInstance(ApplicationId applicationId, Priority priority)\n{\r\n    UpdateApplicationPriorityRequest request = Records.newRecord(UpdateApplicationPriorityRequest.class);\r\n    request.setApplicationId(applicationId);\r\n    request.setApplicationPriority(priority);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getApplicationPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "GetPluginInfoResponse newInstance(String driverName, String version)\n{\r\n    GetPluginInfoResponse response = Records.newRecord(GetPluginInfoResponse.class);\r\n    response.setDriverName(driverName);\r\n    response.setVersion(version);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setDriverName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDriverName(String driverName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getDriverName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDriverName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVersion(String version)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getVersion()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "StartContainersResponse newInstance(Map<String, ByteBuffer> servicesMetaData, List<ContainerId> succeededContainers, Map<ContainerId, SerializedException> failedContainers)\n{\r\n    StartContainersResponse response = Records.newRecord(StartContainersResponse.class);\r\n    response.setAllServicesMetaData(servicesMetaData);\r\n    response.setSuccessfullyStartedContainers(succeededContainers);\r\n    response.setFailedRequests(failedContainers);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSuccessfullyStartedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getSuccessfullyStartedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSuccessfullyStartedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSuccessfullyStartedContainers(List<ContainerId> succeededContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAllServicesMetaData",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, ByteBuffer> getAllServicesMetaData()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAllServicesMetaData",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllServicesMetaData(Map<String, ByteBuffer> allServicesMetaData)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "PreemptionContract newInstance(List<PreemptionResourceRequest> req, Set<PreemptionContainer> containers)\n{\r\n    PreemptionContract contract = Records.newRecord(PreemptionContract.class);\r\n    contract.setResourceRequest(req);\r\n    contract.setContainers(containers);\r\n    return contract;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<PreemptionResourceRequest> getResourceRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceRequest(List<PreemptionResourceRequest> req)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<PreemptionContainer> getContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainers(Set<PreemptionContainer> containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "StopContainersRequest newInstance(List<ContainerId> containerIds)\n{\r\n    StopContainersRequest request = Records.newRecord(StopContainersRequest.class);\r\n    request.setContainerIds(containerIds);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getContainerIds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerIds(List<ContainerId> containerIds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "PreemptionContainer newInstance(ContainerId id)\n{\r\n    PreemptionContainer container = Records.newRecord(PreemptionContainer.class);\r\n    container.setId(id);\r\n    return container;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(ContainerId id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetLocalizationStatusesRequest newInstance(List<ContainerId> containerIds)\n{\r\n    GetLocalizationStatusesRequest request = Records.newRecord(GetLocalizationStatusesRequest.class);\r\n    request.setContainerIds(containerIds);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getContainerIds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerIds(List<ContainerId> containerIds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateResponse newInstance(int responseId, List<ContainerStatus> completedContainers, List<Container> allocatedContainers, List<NodeReport> updatedNodes, Resource availResources, AMCommand command, int numClusterNodes, PreemptionMessage preempt, List<NMToken> nmTokens)\n{\r\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes).responseId(responseId).completedContainersStatuses(completedContainers).allocatedContainers(allocatedContainers).updatedNodes(updatedNodes).availableResources(availResources).amCommand(command).preemptionMessage(preempt).nmTokens(nmTokens).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateResponse newInstance(int responseId, List<ContainerStatus> completedContainers, List<Container> allocatedContainers, List<NodeReport> updatedNodes, Resource availResources, AMCommand command, int numClusterNodes, PreemptionMessage preempt, List<NMToken> nmTokens, CollectorInfo collectorInfo)\n{\r\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes).responseId(responseId).completedContainersStatuses(completedContainers).allocatedContainers(allocatedContainers).updatedNodes(updatedNodes).availableResources(availResources).amCommand(command).preemptionMessage(preempt).nmTokens(nmTokens).collectorInfo(collectorInfo).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateResponse newInstance(int responseId, List<ContainerStatus> completedContainers, List<Container> allocatedContainers, List<NodeReport> updatedNodes, Resource availResources, AMCommand command, int numClusterNodes, PreemptionMessage preempt, List<NMToken> nmTokens, Token amRMToken, List<UpdatedContainer> updatedContainers)\n{\r\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes).responseId(responseId).completedContainersStatuses(completedContainers).allocatedContainers(allocatedContainers).updatedNodes(updatedNodes).availableResources(availResources).amCommand(command).preemptionMessage(preempt).nmTokens(nmTokens).updatedContainers(updatedContainers).amRmToken(amRMToken).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateResponse newInstance(int responseId, List<ContainerStatus> completedContainers, List<Container> allocatedContainers, List<NodeReport> updatedNodes, Resource availResources, AMCommand command, int numClusterNodes, PreemptionMessage preempt, List<NMToken> nmTokens, Token amRMToken, List<UpdatedContainer> updatedContainers, CollectorInfo collectorInfo)\n{\r\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes).responseId(responseId).completedContainersStatuses(completedContainers).allocatedContainers(allocatedContainers).updatedNodes(updatedNodes).availableResources(availResources).amCommand(command).preemptionMessage(preempt).nmTokens(nmTokens).updatedContainers(updatedContainers).amRmToken(amRMToken).collectorInfo(collectorInfo).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "AllocateResponse newInstance(int responseId, List<ContainerStatus> completedContainers, List<Container> allocatedContainers, List<NodeReport> updatedNodes, Resource availResources, AMCommand command, int numClusterNodes, PreemptionMessage preempt, List<NMToken> nmTokens, Token amRMToken, List<UpdatedContainer> updatedContainers, CollectorInfo collectorInfo, EnhancedHeadroom enhancedHeadroom)\n{\r\n    AllocateResponse response = newInstance(responseId, completedContainers, allocatedContainers, updatedNodes, availResources, command, numClusterNodes, preempt, nmTokens, amRMToken, updatedContainers, collectorInfo);\r\n    response.setEnhancedHeadroom(enhancedHeadroom);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAMCommand",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AMCommand getAMCommand()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAMCommand",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMCommand(AMCommand command)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResponseId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getResponseId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResponseId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResponseId(int responseId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAllocatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<Container> getAllocatedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAllocatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocatedContainers(List<Container> containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAvailableResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getAvailableResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAvailableResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAvailableResources(Resource limit)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getCompletedContainersStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerStatus> getCompletedContainersStatuses()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setCompletedContainersStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCompletedContainersStatuses(List<ContainerStatus> containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUpdatedNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeReport> getUpdatedNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUpdatedNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdatedNodes(final List<NodeReport> updatedNodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNumClusterNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumClusterNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNumClusterNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumClusterNodes(int numNodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getPreemptionMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "PreemptionMessage getPreemptionMessage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setPreemptionMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPreemptionMessage(PreemptionMessage request)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNMTokens",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NMToken> getNMTokens()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNMTokens",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNMTokens(List<NMToken> nmTokens)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUpdatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<UpdatedContainer> getUpdatedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUpdatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdatedContainers(List<UpdatedContainer> updatedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAMRMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getAMRMToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAMRMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMRMToken(Token amRMToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getApplicationPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getCollectorInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "CollectorInfo getCollectorInfo()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setCollectorInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCollectorInfo(CollectorInfo info)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUpdateErrors",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<UpdateContainerError> getUpdateErrors()\n{\r\n    return new ArrayList<>();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUpdateErrors",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdateErrors(List<UpdateContainerError> updateErrors)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainersFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<Container> getContainersFromPreviousAttempts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainersFromPreviousAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainersFromPreviousAttempts(List<Container> containersFromPreviousAttempt)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getRejectedSchedulingRequests",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "List<RejectedSchedulingRequest> getRejectedSchedulingRequests()\n{\r\n    return Collections.emptyList();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setRejectedSchedulingRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRejectedSchedulingRequests(List<RejectedSchedulingRequest> rejectedRequests)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newBuilder",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AllocateResponseBuilder newBuilder()\n{\r\n    return new AllocateResponseBuilder();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getEnhancedHeadroom",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "EnhancedHeadroom getEnhancedHeadroom()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setEnhancedHeadroom",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEnhancedHeadroom(EnhancedHeadroom enhancedHeadroom)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetApplicationsRequest newInstance()\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "GetApplicationsRequest newInstance(ApplicationsRequestScope scope, Set<String> users, Set<String> queues, Set<String> applicationTypes, Set<String> applicationTags, EnumSet<YarnApplicationState> applicationStates, Range<Long> startRange, Range<Long> finishRange, Long limit)\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    if (scope != null) {\r\n        request.setScope(scope);\r\n    }\r\n    request.setUsers(users);\r\n    request.setQueues(queues);\r\n    request.setApplicationTypes(applicationTypes);\r\n    request.setApplicationTags(applicationTags);\r\n    request.setApplicationStates(applicationStates);\r\n    if (startRange != null) {\r\n        request.setStartRange(startRange.getMinimum(), startRange.getMaximum());\r\n    }\r\n    if (finishRange != null) {\r\n        request.setFinishRange(finishRange.getMinimum(), finishRange.getMaximum());\r\n    }\r\n    if (limit != null) {\r\n        request.setLimit(limit);\r\n    }\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsRequest newInstance(ApplicationsRequestScope scope)\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    request.setScope(scope);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsRequest newInstance(Set<String> applicationTypes)\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    request.setApplicationTypes(applicationTypes);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsRequest newInstance(EnumSet<YarnApplicationState> applicationStates)\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    request.setApplicationStates(applicationStates);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "GetApplicationsRequest newInstance(Set<String> applicationTypes, EnumSet<YarnApplicationState> applicationStates)\n{\r\n    GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\r\n    request.setApplicationTypes(applicationTypes);\r\n    request.setApplicationStates(applicationStates);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getApplicationTypes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationTypes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTypes(Set<String> applicationTypes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationStates",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "EnumSet<YarnApplicationState> getApplicationStates()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationStates",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationStates(EnumSet<YarnApplicationState> applicationStates)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationStates",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationStates(Set<String> applicationStates)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUsers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getUsers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUsers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUsers(Set<String> users)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getQueues()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueues(Set<String> queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getLimit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getLimit()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setLimit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLimit(long limit)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getStartRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Range<Long> getStartRange()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setStartRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartRange(Range<Long> range)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setStartRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartRange(long begin, long end) throws IllegalArgumentException",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFinishRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Range<Long> getFinishRange()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFinishRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinishRange(Range<Long> range)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFinishRange",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinishRange(long begin, long end)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getApplicationTags()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTags(Set<String> tags)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getScope",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationsRequestScope getScope()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setScope",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setScope(ApplicationsRequestScope scope)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setName(String name)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "SignalContainerRequest newInstance(ContainerId containerId, SignalContainerCommand signalContainerCommand)\n{\r\n    SignalContainerRequest request = Records.newRecord(SignalContainerRequest.class);\r\n    request.setContainerId(containerId);\r\n    request.setCommand(signalContainerCommand);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getCommand",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SignalContainerCommand getCommand()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setCommand",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCommand(SignalContainerCommand command)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "CheckForDecommissioningNodesResponse newInstance(Set<NodeId> decommissioningNodes)\n{\r\n    CheckForDecommissioningNodesResponse response = Records.newRecord(CheckForDecommissioningNodesResponse.class);\r\n    response.setDecommissioningNodes(decommissioningNodes);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setDecommissioningNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDecommissioningNodes(Set<NodeId> decommissioningNodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getDecommissioningNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<NodeId> getDecommissioningNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeLabel newInstance(String name)\n{\r\n    return newInstance(name, DEFAULT_NODE_LABEL_EXCLUSIVITY);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeLabel newInstance(String name, boolean isExclusive)\n{\r\n    NodeLabel request = Records.newRecord(NodeLabel.class);\r\n    request.setName(name);\r\n    request.setExclusivity(isExclusive);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setName(String name)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "isExclusive",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isExclusive()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExclusivity",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExclusivity(boolean isExclusive)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int compareTo(NodeLabel other)\n{\r\n    return getName().compareTo(other.getName());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (obj instanceof NodeLabel) {\r\n        NodeLabel nl = (NodeLabel) obj;\r\n        return nl.getName().equals(getName()) && nl.isExclusive() == isExclusive();\r\n    }\r\n    return false;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"<\").append(getName()).append(\":exclusivity=\").append(isExclusive()).append(\">\");\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    return (getName().hashCode() << 16) + (isExclusive() ? 1 : 0);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getQueue()\n{\r\n    return getInfo().get(QUEUE_INFO_KEY).toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setQueue(String queue)\n{\r\n    addInfo(QUEUE_INFO_KEY, queue);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "isApplicationEntity",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isApplicationEntity(TimelineEntity te)\n{\r\n    return (te == null ? false : te.getType().equals(TimelineEntityType.YARN_APPLICATION.toString()));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getApplicationEvent",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "TimelineEvent getApplicationEvent(TimelineEntity te, String eventId)\n{\r\n    if (isApplicationEntity(te)) {\r\n        for (TimelineEvent event : te.getEvents()) {\r\n            if (event.getId().equals(eventId)) {\r\n                return event;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RollbackResponse newInstance()\n{\r\n    return Records.newRecord(RollbackResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "UpdateNodeResourceResponse newInstance()\n{\r\n    UpdateNodeResourceResponse response = Records.newRecord(UpdateNodeResourceResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "ReservationDefinition newInstance(long arrival, long deadline, ReservationRequests reservationRequests, String name, String recurrenceExpression, Priority priority)\n{\r\n    ReservationDefinition rDefinition = Records.newRecord(ReservationDefinition.class);\r\n    rDefinition.setArrival(arrival);\r\n    rDefinition.setDeadline(deadline);\r\n    rDefinition.setReservationRequests(reservationRequests);\r\n    rDefinition.setReservationName(name);\r\n    rDefinition.setRecurrenceExpression(recurrenceExpression);\r\n    rDefinition.setPriority(priority);\r\n    return rDefinition;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationDefinition newInstance(long arrival, long deadline, ReservationRequests reservationRequests, String name)\n{\r\n    ReservationDefinition rDefinition = newInstance(arrival, deadline, reservationRequests, name, \"0\", Priority.UNDEFINED);\r\n    return rDefinition;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getArrival",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getArrival()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setArrival",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setArrival(long earliestStartTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDeadline",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getDeadline()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDeadline",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDeadline(long latestEndTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationRequests getReservationRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationRequests(ReservationRequests reservationRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservationName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getReservationName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservationName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationName(String name)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRecurrenceExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRecurrenceExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRecurrenceExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRecurrenceExpression(String recurrenceExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeAttribute newInstance(String attributeName, NodeAttributeType attributeType, String attributeValue)\n{\r\n    return newInstance(PREFIX_CENTRALIZED, attributeName, attributeType, attributeValue);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "NodeAttribute newInstance(String attributePrefix, String attributeName, NodeAttributeType attributeType, String attributeValue)\n{\r\n    NodeAttribute nodeAttribute = Records.newRecord(NodeAttribute.class);\r\n    NodeAttributeKey nodeAttributeKey = NodeAttributeKey.newInstance(attributePrefix, attributeName);\r\n    nodeAttribute.setAttributeKey(nodeAttributeKey);\r\n    nodeAttribute.setAttributeType(attributeType);\r\n    nodeAttribute.setAttributeValue(attributeValue);\r\n    return nodeAttribute;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeAttributeKey getAttributeKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeKey(NodeAttributeKey attributeKey)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAttributeValue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeValue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeValue(String attributeValue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeAttributeType getAttributeType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeType(NodeAttributeType attributeType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void init(Configuration bootstrapConf) throws Exception\n{\r\n    initInternal(bootstrapConf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "close",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void close() throws Exception\n{\r\n    closeInternal();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getConfigurationInputStream",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "InputStream getConfigurationInputStream(Configuration bootstrapConf, String name) throws YarnException, IOException",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "initInternal",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void initInternal(Configuration bootstrapConf) throws Exception",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "closeInternal",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void closeInternal() throws Exception",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getRecoveryPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Path getRecoveryPath()\n{\r\n    return recoveryPath;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "initializeApplication",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void initializeApplication(ApplicationInitializationContext initAppContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "stopApplication",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void stopApplication(ApplicationTerminationContext stopAppContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getMetaData",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ByteBuffer getMetaData()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "initializeContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void initializeContainer(ContainerInitializationContext initContainerContext)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "stopContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void stopContainer(ContainerTerminationContext stopContainerContext)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "setRecoveryPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRecoveryPath(Path recoveryPath)\n{\r\n    this.recoveryPath = recoveryPath;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getAuxiliaryLocalPathHandler",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AuxiliaryLocalPathHandler getAuxiliaryLocalPathHandler()\n{\r\n    return this.auxiliaryLocalPathHandler;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "setAuxiliaryLocalPathHandler",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAuxiliaryLocalPathHandler(AuxiliaryLocalPathHandler auxiliaryLocalPathHandler)\n{\r\n    this.auxiliaryLocalPathHandler = auxiliaryLocalPathHandler;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getHealthStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TimelineHealthStatus getHealthStatus()\n{\r\n    return healthStatus;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getDiagnosticsInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnosticsInfo()\n{\r\n    return diagnosticsInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setHealthStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHealthStatus(TimelineHealthStatus healthStatus)\n{\r\n    this.healthStatus = healthStatus;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setDiagnosticsInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnosticsInfo(String diagnosticsInfo)\n{\r\n    this.diagnosticsInfo = diagnosticsInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "QueueUserACLInfo newInstance(String queueName, List<QueueACL> acls)\n{\r\n    QueueUserACLInfo info = Records.newRecord(QueueUserACLInfo.class);\r\n    info.setQueueName(queueName);\r\n    info.setUserAcls(acls);\r\n    return info;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueueName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueueName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueName(String queueName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUserAcls",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<QueueACL> getUserAcls()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUserAcls",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUserAcls(List<QueueACL> acls)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterMetricsRequest newInstance()\n{\r\n    GetClusterMetricsRequest request = Records.newRecord(GetClusterMetricsRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainerReportResponse newInstance(ContainerReport containerReport)\n{\r\n    GetContainerReportResponse response = Records.newRecord(GetContainerReportResponse.class);\r\n    response.setContainerReport(containerReport);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerReport getContainerReport()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerReport(ContainerReport containerReport)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceLocalizationResponse newInstance()\n{\r\n    ResourceLocalizationResponse record = Records.newRecord(ResourceLocalizationResponse.class);\r\n    return record;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptReportRequest newInstance(ApplicationAttemptId applicationAttemptId)\n{\r\n    GetApplicationAttemptReportRequest request = Records.newRecord(GetApplicationAttemptReportRequest.class);\r\n    request.setApplicationAttemptId(applicationAttemptId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptId(ApplicationAttemptId applicationAttemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "UpdateApplicationTimeoutsRequest newInstance(ApplicationId applicationId, Map<ApplicationTimeoutType, String> applicationTimeouts)\n{\r\n    UpdateApplicationTimeoutsRequest request = Records.newRecord(UpdateApplicationTimeoutsRequest.class);\r\n    request.setApplicationId(applicationId);\r\n    request.setApplicationTimeouts(applicationTimeouts);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationTimeoutType, String> getApplicationTimeouts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTimeouts(Map<ApplicationTimeoutType, String> applicationTimeouts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetPluginInfoRequest newInstance()\n{\r\n    return Records.newRecord(GetPluginInfoRequest.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesResourcesRequest newInstance()\n{\r\n    RefreshNodesResourcesRequest request = Records.newRecord(RefreshNodesResourcesRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetQueueInfoResponse newInstance(QueueInfo queueInfo)\n{\r\n    GetQueueInfoResponse response = Records.newRecord(GetQueueInfoResponse.class);\r\n    response.setQueueInfo(queueInfo);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getQueueInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "QueueInfo getQueueInfo()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setQueueInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueueInfo(QueueInfo queueInfo)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getAbout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAbout()\n{\r\n    return about;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setAbout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAbout(String about)\n{\r\n    this.about = about;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getTimelineServiceVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTimelineServiceVersion()\n{\r\n    return timelineServiceVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setTimelineServiceVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimelineServiceVersion(String timelineServiceVersion)\n{\r\n    this.timelineServiceVersion = timelineServiceVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getTimelineServiceBuildVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTimelineServiceBuildVersion()\n{\r\n    return timelineServiceBuildVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setTimelineServiceBuildVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimelineServiceBuildVersion(String timelineServiceBuildVersion)\n{\r\n    this.timelineServiceBuildVersion = timelineServiceBuildVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getTimelineServiceVersionBuiltOn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTimelineServiceVersionBuiltOn()\n{\r\n    return timelineServiceVersionBuiltOn;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setTimelineServiceVersionBuiltOn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimelineServiceVersionBuiltOn(String timelineServiceVersionBuiltOn)\n{\r\n    this.timelineServiceVersionBuiltOn = timelineServiceVersionBuiltOn;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getHadoopVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHadoopVersion()\n{\r\n    return hadoopVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setHadoopVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHadoopVersion(String hadoopVersion)\n{\r\n    this.hadoopVersion = hadoopVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getHadoopBuildVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHadoopBuildVersion()\n{\r\n    return hadoopBuildVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setHadoopBuildVersion",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHadoopBuildVersion(String hadoopBuildVersion)\n{\r\n    this.hadoopBuildVersion = hadoopBuildVersion;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getHadoopVersionBuiltOn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHadoopVersionBuiltOn()\n{\r\n    return hadoopVersionBuiltOn;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setHadoopVersionBuiltOn",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHadoopVersionBuiltOn(String hadoopVersionBuiltOn)\n{\r\n    this.hadoopVersionBuiltOn = hadoopVersionBuiltOn;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptsRequest newInstance(ApplicationId applicationId)\n{\r\n    GetApplicationAttemptsRequest request = Records.newRecord(GetApplicationAttemptsRequest.class);\r\n    request.setApplicationId(applicationId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetLocalizationStatusesResponse newInstance(Map<ContainerId, List<LocalizationStatus>> statuses, Map<ContainerId, SerializedException> failedRequests)\n{\r\n    GetLocalizationStatusesResponse response = Records.newRecord(GetLocalizationStatusesResponse.class);\r\n    response.setLocalizationStatuses(statuses);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getLocalizationStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, List<LocalizationStatus>> getLocalizationStatuses()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setLocalizationStatuses",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLocalizationStatuses(Map<ContainerId, List<LocalizationStatus>> statuses)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\util",
  "methodName" : "newRecord",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "T newRecord(Class<T> cls)\n{\r\n    return factory.newRecordInstance(cls);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "NodePublishVolumeRequest newInstance(String volumeId, boolean readOnly, String targetPath, String stagingPath, VolumeCapability capability, Map<String, String> publishContext, Map<String, String> secrets)\n{\r\n    NodePublishVolumeRequest request = Records.newRecord(NodePublishVolumeRequest.class);\r\n    request.setVolumeId(volumeId);\r\n    request.setReadonly(readOnly);\r\n    request.setTargetPath(targetPath);\r\n    request.setStagingPath(stagingPath);\r\n    request.setVolumeCapability(capability);\r\n    request.setPublishContext(publishContext);\r\n    request.setSecrets(secrets);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVolumeId(String volumeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getVolumeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReadonly",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReadonly(boolean readonly)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReadOnly",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getReadOnly()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTargetPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTargetPath(String targetPath)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTargetPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTargetPath()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setStagingPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStagingPath(String stagingPath)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getStagingPath",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getStagingPath()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setVolumeCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVolumeCapability(VolumeCapability capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getVolumeCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "VolumeCapability getVolumeCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setPublishContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPublishContext(Map<String, String> publishContext)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getPublishContext",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getPublishContext()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSecrets",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSecrets(Map<String, String> secrets)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSecrets",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getSecrets()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "String toString()\n{\r\n    JsonObject jsonObject = new JsonObject();\r\n    jsonObject.addProperty(\"VolumeId\", getVolumeId());\r\n    jsonObject.addProperty(\"ReadOnly\", getReadOnly());\r\n    jsonObject.addProperty(\"TargetPath\", getTargetPath());\r\n    jsonObject.addProperty(\"StagingPath\", getStagingPath());\r\n    if (getVolumeCapability() != null) {\r\n        JsonObject jsonCap = new JsonObject();\r\n        jsonCap.addProperty(\"AccessMode\", getVolumeCapability().getAccessMode().name());\r\n        jsonCap.addProperty(\"VolumeType\", getVolumeCapability().getVolumeType().name());\r\n        jsonObject.addProperty(\"VolumeCapability\", jsonCap.toString());\r\n    }\r\n    return jsonObject.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ResourceLocalizationRequest newInstance(ContainerId containerId, Map<String, LocalResource> localResources)\n{\r\n    ResourceLocalizationRequest record = Records.newRecord(ResourceLocalizationRequest.class);\r\n    record.setContainerId(containerId);\r\n    record.setLocalResources(localResources);\r\n    return record;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getLocalResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, LocalResource> getLocalResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setLocalResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLocalResources(Map<String, LocalResource> localResources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ReservationId newInstance(long clusterTimestamp, long id)\n{\r\n    ReservationId reservationId = Records.newRecord(ReservationId.class);\r\n    reservationId.setClusterTimestamp(clusterTimestamp);\r\n    reservationId.setId(id);\r\n    reservationId.build();\r\n    return reservationId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setId(long id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getClusterTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getClusterTimestamp()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setClusterTimestamp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClusterTimestamp(long clusterTimestamp)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int compareTo(ReservationId other)\n{\r\n    if (this.getClusterTimestamp() - other.getClusterTimestamp() == 0) {\r\n        return Long.compare(getId(), other.getId());\r\n    } else {\r\n        return Long.compare(getClusterTimestamp(), other.getClusterTimestamp());\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder(64);\r\n    sb.append(reserveIdStrPrefix).append(getClusterTimestamp()).append('_');\r\n    FastNumberFormat.format(sb, getId(), RESERVATION_ID_MIN_DIGITS);\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "parseReservationId",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ReservationId parseReservationId(String reservationId) throws IOException\n{\r\n    if (reservationId == null) {\r\n        return null;\r\n    }\r\n    if (!reservationId.startsWith(reserveIdStrPrefix)) {\r\n        throw new IOException(\"The specified reservation id is invalid: \" + reservationId);\r\n    }\r\n    String[] resFields = reservationId.split(\"_\");\r\n    if (resFields.length != 3) {\r\n        throw new IOException(\"The specified reservation id is not parseable: \" + reservationId);\r\n    }\r\n    return newInstance(Long.parseLong(resFields[1]), Long.parseLong(resFields[2]));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    int result = 1;\r\n    result = prime * result + (int) (getClusterTimestamp() ^ (getClusterTimestamp() >>> 32));\r\n    result = prime * result + (int) (getId() ^ (getId() >>> 32));\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj)\r\n        return true;\r\n    if (obj == null)\r\n        return false;\r\n    if (getClass() != obj.getClass())\r\n        return false;\r\n    ReservationId other = (ReservationId) obj;\r\n    if (getClusterTimestamp() != other.getClusterTimestamp())\r\n        return false;\r\n    if (getId() != other.getId())\r\n        return false;\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "UpdateApplicationPriorityResponse newInstance(Priority priority)\n{\r\n    UpdateApplicationPriorityResponse response = Records.newRecord(UpdateApplicationPriorityResponse.class);\r\n    response.setApplicationPriority(priority);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getApplicationPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAppId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getAppId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAppId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAppId(ApplicationId id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getResourceKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceKey(String key)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 11,
  "sourceCodeText" : "ApplicationAttemptReport newInstance(ApplicationAttemptId applicationAttemptId, String host, int rpcPort, String url, String oUrl, String diagnostics, YarnApplicationAttemptState state, ContainerId amContainerId, long startTime, long finishTime)\n{\r\n    ApplicationAttemptReport report = Records.newRecord(ApplicationAttemptReport.class);\r\n    report.setApplicationAttemptId(applicationAttemptId);\r\n    report.setHost(host);\r\n    report.setRpcPort(rpcPort);\r\n    report.setTrackingUrl(url);\r\n    report.setOriginalTrackingUrl(oUrl);\r\n    report.setDiagnostics(diagnostics);\r\n    report.setYarnApplicationAttemptState(state);\r\n    report.setAMContainerId(amContainerId);\r\n    report.setStartTime(startTime);\r\n    report.setFinishTime(finishTime);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationAttemptReport newInstance(ApplicationAttemptId applicationAttemptId, String host, int rpcPort, String url, String oUrl, String diagnostics, YarnApplicationAttemptState state, ContainerId amContainerId)\n{\r\n    return newInstance(applicationAttemptId, host, rpcPort, url, oUrl, diagnostics, state, amContainerId, 0L, 0L);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getYarnApplicationAttemptState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "YarnApplicationAttemptState getYarnApplicationAttemptState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setYarnApplicationAttemptState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setYarnApplicationAttemptState(YarnApplicationAttemptState yarnApplicationAttemptState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getRpcPort()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRpcPort(int rpcPort)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTrackingUrl(String url)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getOriginalTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getOriginalTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setOriginalTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOriginalTrackingUrl(String oUrl)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationAttemptId(ApplicationAttemptId applicationAttemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAMContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getAMContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAMContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMContainerId(ContainerId amContainerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getStartTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(long startTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getFinishTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinishTime(long finishTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "addDeprecatedKeys",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void addDeprecatedKeys()\n{\r\n    Configuration.addDeprecations(new DeprecationDelta[] { new DeprecationDelta(\"yarn.client.max-nodemanagers-proxies\", NM_CLIENT_MAX_NM_PROXIES) });\r\n    Configuration.addDeprecations(new DeprecationDelta[] { new DeprecationDelta(RM_SYSTEM_METRICS_PUBLISHER_ENABLED, SYSTEM_METRICS_PUBLISHER_ENABLED), new DeprecationDelta(RM_ZK_ACL, CommonConfigurationKeys.ZK_ACL), new DeprecationDelta(RM_ZK_AUTH, CommonConfigurationKeys.ZK_AUTH), new DeprecationDelta(RM_ZK_ADDRESS, CommonConfigurationKeys.ZK_ADDRESS), new DeprecationDelta(RM_ZK_NUM_RETRIES, CommonConfigurationKeys.ZK_NUM_RETRIES), new DeprecationDelta(RM_ZK_TIMEOUT_MS, CommonConfigurationKeys.ZK_TIMEOUT_MS), new DeprecationDelta(RM_ZK_RETRY_INTERVAL_MS, CommonConfigurationKeys.ZK_RETRY_INTERVAL_MS), new DeprecationDelta(HADOOP_HTTP_WEBAPP_SCHEDULER_PAGE, YARN_HTTP_WEBAPP_SCHEDULER_PAGE) });\r\n    Configuration.addDeprecations(new DeprecationDelta[] { new DeprecationDelta(\"yarn.resourcemanager.display.per-user-apps\", FILTER_ENTITY_LIST_BY_USER) });\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isAclEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isAclEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YARN_ACL_ENABLE, DEFAULT_YARN_ACL_ENABLE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getExclusiveEnforcedPartitions",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Set<String> getExclusiveEnforcedPartitions(Configuration conf)\n{\r\n    Set<String> exclusiveEnforcedPartitions = new HashSet<>();\r\n    String[] configuredPartitions = conf.getStrings(EXCLUSIVE_ENFORCED_PARTITIONS);\r\n    if (configuredPartitions != null) {\r\n        for (String partition : configuredPartitions) {\r\n            exclusiveEnforcedPartitions.add(partition);\r\n        }\r\n    }\r\n    return exclusiveEnforcedPartitions;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isDistributedNodeLabelConfiguration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isDistributedNodeLabelConfiguration(Configuration conf)\n{\r\n    return DISTRIBUTED_NODELABEL_CONFIGURATION_TYPE.equals(conf.get(NODELABEL_CONFIGURATION_TYPE, DEFAULT_NODELABEL_CONFIGURATION_TYPE));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isCentralizedNodeLabelConfiguration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isCentralizedNodeLabelConfiguration(Configuration conf)\n{\r\n    return CENTRALIZED_NODELABEL_CONFIGURATION_TYPE.equals(conf.get(NODELABEL_CONFIGURATION_TYPE, DEFAULT_NODELABEL_CONFIGURATION_TYPE));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isDelegatedCentralizedNodeLabelConfiguration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isDelegatedCentralizedNodeLabelConfiguration(Configuration conf)\n{\r\n    return DELEGATED_CENTALIZED_NODELABEL_CONFIGURATION_TYPE.equals(conf.get(NODELABEL_CONFIGURATION_TYPE, DEFAULT_NODELABEL_CONFIGURATION_TYPE));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "areNodeLabelsEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean areNodeLabelsEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(NODE_LABELS_ENABLED, DEFAULT_NODE_LABELS_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getServiceAddressConfKeys",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "List<String> getServiceAddressConfKeys(Configuration conf)\n{\r\n    return useHttps(conf) ? RM_SERVICES_ADDRESS_CONF_KEYS_HTTPS : RM_SERVICES_ADDRESS_CONF_KEYS_HTTP;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getSocketAddr",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "InetSocketAddress getSocketAddr(String name, String defaultAddress, int defaultPort)\n{\r\n    String address;\r\n    if (HAUtil.isHAEnabled(this) && getServiceAddressConfKeys(this).contains(name)) {\r\n        address = HAUtil.getConfValueForRMInstance(name, defaultAddress, this);\r\n    } else {\r\n        address = get(name, defaultAddress);\r\n    }\r\n    return NetUtils.createSocketAddr(address, defaultPort, name);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "updateConnectAddr",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "InetSocketAddress updateConnectAddr(String name, InetSocketAddress addr)\n{\r\n    String prefix = name;\r\n    if (HAUtil.isHAEnabled(this) && getServiceAddressConfKeys(this).contains(name)) {\r\n        prefix = HAUtil.addSuffix(prefix, HAUtil.getRMHAId(this));\r\n    }\r\n    return super.updateConnectAddr(prefix, addr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getRMDefaultPortNumber",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "int getRMDefaultPortNumber(String addressPrefix, Configuration conf)\n{\r\n    if (addressPrefix.equals(YarnConfiguration.RM_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_PORT;\r\n    } else if (addressPrefix.equals(YarnConfiguration.RM_SCHEDULER_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT;\r\n    } else if (addressPrefix.equals(YarnConfiguration.RM_WEBAPP_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_WEBAPP_PORT;\r\n    } else if (addressPrefix.equals(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT;\r\n    } else if (addressPrefix.equals(YarnConfiguration.RM_RESOURCE_TRACKER_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_RESOURCE_TRACKER_PORT;\r\n    } else if (addressPrefix.equals(YarnConfiguration.RM_ADMIN_ADDRESS)) {\r\n        return YarnConfiguration.DEFAULT_RM_ADMIN_PORT;\r\n    } else {\r\n        throw new HadoopIllegalArgumentException(\"Invalid RM RPC address Prefix: \" + addressPrefix + \". The valid value should be one of \" + getServiceAddressConfKeys(conf));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "useHttps",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean useHttps(Configuration conf)\n{\r\n    return HttpConfig.Policy.HTTPS_ONLY == HttpConfig.Policy.fromString(conf.get(YARN_HTTP_POLICY_KEY, YARN_HTTP_POLICY_DEFAULT));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "shouldRMFailFast",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean shouldRMFailFast(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.RM_FAIL_FAST, conf.getBoolean(YarnConfiguration.YARN_FAIL_FAST, YarnConfiguration.DEFAULT_YARN_FAIL_FAST));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getClusterId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getClusterId(Configuration conf)\n{\r\n    String clusterId = conf.get(YarnConfiguration.RM_CLUSTER_ID);\r\n    if (clusterId == null) {\r\n        throw new HadoopIllegalArgumentException(\"Configuration doesn't specify \" + YarnConfiguration.RM_CLUSTER_ID);\r\n    }\r\n    return clusterId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isDistSchedulingEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isDistSchedulingEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.DIST_SCHEDULING_ENABLED, YarnConfiguration.DEFAULT_DIST_SCHEDULING_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isOpportunisticContainerAllocationEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isOpportunisticContainerAllocationEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.OPPORTUNISTIC_CONTAINER_ALLOCATION_ENABLED, YarnConfiguration.DEFAULT_OPPORTUNISTIC_CONTAINER_ALLOCATION_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "timelineServiceEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean timelineServiceEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED, YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getTimelineServiceVersion",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "float getTimelineServiceVersion(Configuration conf)\n{\r\n    return conf.getFloat(TIMELINE_SERVICE_VERSION, DEFAULT_TIMELINE_SERVICE_VERSION);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "timelineServiceV2Enabled",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean timelineServiceV2Enabled(Configuration conf)\n{\r\n    boolean enabled = false;\r\n    if (timelineServiceEnabled(conf)) {\r\n        Collection<Float> versions = getTimelineServiceVersions(conf);\r\n        for (Float version : versions) {\r\n            if (version.intValue() == 2) {\r\n                enabled = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return enabled;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "timelineServiceV1Enabled",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean timelineServiceV1Enabled(Configuration conf)\n{\r\n    boolean enabled = false;\r\n    if (timelineServiceEnabled(conf)) {\r\n        Collection<Float> versions = getTimelineServiceVersions(conf);\r\n        for (Float version : versions) {\r\n            if (version.intValue() == 1) {\r\n                enabled = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return enabled;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "timelineServiceV15Enabled",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean timelineServiceV15Enabled(Configuration conf)\n{\r\n    boolean enabled = false;\r\n    if (timelineServiceEnabled(conf)) {\r\n        Collection<Float> versions = getTimelineServiceVersions(conf);\r\n        for (Float version : versions) {\r\n            if (Float.compare(version, 1.5f) == 0) {\r\n                enabled = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return enabled;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getTimelineServiceVersions",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Collection<Float> getTimelineServiceVersions(Configuration conf)\n{\r\n    String versions = conf.get(TIMELINE_SERVICE_VERSIONS);\r\n    if (versions == null) {\r\n        versions = Float.toString(getTimelineServiceVersion(conf));\r\n    }\r\n    List<String> stringList = Arrays.asList(versions.split(\",\"));\r\n    List<Float> floatList = new ArrayList<Float>();\r\n    for (String s : stringList) {\r\n        Float f = Float.parseFloat(s);\r\n        floatList.add(f);\r\n    }\r\n    return floatList;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "systemMetricsPublisherEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean systemMetricsPublisherEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.SYSTEM_METRICS_PUBLISHER_ENABLED, YarnConfiguration.DEFAULT_SYSTEM_METRICS_PUBLISHER_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "numaAwarenessEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean numaAwarenessEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(NM_NUMA_AWARENESS_ENABLED, DEFAULT_NM_NUMA_AWARENESS_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getSkipNodeInterval",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "long getSkipNodeInterval(Configuration conf)\n{\r\n    long heartbeatIntvl = conf.getLong(YarnConfiguration.RM_NM_HEARTBEAT_INTERVAL_MS, YarnConfiguration.DEFAULT_RM_NM_HEARTBEAT_INTERVAL_MS);\r\n    int multiplier = conf.getInt(SCHEDULER_SKIP_NODE_MULTIPLIER, DEFAULT_SCHEDULER_SKIP_NODE_MULTIPLIER);\r\n    return multiplier * heartbeatIntvl;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "main",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void main(String[] args) throws Exception\n{\r\n    new YarnConfiguration(new Configuration()).writeXml(System.out);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeReport newInstance(NodeId nodeId, NodeState nodeState, String httpAddress, String rackName, Resource used, Resource capability, int numContainers, String healthReport, long lastHealthReportTime)\n{\r\n    return newInstance(nodeId, nodeState, httpAddress, rackName, used, capability, numContainers, healthReport, lastHealthReportTime, null, null, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "NodeReport newInstance(NodeId nodeId, NodeState nodeState, String httpAddress, String rackName, Resource used, Resource capability, int numContainers, String healthReport, long lastHealthReportTime, Set<String> nodeLabels, Integer decommissioningTimeout, NodeUpdateType nodeUpdateType)\n{\r\n    NodeReport nodeReport = Records.newRecord(NodeReport.class);\r\n    nodeReport.setNodeId(nodeId);\r\n    nodeReport.setNodeState(nodeState);\r\n    nodeReport.setHttpAddress(httpAddress);\r\n    nodeReport.setRackName(rackName);\r\n    nodeReport.setUsed(used);\r\n    nodeReport.setCapability(capability);\r\n    nodeReport.setNumContainers(numContainers);\r\n    nodeReport.setHealthReport(healthReport);\r\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\r\n    nodeReport.setNodeLabels(nodeLabels);\r\n    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\r\n    nodeReport.setNodeUpdateType(nodeUpdateType);\r\n    return nodeReport;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeId getNodeId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeId(NodeId nodeId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeState getNodeState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeState(NodeState nodeState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHttpAddress()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHttpAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHttpAddress(String httpAddress)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRackName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRackName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRackName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRackName(String rackName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUsed",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getUsed()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUsed",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUsed(Resource used)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getCapability()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCapability",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCapability(Resource capability)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumContainers(int numContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHealthReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHealthReport()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHealthReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHealthReport(String healthReport)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLastHealthReportTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getLastHealthReportTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLastHealthReportTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLastHealthReportTime(long lastHealthReport)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabels(Set<String> nodeLabels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAggregatedContainersUtilization",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceUtilization getAggregatedContainersUtilization()\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAggregatedContainersUtilization",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAggregatedContainersUtilization(ResourceUtilization containersUtilization)\n{\r\n    throw new UnsupportedOperationException(\"subclass must implement this method\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeUtilization",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceUtilization getNodeUtilization()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeUtilization",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeUtilization(ResourceUtilization nodeUtilization)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDecommissioningTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Integer getDecommissioningTimeout()\n{\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDecommissioningTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDecommissioningTimeout(Integer decommissioningTimeout)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeUpdateType getNodeUpdateType()\n{\r\n    return NodeUpdateType.NODE_UNUSABLE;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeUpdateType(NodeUpdateType nodeUpdateType)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeAttributes(Set<NodeAttribute> nodeAttributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<NodeAttribute> getNodeAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()\n{\r\n    return containerId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getContainerType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerType getContainerType()\n{\r\n    return containerType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api",
  "methodName" : "getExitCode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getExitCode()\n{\r\n    return exitCode;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 16,
  "sourceCodeText" : "QueueStatistics newInstance(long submitted, long running, long pending, long completed, long killed, long failed, long activeUsers, long availableMemoryMB, long allocatedMemoryMB, long pendingMemoryMB, long reservedMemoryMB, long availableVCores, long allocatedVCores, long pendingVCores, long reservedVCores)\n{\r\n    QueueStatistics statistics = Records.newRecord(QueueStatistics.class);\r\n    statistics.setNumAppsSubmitted(submitted);\r\n    statistics.setNumAppsRunning(running);\r\n    statistics.setNumAppsPending(pending);\r\n    statistics.setNumAppsCompleted(completed);\r\n    statistics.setNumAppsKilled(killed);\r\n    statistics.setNumAppsFailed(failed);\r\n    statistics.setNumActiveUsers(activeUsers);\r\n    statistics.setAvailableMemoryMB(availableMemoryMB);\r\n    statistics.setAllocatedMemoryMB(allocatedMemoryMB);\r\n    statistics.setPendingMemoryMB(pendingMemoryMB);\r\n    statistics.setReservedMemoryMB(reservedMemoryMB);\r\n    statistics.setAvailableVCores(availableVCores);\r\n    statistics.setAllocatedVCores(allocatedVCores);\r\n    statistics.setPendingVCores(pendingVCores);\r\n    statistics.setReservedVCores(reservedVCores);\r\n    return statistics;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsSubmitted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsSubmitted()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsSubmitted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsSubmitted(long numAppsSubmitted)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsRunning",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsRunning()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsRunning",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsRunning(long numAppsRunning)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsPending",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsPending()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsPending",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsPending(long numAppsPending)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsCompleted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsCompleted()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsCompleted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsCompleted(long numAppsCompleted)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsKilled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsKilled()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsKilled",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsKilled(long numAppsKilled)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAppsFailed",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumAppsFailed()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAppsFailed",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAppsFailed(long numAppsFailed)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumActiveUsers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getNumActiveUsers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumActiveUsers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumActiveUsers(long numActiveUsers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAvailableMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAvailableMemoryMB()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAvailableMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAvailableMemoryMB(long availableMemoryMB)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocatedMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocatedMemoryMB()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocatedMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocatedMemoryMB(long allocatedMemoryMB)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPendingMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getPendingMemoryMB()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPendingMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPendingMemoryMB(long pendingMemoryMB)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservedMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getReservedMemoryMB()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservedMemoryMB",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservedMemoryMB(long reservedMemoryMB)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAvailableVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAvailableVCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAvailableVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAvailableVCores(long availableVCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocatedVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocatedVCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocatedVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocatedVCores(long allocatedVCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPendingVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getPendingVCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPendingVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPendingVCores(long pendingVCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPendingContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getPendingContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPendingContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPendingContainers(long pendingContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAllocatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getAllocatedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAllocatedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAllocatedContainers(long allocatedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getReservedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservedContainers(long reservedContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReservedVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getReservedVCores()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReservedVCores",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservedVCores(long reservedVCores)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "UpdateApplicationTimeoutsResponse newInstance()\n{\r\n    UpdateApplicationTimeoutsResponse response = Records.newRecord(UpdateApplicationTimeoutsResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationTimeoutType, String> getApplicationTimeouts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTimeouts(Map<ApplicationTimeoutType, String> applicationTimeouts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AddToClusterNodeLabelsResponse newInstance()\n{\r\n    return Records.newRecord(AddToClusterNodeLabelsResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setName(String rName)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDefaultUnit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDefaultUnit()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDefaultUnit",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDefaultUnit(String rUnits)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceTypes getResourceType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceType(ResourceTypes type)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ResourceTypeInfo newInstance(ResourceTypeInfo other)\n{\r\n    ResourceTypeInfo resourceType = Records.newRecord(ResourceTypeInfo.class);\r\n    copy(other, resourceType);\r\n    return resourceType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ResourceTypeInfo newInstance(String name, String units, ResourceTypes type)\n{\r\n    ResourceTypeInfo resourceType = Records.newRecord(ResourceTypeInfo.class);\r\n    resourceType.setName(name);\r\n    resourceType.setResourceType(type);\r\n    resourceType.setDefaultUnit(units);\r\n    return resourceType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceTypeInfo newInstance(String name, String units)\n{\r\n    return ResourceTypeInfo.newInstance(name, units, ResourceTypes.COUNTABLE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceTypeInfo newInstance(String name)\n{\r\n    return ResourceTypeInfo.newInstance(name, \"\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "copy",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void copy(ResourceTypeInfo src, ResourceTypeInfo dst)\n{\r\n    dst.setName(src.getName());\r\n    dst.setResourceType(src.getResourceType());\r\n    dst.setDefaultUnit(src.getDefaultUnit());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(this.getName());\r\n    if (!this.getDefaultUnit().isEmpty()) {\r\n        sb.append(\" (unit=\").append(this.getDefaultUnit()).append(\")\");\r\n    }\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof ResourceTypeInfo)) {\r\n        return false;\r\n    }\r\n    ResourceTypeInfo r = (ResourceTypeInfo) obj;\r\n    return this.getName().equals(r.getName()) && this.getResourceType().equals(r.getResourceType()) && this.getDefaultUnit().equals(r.getDefaultUnit());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 47;\r\n    int result = prime + getName().hashCode();\r\n    result = prime * result + getResourceType().hashCode();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "compareTo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int compareTo(ResourceTypeInfo other)\n{\r\n    int diff = this.getName().compareTo(other.getName());\r\n    if (diff == 0) {\r\n        diff = this.getDefaultUnit().compareTo(other.getDefaultUnit());\r\n        if (diff == 0) {\r\n            diff = this.getResourceType().compareTo(other.getResourceType());\r\n        }\r\n    }\r\n    return diff;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainerStatusesRequest newInstance(List<ContainerId> containerIds)\n{\r\n    GetContainerStatusesRequest request = Records.newRecord(GetContainerStatusesRequest.class);\r\n    request.setContainerIds(containerIds);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getContainerIds()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerIds",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerIds(List<ContainerId> containerIds)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\ams",
  "methodName" : "addToUpdateContainerErrors",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void addToUpdateContainerErrors(AllocateResponse allocateResponse, List<UpdateContainerError> updateContainerErrors)\n{\r\n    if (!updateContainerErrors.isEmpty()) {\r\n        if (allocateResponse.getUpdateErrors() != null && !allocateResponse.getUpdateErrors().isEmpty()) {\r\n            updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\r\n        }\r\n        allocateResponse.setUpdateErrors(updateContainerErrors);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\ams",
  "methodName" : "addToUpdatedContainers",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void addToUpdatedContainers(AllocateResponse allocateResponse, ContainerUpdateType updateType, List<Container> updatedContainers)\n{\r\n    if (updatedContainers != null && updatedContainers.size() > 0) {\r\n        ArrayList<UpdatedContainer> containersToSet = new ArrayList<>();\r\n        if (allocateResponse.getUpdatedContainers() != null && !allocateResponse.getUpdatedContainers().isEmpty()) {\r\n            containersToSet.addAll(allocateResponse.getUpdatedContainers());\r\n        }\r\n        for (Container updatedContainer : updatedContainers) {\r\n            containersToSet.add(UpdatedContainer.newInstance(updateType, updatedContainer));\r\n        }\r\n        allocateResponse.setUpdatedContainers(containersToSet);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\ams",
  "methodName" : "addToAllocatedContainers",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addToAllocatedContainers(AllocateResponse allocateResponse, List<Container> allocatedContainers)\n{\r\n    if (allocateResponse.getAllocatedContainers() != null && !allocateResponse.getAllocatedContainers().isEmpty()) {\r\n        allocatedContainers.addAll(allocateResponse.getAllocatedContainers());\r\n    }\r\n    allocateResponse.setAllocatedContainers(allocatedContainers);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\ams",
  "methodName" : "addToRejectedSchedulingRequests",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addToRejectedSchedulingRequests(AllocateResponse allocateResponse, List<RejectedSchedulingRequest> rejectedRequests)\n{\r\n    if (allocateResponse.getRejectedSchedulingRequests() != null && !allocateResponse.getRejectedSchedulingRequests().isEmpty()) {\r\n        rejectedRequests.addAll(allocateResponse.getRejectedSchedulingRequests());\r\n    }\r\n    allocateResponse.setRejectedSchedulingRequests(rejectedRequests);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationDeleteResponse newInstance()\n{\r\n    ReservationDeleteResponse response = Records.newRecord(ReservationDeleteResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNewReservationResponse newInstance(ReservationId reservationId)\n{\r\n    GetNewReservationResponse response = Records.newRecord(GetNewReservationResponse.class);\r\n    response.setReservationId(reservationId);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationId getReservationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReservationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReservationId(ReservationId reservationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "SerializedException newInstance(Throwable e)\n{\r\n    SerializedException exception = Records.newRecord(SerializedException.class);\r\n    exception.init(e);\r\n    return exception;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void init(String message, Throwable cause)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void init(String message)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void init(Throwable cause)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getMessage()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRemoteTrace",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRemoteTrace()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCause",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SerializedException getCause()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "deSerialize",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Throwable deSerialize()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "stringify",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void stringify(StringBuilder sb)\n{\r\n    sb.append(getMessage()).append(\"\\n\").append(getRemoteTrace());\r\n    final SerializedException cause = getCause();\r\n    if (cause != null) {\r\n        sb.append(\"Caused by: \");\r\n        cause.stringify(sb);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String toString()\n{\r\n    final StringBuilder sb = new StringBuilder(128);\r\n    stringify(sb);\r\n    return sb.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "KillApplicationResponse newInstance(boolean isKillCompleted)\n{\r\n    KillApplicationResponse response = Records.newRecord(KillApplicationResponse.class);\r\n    response.setIsKillCompleted(isKillCompleted);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getIsKillCompleted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getIsKillCompleted()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setIsKillCompleted",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIsKillCompleted(boolean isKillCompleted)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshSuperUserGroupsConfigurationRequest newInstance()\n{\r\n    RefreshSuperUserGroupsConfigurationRequest request = Records.newRecord(RefreshSuperUserGroupsConfigurationRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainersResponse newInstance(List<ContainerReport> containers)\n{\r\n    GetContainersResponse response = Records.newRecord(GetContainersResponse.class);\r\n    response.setContainerList(containers);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerReport> getContainerList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerList(List<ContainerReport> containers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshServiceAclsRequest newInstance()\n{\r\n    RefreshServiceAclsRequest request = Records.newRecord(RefreshServiceAclsRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNodesToLabelsResponse newInstance(Map<NodeId, Set<String>> map)\n{\r\n    GetNodesToLabelsResponse response = Records.newRecord(GetNodesToLabelsResponse.class);\r\n    response.setNodeToLabels(map);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeToLabels(Map<NodeId, Set<String>> map)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<NodeId, Set<String>> getNodeToLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationReport newInstance(ApplicationId applicationId, ApplicationAttemptId applicationAttemptId, String user, String queue, String name, String host, int rpcPort, Token clientToAMToken, YarnApplicationState state, String diagnostics, String url, long startTime, long launchTime, long finishTime, FinalApplicationStatus finalStatus, ApplicationResourceUsageReport appResources, String origTrackingUrl, float progress, String applicationType, Token amRmToken)\n{\r\n    return newInstance(applicationId, applicationAttemptId, user, queue, name, host, rpcPort, clientToAMToken, state, diagnostics, url, startTime, startTime, launchTime, finishTime, finalStatus, appResources, origTrackingUrl, progress, applicationType, amRmToken);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 22,
  "sourceCodeText" : "ApplicationReport newInstance(ApplicationId applicationId, ApplicationAttemptId applicationAttemptId, String user, String queue, String name, String host, int rpcPort, Token clientToAMToken, YarnApplicationState state, String diagnostics, String url, long startTime, long submitTime, long launchTime, long finishTime, FinalApplicationStatus finalStatus, ApplicationResourceUsageReport appResources, String origTrackingUrl, float progress, String applicationType, Token amRmToken)\n{\r\n    ApplicationReport report = Records.newRecord(ApplicationReport.class);\r\n    report.setApplicationId(applicationId);\r\n    report.setCurrentApplicationAttemptId(applicationAttemptId);\r\n    report.setUser(user);\r\n    report.setQueue(queue);\r\n    report.setName(name);\r\n    report.setHost(host);\r\n    report.setRpcPort(rpcPort);\r\n    report.setClientToAMToken(clientToAMToken);\r\n    report.setYarnApplicationState(state);\r\n    report.setDiagnostics(diagnostics);\r\n    report.setTrackingUrl(url);\r\n    report.setStartTime(startTime);\r\n    report.setSubmitTime(submitTime);\r\n    report.setLaunchTime(launchTime);\r\n    report.setFinishTime(finishTime);\r\n    report.setFinalApplicationStatus(finalStatus);\r\n    report.setApplicationResourceUsageReport(appResources);\r\n    report.setOriginalTrackingUrl(origTrackingUrl);\r\n    report.setProgress(progress);\r\n    report.setApplicationType(applicationType);\r\n    report.setAMRMToken(amRmToken);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ApplicationReport newInstance(ApplicationId applicationId, ApplicationAttemptId applicationAttemptId, String user, String queue, String name, String host, int rpcPort, Token clientToAMToken, YarnApplicationState state, String diagnostics, String url, long startTime, long finishTime, FinalApplicationStatus finalStatus, ApplicationResourceUsageReport appResources, String origTrackingUrl, float progress, String applicationType, Token amRmToken, Set<String> tags, boolean unmanagedApplication, Priority priority, String appNodeLabelExpression, String amNodeLabelExpression)\n{\r\n    ApplicationReport report = newInstance(applicationId, applicationAttemptId, user, queue, name, host, rpcPort, clientToAMToken, state, diagnostics, url, startTime, 0, 0, finishTime, finalStatus, appResources, origTrackingUrl, progress, applicationType, amRmToken);\r\n    report.setApplicationTags(tags);\r\n    report.setUnmanagedApp(unmanagedApplication);\r\n    report.setPriority(priority);\r\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\r\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationReport newInstance(ApplicationId applicationId, ApplicationAttemptId applicationAttemptId, String user, String queue, String name, String host, int rpcPort, Token clientToAMToken, YarnApplicationState state, String diagnostics, String url, long startTime, long launchTime, long finishTime, FinalApplicationStatus finalStatus, ApplicationResourceUsageReport appResources, String origTrackingUrl, float progress, String applicationType, Token amRmToken, Set<String> tags, boolean unmanagedApplication, Priority priority, String appNodeLabelExpression, String amNodeLabelExpression)\n{\r\n    return newInstance(applicationId, applicationAttemptId, user, queue, name, host, rpcPort, clientToAMToken, state, diagnostics, url, startTime, startTime, launchTime, finishTime, finalStatus, appResources, origTrackingUrl, progress, applicationType, amRmToken, tags, unmanagedApplication, priority, appNodeLabelExpression, amNodeLabelExpression);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "ApplicationReport newInstance(ApplicationId applicationId, ApplicationAttemptId applicationAttemptId, String user, String queue, String name, String host, int rpcPort, Token clientToAMToken, YarnApplicationState state, String diagnostics, String url, long startTime, long submitTime, long launchTime, long finishTime, FinalApplicationStatus finalStatus, ApplicationResourceUsageReport appResources, String origTrackingUrl, float progress, String applicationType, Token amRmToken, Set<String> tags, boolean unmanagedApplication, Priority priority, String appNodeLabelExpression, String amNodeLabelExpression)\n{\r\n    ApplicationReport report = newInstance(applicationId, applicationAttemptId, user, queue, name, host, rpcPort, clientToAMToken, state, diagnostics, url, startTime, submitTime, launchTime, finishTime, finalStatus, appResources, origTrackingUrl, progress, applicationType, amRmToken);\r\n    report.setApplicationTags(tags);\r\n    report.setUnmanagedApp(unmanagedApplication);\r\n    report.setPriority(priority);\r\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\r\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\r\n    return report;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationId getApplicationId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationId(ApplicationId applicationId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCurrentApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationAttemptId getCurrentApplicationAttemptId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCurrentApplicationAttemptId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCurrentApplicationAttemptId(ApplicationAttemptId applicationAttemptId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getUser()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUser",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUser(String user)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getQueue()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setQueue(String queue)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setName(String name)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getHost()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setHost",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHost(String host)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getRpcPort()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRpcPort",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRpcPort(int rpcPort)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getClientToAMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getClientToAMToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setClientToAMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setClientToAMToken(Token clientToAMToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getYarnApplicationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "YarnApplicationState getYarnApplicationState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setYarnApplicationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setYarnApplicationState(YarnApplicationState state)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTrackingUrl(String url)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getOriginalTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getOriginalTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setOriginalTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOriginalTrackingUrl(String url)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getStartTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(long startTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getSubmitTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getSubmitTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setSubmitTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSubmitTime(long submitTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLaunchTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLaunchTime(long setLaunchTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLaunchTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getLaunchTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getFinishTime()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFinishTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinishTime(long finishTime)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getFinalApplicationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "FinalApplicationStatus getFinalApplicationStatus()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setFinalApplicationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFinalApplicationStatus(FinalApplicationStatus finishState)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationResourceUsageReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationResourceUsageReport getApplicationResourceUsageReport()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationResourceUsageReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationResourceUsageReport(ApplicationResourceUsageReport appResources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getProgress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getProgress()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setProgress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setProgress(float progress)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getApplicationType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationType(String applicationType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getApplicationTags()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationTags",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTags(Set<String> tags)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAMRMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAMRMToken(Token amRmToken)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAMRMToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Token getAMRMToken()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLogAggregationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LogAggregationStatus getLogAggregationStatus()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLogAggregationStatus",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLogAggregationStatus(LogAggregationStatus logAggregationStatus)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "isUnmanagedApp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean isUnmanagedApp()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUnmanagedApp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUnmanagedApp(boolean unmanagedApplication)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Priority getPriority()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPriority(Priority priority)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAppNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAppNodeLabelExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAppNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAppNodeLabelExpression(String appNodeLabelExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAmNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getAmNodeLabelExpression()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAmNodeLabelExpression",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAmNodeLabelExpression(String amNodeLabelExpression)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ApplicationTimeoutType, ApplicationTimeout> getApplicationTimeouts()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setApplicationTimeouts(Map<ApplicationTimeoutType, ApplicationTimeout> timeouts)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRMClusterId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRMClusterId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRMClusterId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRMClusterId(String rmClusterId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "PreemptionResourceRequest newInstance(ResourceRequest req)\n{\r\n    PreemptionResourceRequest request = Records.newRecord(PreemptionResourceRequest.class);\r\n    request.setResourceRequest(req);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceRequest getResourceRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceRequest(ResourceRequest req)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "UpdatedContainer newInstance(ContainerUpdateType updateType, Container container)\n{\r\n    UpdatedContainer updatedContainer = Records.newRecord(UpdatedContainer.class);\r\n    updatedContainer.setUpdateType(updateType);\r\n    updatedContainer.setContainer(container);\r\n    return updatedContainer;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerUpdateType getUpdateType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setUpdateType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdateType(ContainerUpdateType updateType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Container getContainer()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainer(Container container)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 2153;\r\n    int result = 2459;\r\n    ContainerUpdateType updateType = getUpdateType();\r\n    Container container = getContainer();\r\n    result = prime * result + ((updateType == null) ? 0 : updateType.hashCode());\r\n    result = prime * result + ((container == null) ? 0 : container.hashCode());\r\n    return result;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    UpdatedContainer other = (UpdatedContainer) obj;\r\n    ContainerUpdateType updateType = getUpdateType();\r\n    if (updateType == null) {\r\n        if (other.getUpdateType() != null) {\r\n            return false;\r\n        }\r\n    } else if (updateType != other.getUpdateType()) {\r\n        return false;\r\n    }\r\n    Container container = getContainer();\r\n    if (container == null) {\r\n        if (other.getContainer() != null) {\r\n            return false;\r\n        }\r\n    } else if (!container.equals(other.getContainer())) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "throwBadConfigurationException",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void throwBadConfigurationException(String msg)\n{\r\n    throw new YarnRuntimeException(BAD_CONFIG_MESSAGE_PREFIX + msg);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isFederationEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isFederationEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.FEDERATION_ENABLED, YarnConfiguration.DEFAULT_FEDERATION_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isFederationFailoverEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isFederationFailoverEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.FEDERATION_FAILOVER_ENABLED, YarnConfiguration.DEFAULT_FEDERATION_FAILOVER_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isHAEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isHAEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.RM_HA_ENABLED, YarnConfiguration.DEFAULT_RM_HA_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isAutomaticFailoverEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isAutomaticFailoverEnabled(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.AUTO_FAILOVER_ENABLED, YarnConfiguration.DEFAULT_AUTO_FAILOVER_ENABLED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isAutomaticFailoverEnabledAndEmbedded",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean isAutomaticFailoverEnabledAndEmbedded(Configuration conf)\n{\r\n    return isAutomaticFailoverEnabled(conf) && isAutomaticFailoverEmbedded(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "isAutomaticFailoverEmbedded",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean isAutomaticFailoverEmbedded(Configuration conf)\n{\r\n    return conf.getBoolean(YarnConfiguration.AUTO_FAILOVER_EMBEDDED, YarnConfiguration.DEFAULT_AUTO_FAILOVER_EMBEDDED);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyAndSetConfiguration",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void verifyAndSetConfiguration(Configuration conf) throws YarnRuntimeException\n{\r\n    verifyAndSetRMHAIdsList(conf);\r\n    verifyAndSetCurrentRMHAId(conf);\r\n    verifyLeaderElection(conf);\r\n    verifyAndSetAllServiceAddresses(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyAndSetRMHAIdsList",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void verifyAndSetRMHAIdsList(Configuration conf)\n{\r\n    Collection<String> ids = conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\r\n    if (ids.size() < 2) {\r\n        throwBadConfigurationException(getInvalidValueMessage(YarnConfiguration.RM_HA_IDS, conf.get(YarnConfiguration.RM_HA_IDS) + \"\\nHA mode requires atleast two RMs\"));\r\n    }\r\n    StringBuilder setValue = new StringBuilder();\r\n    for (String id : ids) {\r\n        for (String prefix : YarnConfiguration.getServiceAddressConfKeys(conf)) {\r\n            checkAndSetRMRPCAddress(prefix, id, conf);\r\n        }\r\n        setValue.append(id).append(\",\");\r\n    }\r\n    conf.set(YarnConfiguration.RM_HA_IDS, setValue.substring(0, setValue.length() - 1));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyAndSetCurrentRMHAId",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "void verifyAndSetCurrentRMHAId(Configuration conf)\n{\r\n    String rmId = getRMHAId(conf);\r\n    if (rmId == null) {\r\n        StringBuilder msg = new StringBuilder();\r\n        msg.append(\"Can not find valid RM_HA_ID. None of \");\r\n        for (String id : conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS)) {\r\n            msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id)).append(\" \");\r\n        }\r\n        msg.append(\" are matching\" + \" the local address OR \" + YarnConfiguration.RM_HA_ID + \" is not\" + \" specified in HA Configuration\");\r\n        throwBadConfigurationException(msg.toString());\r\n    } else {\r\n        Collection<String> ids = getRMHAIds(conf);\r\n        if (!ids.contains(rmId)) {\r\n            throwBadConfigurationException(getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\r\n        }\r\n    }\r\n    conf.set(YarnConfiguration.RM_HA_ID, rmId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyLeaderElection",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void verifyLeaderElection(Configuration conf)\n{\r\n    if (isAutomaticFailoverEnabled(conf) && !conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR, YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED) && !isAutomaticFailoverEmbedded(conf)) {\r\n        throwBadConfigurationException(NO_LEADER_ELECTION_MESSAGE);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyAndSetConfValue",
  "errType" : [ "YarnRuntimeException", "IllegalArgumentException" ],
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void verifyAndSetConfValue(String prefix, Configuration conf)\n{\r\n    String confKey = null;\r\n    String confValue = null;\r\n    try {\r\n        confKey = getConfKeyForRMInstance(prefix, conf);\r\n        confValue = getConfValueForRMInstance(prefix, conf);\r\n        conf.set(prefix, confValue);\r\n    } catch (YarnRuntimeException yre) {\r\n        throw yre;\r\n    } catch (IllegalArgumentException iae) {\r\n        String errmsg;\r\n        if (confKey == null) {\r\n            errmsg = getInvalidValueMessage(YarnConfiguration.RM_HA_ID, getRMHAId(conf));\r\n        } else {\r\n            errmsg = getNeedToSetValueMessage(confKey);\r\n        }\r\n        throwBadConfigurationException(errmsg);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "verifyAndSetAllServiceAddresses",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void verifyAndSetAllServiceAddresses(Configuration conf)\n{\r\n    for (String confKey : YarnConfiguration.getServiceAddressConfKeys(conf)) {\r\n        verifyAndSetConfValue(confKey, conf);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getRMHAIds",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Collection<String> getRMHAIds(Configuration conf)\n{\r\n    return conf.getStringCollection(YarnConfiguration.RM_HA_IDS);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getRMHAId",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "String getRMHAId(Configuration conf)\n{\r\n    int found = 0;\r\n    String currentRMId = conf.getTrimmed(YarnConfiguration.RM_HA_ID);\r\n    if (currentRMId == null) {\r\n        for (String rmId : getRMHAIds(conf)) {\r\n            String key = addSuffix(YarnConfiguration.RM_ADDRESS, rmId);\r\n            String addr = conf.get(key);\r\n            if (addr == null) {\r\n                continue;\r\n            }\r\n            InetSocketAddress s;\r\n            try {\r\n                s = NetUtils.createSocketAddr(addr);\r\n            } catch (Exception e) {\r\n                LOG.warn(\"Exception in creating socket address \" + addr, e);\r\n                continue;\r\n            }\r\n            if (!s.isUnresolved() && NetUtils.isLocalAddress(s.getAddress())) {\r\n                currentRMId = rmId.trim();\r\n                found++;\r\n            }\r\n        }\r\n    }\r\n    if (found > 1) {\r\n        String msg = \"The HA Configuration has multiple addresses that match \" + \"local node's address.\";\r\n        throw new HadoopIllegalArgumentException(msg);\r\n    }\r\n    return currentRMId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getNeedToSetValueMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getNeedToSetValueMessage(String confKey)\n{\r\n    return confKey + \" needs to be set in an HA configuration.\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getInvalidValueMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getInvalidValueMessage(String confKey, String invalidValue)\n{\r\n    return \"Invalid value of \" + confKey + \". \" + \"Current value is \" + invalidValue;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getRMHAIdNeedToBeIncludedMessage",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRMHAIdNeedToBeIncludedMessage(String ids, String rmId)\n{\r\n    return YarnConfiguration.RM_HA_IDS + \"(\" + ids + \") need to contain \" + YarnConfiguration.RM_HA_ID + \"(\" + rmId + \") in an HA configuration.\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getRMHAIdsWarningMessage",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getRMHAIdsWarningMessage(String ids)\n{\r\n    return \"Resource Manager HA is enabled, but \" + YarnConfiguration.RM_HA_IDS + \" has only one id(\" + ids.toString() + \")\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getConfKeyForRMInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String getConfKeyForRMInstance(String prefix, Configuration conf)\n{\r\n    if (!YarnConfiguration.getServiceAddressConfKeys(conf).contains(prefix)) {\r\n        return prefix;\r\n    } else {\r\n        String RMId = getRMHAId(conf);\r\n        checkAndSetRMRPCAddress(prefix, RMId, conf);\r\n        return addSuffix(prefix, RMId);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getConfValueForRMInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String getConfValueForRMInstance(String prefix, Configuration conf)\n{\r\n    String confKey = getConfKeyForRMInstance(prefix, conf);\r\n    String retVal = conf.getTrimmed(confKey);\r\n    if (LOG.isTraceEnabled()) {\r\n        LOG.trace(\"getConfValueForRMInstance: prefix = {};\" + \" confKey being looked up = {};\" + \" value being set to = {}\", prefix, confKey, retVal);\r\n    }\r\n    return retVal;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "getConfValueForRMInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getConfValueForRMInstance(String prefix, String defaultValue, Configuration conf)\n{\r\n    String value = getConfValueForRMInstance(prefix, conf);\r\n    return (value == null) ? defaultValue : value;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "addSuffix",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String addSuffix(String key, String suffix)\n{\r\n    if (suffix == null || suffix.isEmpty()) {\r\n        return key;\r\n    }\r\n    if (suffix.startsWith(\".\")) {\r\n        throw new IllegalArgumentException(\"suffix '\" + suffix + \"' should not \" + \"already have '.' prepended.\");\r\n    }\r\n    return key + \".\" + suffix;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\conf",
  "methodName" : "checkAndSetRMRPCAddress",
  "errType" : [ "IllegalArgumentException" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "void checkAndSetRMRPCAddress(String prefix, String RMId, Configuration conf)\n{\r\n    String rpcAddressConfKey = null;\r\n    try {\r\n        rpcAddressConfKey = addSuffix(prefix, RMId);\r\n        if (conf.getTrimmed(rpcAddressConfKey) == null) {\r\n            String hostNameConfKey = addSuffix(YarnConfiguration.RM_HOSTNAME, RMId);\r\n            String confVal = conf.getTrimmed(hostNameConfKey);\r\n            if (confVal == null) {\r\n                throwBadConfigurationException(getNeedToSetValueMessage(hostNameConfKey + \" or \" + addSuffix(prefix, RMId)));\r\n            } else {\r\n                conf.set(addSuffix(prefix, RMId), confVal + \":\" + YarnConfiguration.getRMDefaultPortNumber(prefix, conf));\r\n            }\r\n        }\r\n    } catch (IllegalArgumentException iae) {\r\n        String errmsg = iae.getMessage();\r\n        if (rpcAddressConfKey == null) {\r\n            errmsg = getInvalidValueMessage(YarnConfiguration.RM_HA_ID, RMId);\r\n        }\r\n        throwBadConfigurationException(errmsg);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceUtilization newInstance(int pmem, int vmem, float cpu)\n{\r\n    return newInstance(pmem, vmem, cpu, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "ResourceUtilization newInstance(int pmem, int vmem, float cpu, Map<String, Float> customResources)\n{\r\n    ResourceUtilization utilization = Records.newRecord(ResourceUtilization.class);\r\n    utilization.setPhysicalMemory(pmem);\r\n    utilization.setVirtualMemory(vmem);\r\n    utilization.setCPU(cpu);\r\n    utilization.setCustomResources(customResources);\r\n    return utilization;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceUtilization newInstance(ResourceUtilization resourceUtil)\n{\r\n    return newInstance(resourceUtil.getPhysicalMemory(), resourceUtil.getVirtualMemory(), resourceUtil.getCPU(), resourceUtil.getCustomResources());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getVirtualMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getVirtualMemory()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setVirtualMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setVirtualMemory(int vmem)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getPhysicalMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getPhysicalMemory()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setPhysicalMemory",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setPhysicalMemory(int pmem)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCPU",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getCPU()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCPU",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCPU(float cpu)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCustomResource",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "float getCustomResource(String resourceName)\n{\r\n    if (customResources != null && resourceName != null) {\r\n        return customResources.get(resourceName);\r\n    }\r\n    return 0f;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getCustomResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, Float> getCustomResources()\n{\r\n    return customResources;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCustomResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setCustomResources(Map<String, Float> customResources)\n{\r\n    if (customResources != null) {\r\n        this.customResources = customResources;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setCustomResource",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setCustomResource(String resourceName, float utilization)\n{\r\n    if (resourceName != null && !resourceName.isEmpty()) {\r\n        customResources.put(resourceName, utilization);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 263167;\r\n    int result = 3571;\r\n    result = prime * result + getVirtualMemory();\r\n    result = prime * result + getPhysicalMemory();\r\n    result = 31 * result + Float.valueOf(getCPU()).hashCode();\r\n    if (customResources != null && !customResources.isEmpty()) {\r\n        for (Map.Entry<String, Float> entry : customResources.entrySet()) {\r\n            result = 31 * result + customResources.get(entry.getKey()).hashCode();\r\n        }\r\n    }\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof ResourceUtilization)) {\r\n        return false;\r\n    }\r\n    ResourceUtilization other = (ResourceUtilization) obj;\r\n    if (getVirtualMemory() != other.getVirtualMemory() || getPhysicalMemory() != other.getPhysicalMemory() || getCPU() != other.getCPU() || !customResources.equals(other.customResources)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "String toString()\n{\r\n    StringBuilder utilizationString = new StringBuilder();\r\n    utilizationString.append(\"<pmem:\" + getPhysicalMemory() + \", vmem:\" + getVirtualMemory() + \", vCores:\" + getCPU());\r\n    if (getCustomResources() != null && !getCustomResources().isEmpty()) {\r\n        for (Map.Entry<String, Float> entry : getCustomResources().entrySet()) {\r\n            utilizationString.append(\", \" + entry.getKey() + \":\" + entry.getValue());\r\n        }\r\n    }\r\n    utilizationString.append(\">\");\r\n    return utilizationString.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "addTo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addTo(int pmem, int vmem, float cpu)\n{\r\n    addTo(pmem, vmem, cpu, null, 0f);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "addTo",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void addTo(int pmem, int vmem, float cpu, String resourceName, float utilization)\n{\r\n    this.setPhysicalMemory(this.getPhysicalMemory() + pmem);\r\n    this.setVirtualMemory(this.getVirtualMemory() + vmem);\r\n    this.setCPU(this.getCPU() + cpu);\r\n    if (resourceName != null) {\r\n        this.setCustomResource(resourceName, getCustomResource(resourceName) + utilization);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "subtractFrom",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void subtractFrom(int pmem, int vmem, float cpu)\n{\r\n    subtractFrom(pmem, vmem, cpu, null, 0f);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "subtractFrom",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void subtractFrom(int pmem, int vmem, float cpu, String resourceName, float utilization)\n{\r\n    this.setPhysicalMemory(this.getPhysicalMemory() - pmem);\r\n    this.setVirtualMemory(this.getVirtualMemory() - vmem);\r\n    this.setCPU(this.getCPU() - cpu);\r\n    if (resourceName != null) {\r\n        this.setCustomResource(resourceName, getCustomResource(resourceName) - utilization);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "NodesToAttributesMappingRequest newInstance(AttributeMappingOperationType operation, List<NodeToAttributes> nodesToAttributes, boolean failOnUnknownNodes)\n{\r\n    NodesToAttributesMappingRequest request = Records.newRecord(NodesToAttributesMappingRequest.class);\r\n    request.setNodesToAttributes(nodesToAttributes);\r\n    request.setFailOnUnknownNodes(failOnUnknownNodes);\r\n    request.setOperation(operation);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodesToAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodesToAttributes(List<NodeToAttributes> nodesToAttributes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodesToAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeToAttributes> getNodesToAttributes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setFailOnUnknownNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailOnUnknownNodes(boolean failOnUnknownNodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getFailOnUnknownNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getFailOnUnknownNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setOperation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOperation(AttributeMappingOperationType operation)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getOperation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AttributeMappingOperationType getOperation()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshAdminAclsRequest newInstance()\n{\r\n    RefreshAdminAclsRequest request = Records.newRecord(RefreshAdminAclsRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "StopContainersResponse newInstance(List<ContainerId> succeededRequests, Map<ContainerId, SerializedException> failedRequests)\n{\r\n    StopContainersResponse response = Records.newRecord(StopContainersResponse.class);\r\n    response.setFailedRequests(failedRequests);\r\n    response.setSuccessfullyStoppedContainers(succeededRequests);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSuccessfullyStoppedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getSuccessfullyStoppedContainers()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSuccessfullyStoppedContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSuccessfullyStoppedContainers(List<ContainerId> succeededRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<ContainerId, SerializedException> getFailedRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setFailedRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailedRequests(Map<ContainerId, SerializedException> failedRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "IncreaseContainersResourceRequest newInstance(List<Token> containersToIncrease)\n{\r\n    IncreaseContainersResourceRequest request = Records.newRecord(IncreaseContainersResourceRequest.class);\r\n    request.setContainersToIncrease(containersToIncrease);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainersToIncrease",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<Token> getContainersToIncrease()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainersToIncrease",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainersToIncrease(List<Token> containersToIncrease)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeAttributeInfo newInstance(NodeAttribute nodeAttribute)\n{\r\n    return newInstance(nodeAttribute.getAttributeKey(), nodeAttribute.getAttributeType());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeAttributeInfo newInstance(NodeAttributeKey nodeAttributeKey, NodeAttributeType attributeType)\n{\r\n    NodeAttributeInfo nodeAttribute = Records.newRecord(NodeAttributeInfo.class);\r\n    nodeAttribute.setAttributeKey(nodeAttributeKey);\r\n    nodeAttribute.setAttributeType(attributeType);\r\n    return nodeAttribute;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeAttributeKey getAttributeKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeKey(NodeAttributeKey attributeKey)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getAttributeType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeAttributeType getAttributeType()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setAttributeType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAttributeType(NodeAttributeType attributeType)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "LogAggregationContext newInstance(String includePattern, String excludePattern)\n{\r\n    LogAggregationContext context = Records.newRecord(LogAggregationContext.class);\r\n    context.setIncludePattern(includePattern);\r\n    context.setExcludePattern(excludePattern);\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "LogAggregationContext newInstance(String includePattern, String excludePattern, String rolledLogsIncludePattern, String rolledLogsExcludePattern)\n{\r\n    LogAggregationContext context = Records.newRecord(LogAggregationContext.class);\r\n    context.setIncludePattern(includePattern);\r\n    context.setExcludePattern(excludePattern);\r\n    context.setRolledLogsIncludePattern(rolledLogsIncludePattern);\r\n    context.setRolledLogsExcludePattern(rolledLogsExcludePattern);\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "LogAggregationContext newInstance(String includePattern, String excludePattern, String rolledLogsIncludePattern, String rolledLogsExcludePattern, String policyClassName, String policyParameters)\n{\r\n    LogAggregationContext context = Records.newRecord(LogAggregationContext.class);\r\n    context.setIncludePattern(includePattern);\r\n    context.setExcludePattern(excludePattern);\r\n    context.setRolledLogsIncludePattern(rolledLogsIncludePattern);\r\n    context.setRolledLogsExcludePattern(rolledLogsExcludePattern);\r\n    context.setLogAggregationPolicyClassName(policyClassName);\r\n    context.setLogAggregationPolicyParameters(policyParameters);\r\n    return context;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getIncludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getIncludePattern()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setIncludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setIncludePattern(String includePattern)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getExcludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getExcludePattern()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setExcludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExcludePattern(String excludePattern)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRolledLogsIncludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRolledLogsIncludePattern()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRolledLogsIncludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRolledLogsIncludePattern(String rolledLogsIncludePattern)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRolledLogsExcludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getRolledLogsExcludePattern()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRolledLogsExcludePattern",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRolledLogsExcludePattern(String rolledLogsExcludePattern)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLogAggregationPolicyClassName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getLogAggregationPolicyClassName()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLogAggregationPolicyClassName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLogAggregationPolicyClassName(String className)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLogAggregationPolicyParameters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getLogAggregationPolicyParameters()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLogAggregationPolicyParameters",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLogAggregationPolicyParameters(String parameters)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainerReportRequest newInstance(ContainerId containerId)\n{\r\n    GetContainerReportRequest request = Records.newRecord(GetContainerReportRequest.class);\r\n    request.setContainerId(containerId);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerId getContainerId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setContainerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContainerId(ContainerId containerId)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshQueuesResponse newInstance()\n{\r\n    RefreshQueuesResponse response = Records.newRecord(RefreshQueuesResponse.class);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetQueueUserAclsInfoRequest newInstance()\n{\r\n    GetQueueUserAclsInfoRequest request = Records.newRecord(GetQueueUserAclsInfoRequest.class);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceSizing newInstance(Resource resources)\n{\r\n    return ResourceSizing.newInstance(1, resources);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ResourceSizing newInstance(int numAllocations, Resource resources)\n{\r\n    ResourceSizing resourceSizing = Records.newRecord(ResourceSizing.class);\r\n    resourceSizing.setNumAllocations(numAllocations);\r\n    resourceSizing.setResources(resources);\r\n    return resourceSizing;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getNumAllocations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getNumAllocations()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setNumAllocations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNumAllocations(int numAllocations)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResources()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResources",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResources(Resource resources)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    int result = getResources().hashCode();\r\n    result = 31 * result + getNumAllocations();\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null || getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    ResourceSizing that = (ResourceSizing) obj;\r\n    if (getNumAllocations() != that.getNumAllocations()) {\r\n        return false;\r\n    }\r\n    if (!getResources().equals(that.getResources())) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CommitResponse newInstance()\n{\r\n    return Records.newRecord(CommitResponse.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getErrors",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelinePutError> getErrors()\n{\r\n    return errors;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addError",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addError(TimelinePutError error)\n{\r\n    errors.add(error);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addErrors",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addErrors(List<TimelinePutError> errors)\n{\r\n    this.errors.addAll(errors);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setErrors",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setErrors(List<TimelinePutError> errors)\n{\r\n    this.errors.clear();\r\n    this.errors.addAll(errors);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReplaceLabelsOnNodeRequest newInstance(Map<NodeId, Set<String>> map)\n{\r\n    ReplaceLabelsOnNodeRequest request = Records.newRecord(ReplaceLabelsOnNodeRequest.class);\r\n    request.setNodeToLabels(map);\r\n    return request;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeToLabels(Map<NodeId, Set<String>> map)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<NodeId, Set<String>> getNodeToLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "setFailOnUnknownNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setFailOnUnknownNodes(boolean failOnUnknownNodes)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\api\\protocolrecords",
  "methodName" : "getFailOnUnknownNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean getFailOnUnknownNodes()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "LocalizationStatus newInstance(String resourceKey, LocalizationState localizationState)\n{\r\n    return newInstance(resourceKey, localizationState, null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "LocalizationStatus newInstance(String resourceKey, LocalizationState localizationState, String diagnostics)\n{\r\n    LocalizationStatus status = Records.newRecord(LocalizationStatus.class);\r\n    status.setResourceKey(resourceKey);\r\n    status.setLocalizationState(localizationState);\r\n    status.setDiagnostics(diagnostics);\r\n    return status;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getResourceKey()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResourceKey",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceKey(String resourceKey)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getLocalizationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LocalizationState getLocalizationState()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setLocalizationState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setLocalizationState(LocalizationState state)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getDiagnostics()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setDiagnostics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDiagnostics(String diagnostics)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getType()\n{\r\n    return type;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setType(String type)\n{\r\n    this.type = type;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getContent",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Object getContent()\n{\r\n    return content;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setContent",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setContent(Object content)\n{\r\n    this.content = content;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ResourceOption newInstance(Resource resource, int overCommitTimeout)\n{\r\n    ResourceOption resourceOption = Records.newRecord(ResourceOption.class);\r\n    resourceOption.setResource(resource);\r\n    resourceOption.setOverCommitTimeout(overCommitTimeout);\r\n    resourceOption.build();\r\n    return resourceOption;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Resource getResource()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setResource",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResource(Resource resource)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getOverCommitTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getOverCommitTimeout()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setOverCommitTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setOverCommitTimeout(int overCommitTimeout)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "build",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void build()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String toString()\n{\r\n    return \"Resource:\" + getResource().toString() + \", overCommitTimeout:\" + getOverCommitTimeout();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateRequest newInstance(int responseID, float appProgress, List<ResourceRequest> resourceAsk, List<ContainerId> containersToBeReleased, ResourceBlacklistRequest resourceBlacklistRequest)\n{\r\n    return AllocateRequest.newBuilder().responseId(responseID).progress(appProgress).askList(resourceAsk).releaseList(containersToBeReleased).resourceBlacklistRequest(resourceBlacklistRequest).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateRequest newInstance(int responseID, float appProgress, List<ResourceRequest> resourceAsk, List<ContainerId> containersToBeReleased, ResourceBlacklistRequest resourceBlacklistRequest, String trackingUrl)\n{\r\n    return AllocateRequest.newBuilder().responseId(responseID).progress(appProgress).askList(resourceAsk).releaseList(containersToBeReleased).resourceBlacklistRequest(resourceBlacklistRequest).trackingUrl(trackingUrl).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AllocateRequest newInstance(int responseID, float appProgress, List<ResourceRequest> resourceAsk, List<ContainerId> containersToBeReleased, List<UpdateContainerRequest> updateRequests, ResourceBlacklistRequest resourceBlacklistRequest)\n{\r\n    return AllocateRequest.newBuilder().responseId(responseID).progress(appProgress).askList(resourceAsk).releaseList(containersToBeReleased).resourceBlacklistRequest(resourceBlacklistRequest).updateRequests(updateRequests).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResponseId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getResponseId()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResponseId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResponseId(int id)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getProgress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "float getProgress()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setProgress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setProgress(float progress)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getAskList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ResourceRequest> getAskList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setAskList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setAskList(List<ResourceRequest> resourceRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getReleaseList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<ContainerId> getReleaseList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setReleaseList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReleaseList(List<ContainerId> releaseContainers)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getResourceBlacklistRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ResourceBlacklistRequest getResourceBlacklistRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setResourceBlacklistRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResourceBlacklistRequest(ResourceBlacklistRequest resourceBlacklistRequest)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getUpdateRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<UpdateContainerRequest> getUpdateRequests()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setUpdateRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setUpdateRequests(List<UpdateContainerRequest> updateRequests)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getSchedulingRequests",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "List<SchedulingRequest> getSchedulingRequests()\n{\r\n    return Collections.emptyList();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setSchedulingRequests",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSchedulingRequests(List<SchedulingRequest> schedulingRequests)\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTrackingUrl()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setTrackingUrl",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTrackingUrl(String trackingUrl)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newBuilder",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AllocateRequestBuilder newBuilder()\n{\r\n    return new AllocateRequestBuilder();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getParent",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Identifier getParent()\n{\r\n    Object obj = getInfo().get(PARENT_INFO_KEY);\r\n    if (obj != null) {\r\n        if (obj instanceof Identifier) {\r\n            return (Identifier) obj;\r\n        } else {\r\n            throw new YarnRuntimeException(\"Parent info is invalid identifier object\");\r\n        }\r\n    }\r\n    return null;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setParent",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setParent(Identifier parent)\n{\r\n    validateParent(parent.getType());\r\n    addInfo(PARENT_INFO_KEY, parent);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setParent",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setParent(String type, String id)\n{\r\n    setParent(new Identifier(type, id));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "getChildren",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Set<Identifier> getChildren()\n{\r\n    Object identifiers = getInfo().get(CHILDREN_INFO_KEY);\r\n    if (identifiers == null) {\r\n        return new HashSet<>();\r\n    }\r\n    TimelineEntityType thisType = TimelineEntityType.valueOf(getType());\r\n    if (identifiers instanceof Set<?>) {\r\n        for (Object identifier : (Set<?>) identifiers) {\r\n            if (!(identifier instanceof Identifier)) {\r\n                throw new YarnRuntimeException(\"Children info contains invalid identifier object\");\r\n            } else {\r\n                validateChild((Identifier) identifier, thisType);\r\n            }\r\n        }\r\n    } else {\r\n        throw new YarnRuntimeException(\"Children info is invalid identifier set\");\r\n    }\r\n    Set<Identifier> children = (Set<Identifier>) identifiers;\r\n    return children;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "setChildren",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setChildren(Set<Identifier> children)\n{\r\n    addInfo(CHILDREN_INFO_KEY, children);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addChildren",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void addChildren(Set<Identifier> children)\n{\r\n    TimelineEntityType thisType = TimelineEntityType.valueOf(getType());\r\n    for (Identifier child : children) {\r\n        validateChild(child, thisType);\r\n    }\r\n    Set<Identifier> existingChildren = getChildren();\r\n    existingChildren.addAll(children);\r\n    setChildren(existingChildren);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addChild",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addChild(Identifier child)\n{\r\n    addChildren(Collections.singleton(child));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "addChild",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addChild(String type, String id)\n{\r\n    addChild(new Identifier(type, id));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "validateParent",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void validateParent(String type)\n{\r\n    TimelineEntityType parentType = TimelineEntityType.valueOf(type);\r\n    TimelineEntityType thisType = TimelineEntityType.valueOf(getType());\r\n    if (!thisType.isParent(parentType)) {\r\n        throw new IllegalArgumentException(type + \" is not the acceptable parent of \" + this.getType());\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timelineservice",
  "methodName" : "validateChild",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void validateChild(Identifier child, TimelineEntityType thisType)\n{\r\n    TimelineEntityType childType = TimelineEntityType.valueOf(child.getType());\r\n    if (!thisType.isChild(childType)) {\r\n        throw new IllegalArgumentException(child.getType() + \" is not the acceptable child of \" + this.getType());\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "RejectedSchedulingRequest newInstance(RejectionReason reason, SchedulingRequest request)\n{\r\n    RejectedSchedulingRequest instance = Records.newRecord(RejectedSchedulingRequest.class);\r\n    instance.setReason(reason);\r\n    instance.setRequest(request);\r\n    return instance;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getReason",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RejectionReason getReason()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setReason",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setReason(RejectionReason reason)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "getRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SchedulingRequest getRequest()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records",
  "methodName" : "setRequest",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRequest(SchedulingRequest request)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "getDomains",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<TimelineDomain> getDomains()\n{\r\n    return domains;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addDomain",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addDomain(TimelineDomain domain)\n{\r\n    domains.add(domain);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "addDomains",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void addDomains(List<TimelineDomain> domains)\n{\r\n    this.domains.addAll(domains);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\records\\timeline",
  "methodName" : "setDomains",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setDomains(List<TimelineDomain> domains)\n{\r\n    this.domains = domains;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodeLabelsResponse newInstance(Set<String> labels)\n{\r\n    List<NodeLabel> list = new ArrayList<>();\r\n    for (String label : labels) {\r\n        list.add(NodeLabel.newInstance(label));\r\n    }\r\n    return newInstance(list);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "newInstance",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodeLabelsResponse newInstance(List<NodeLabel> labels)\n{\r\n    GetClusterNodeLabelsResponse response = Records.newRecord(GetClusterNodeLabelsResponse.class);\r\n    response.setNodeLabelList(labels);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeLabelList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabelList(List<NodeLabel> labels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeLabelList",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "List<NodeLabel> getNodeLabelList()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "setNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNodeLabels(Set<String> labels)",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-api\\src\\main\\java\\org\\apache\\hadoop\\yarn\\api\\protocolrecords",
  "methodName" : "getNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Set<String> getNodeLabels()",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
} ]