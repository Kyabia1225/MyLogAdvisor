[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(RMAdminRequestInterceptor nextInterceptor)\n{\r\n    this.nextInterceptor = nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "setConf",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setConf(Configuration conf)\n{\r\n    this.conf = conf;\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.setConf(conf);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getConf",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Configuration getConf()\n{\r\n    return this.conf;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void init(String user)\n{\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.init(user);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "shutdown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void shutdown()\n{\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.shutdown();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RMAdminRequestInterceptor getNextInterceptor()\n{\r\n    return this.nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "doSecureLogin",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void doSecureLogin() throws IOException\n{\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "serviceInit",
  "errType" : null,
  "containingMethodsNum" : 11,
  "sourceCodeText" : "void serviceInit(Configuration config) throws Exception\n{\r\n    this.conf = config;\r\n    clientRMProxyService = createClientRMProxyService();\r\n    addService(clientRMProxyService);\r\n    rmAdminProxyService = createRMAdminProxyService();\r\n    addService(rmAdminProxyService);\r\n    webAppAddress = WebAppUtils.getWebAppBindURL(this.conf, YarnConfiguration.ROUTER_BIND_HOST, WebAppUtils.getRouterWebAppURLWithoutScheme(this.conf));\r\n    DefaultMetricsSystem.initialize(METRICS_NAME);\r\n    JvmMetrics jm = JvmMetrics.initSingleton(\"Router\", null);\r\n    pauseMonitor = new JvmPauseMonitor();\r\n    addService(pauseMonitor);\r\n    jm.setPauseMonitor(pauseMonitor);\r\n    WebServiceClient.initialize(config);\r\n    super.serviceInit(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "serviceStart",
  "errType" : [ "IOException" ],
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void serviceStart() throws Exception\n{\r\n    try {\r\n        doSecureLogin();\r\n    } catch (IOException e) {\r\n        throw new YarnRuntimeException(\"Failed Router login\", e);\r\n    }\r\n    startWepApp();\r\n    super.serviceStart();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "serviceStop",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void serviceStop() throws Exception\n{\r\n    if (webApp != null) {\r\n        webApp.stop();\r\n    }\r\n    if (isStopping.getAndSet(true)) {\r\n        return;\r\n    }\r\n    super.serviceStop();\r\n    DefaultMetricsSystem.shutdown();\r\n    WebServiceClient.destroy();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "shutDown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void shutDown()\n{\r\n    new Thread() {\r\n\r\n        @Override\r\n        public void run() {\r\n            Router.this.stop();\r\n        }\r\n    }.start();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createClientRMProxyService",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RouterClientRMService createClientRMProxyService()\n{\r\n    return new RouterClientRMService();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createRMAdminProxyService",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RouterRMAdminService createRMAdminProxyService()\n{\r\n    return new RouterRMAdminService();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getWebapp",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "WebApp getWebapp()\n{\r\n    return this.webApp;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "startWepApp",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void startWepApp()\n{\r\n    RMWebAppUtil.setupSecurityAndFilters(conf, null);\r\n    Builder<Object> builder = WebApps.$for(\"cluster\", null, null, \"ws\").with(conf).at(webAppAddress);\r\n    webApp = builder.start(new RouterWebApp(this));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "main",
  "errType" : [ "Throwable" ],
  "containingMethodsNum" : 8,
  "sourceCodeText" : "void main(String[] argv)\n{\r\n    Configuration conf = new YarnConfiguration();\r\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\r\n    StringUtils.startupShutdownMessage(Router.class, argv, LOG);\r\n    Router router = new Router();\r\n    try {\r\n        if (null != routerShutdownHook) {\r\n            ShutdownHookManager.get().removeShutdownHook(routerShutdownHook);\r\n        }\r\n        routerShutdownHook = new CompositeServiceShutdownHook(router);\r\n        ShutdownHookManager.get().addShutdownHook(routerShutdownHook, SHUTDOWN_HOOK_PRIORITY);\r\n        router.init(conf);\r\n        router.start();\r\n    } catch (Throwable t) {\r\n        LOG.error(\"Error starting Router\", t);\r\n        System.exit(-1);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getMetrics",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "RouterMetrics getMetrics()\n{\r\n    if (!isInitialized.get()) {\r\n        synchronized (RouterMetrics.class) {\r\n            if (INSTANCE == null) {\r\n                INSTANCE = DefaultMetricsSystem.instance().register(\"RouterMetrics\", \"Metrics for the Yarn Router\", new RouterMetrics());\r\n                isInitialized.set(true);\r\n            }\r\n        }\r\n    }\r\n    return INSTANCE;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "destroy",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void destroy()\n{\r\n    isInitialized.set(false);\r\n    INSTANCE = null;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededAppsCreated",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededAppsCreated()\n{\r\n    return totalSucceededAppsCreated.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededAppsSubmitted",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededAppsSubmitted()\n{\r\n    return totalSucceededAppsSubmitted.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededAppsKilled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededAppsKilled()\n{\r\n    return totalSucceededAppsKilled.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededAppsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededAppsRetrieved()\n{\r\n    return totalSucceededAppsRetrieved.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededAppAttemptsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededAppAttemptsRetrieved()\n{\r\n    return totalSucceededAppAttemptsRetrieved.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededMultipleAppsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededMultipleAppsRetrieved()\n{\r\n    return totalSucceededMultipleAppsRetrieved.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getNumSucceededGetClusterMetricsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getNumSucceededGetClusterMetricsRetrieved()\n{\r\n    return totalSucceededGetClusterMetricsRetrieved.lastStat().numSamples();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededAppsCreated",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededAppsCreated()\n{\r\n    return totalSucceededAppsCreated.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededAppsSubmitted",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededAppsSubmitted()\n{\r\n    return totalSucceededAppsSubmitted.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededAppsKilled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededAppsKilled()\n{\r\n    return totalSucceededAppsKilled.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededGetAppAttemptReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededGetAppAttemptReport()\n{\r\n    return totalSucceededAppAttemptsRetrieved.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededGetAppReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededGetAppReport()\n{\r\n    return totalSucceededAppsRetrieved.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededMultipleGetAppReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededMultipleGetAppReport()\n{\r\n    return totalSucceededMultipleAppsRetrieved.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getLatencySucceededGetClusterMetricsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "double getLatencySucceededGetClusterMetricsRetrieved()\n{\r\n    return totalSucceededGetClusterMetricsRetrieved.lastStat().mean();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getAppsFailedCreated",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getAppsFailedCreated()\n{\r\n    return numAppsFailedCreated.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getAppsFailedSubmitted",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getAppsFailedSubmitted()\n{\r\n    return numAppsFailedSubmitted.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getAppsFailedKilled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getAppsFailedKilled()\n{\r\n    return numAppsFailedKilled.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getAppsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getAppsFailedRetrieved()\n{\r\n    return numAppsFailedRetrieved.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getAppAttemptsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getAppAttemptsFailedRetrieved()\n{\r\n    return numAppsFailedRetrieved.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getMultipleAppsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getMultipleAppsFailedRetrieved()\n{\r\n    return numMultipleAppsFailedRetrieved.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "getClusterMetricsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getClusterMetricsFailedRetrieved()\n{\r\n    return numGetClusterMetricsFailedRetrieved.value();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededAppsCreated",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededAppsCreated(long duration)\n{\r\n    totalSucceededAppsCreated.add(duration);\r\n    getNewApplicationLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededAppsSubmitted",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededAppsSubmitted(long duration)\n{\r\n    totalSucceededAppsSubmitted.add(duration);\r\n    submitApplicationLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededAppsKilled",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededAppsKilled(long duration)\n{\r\n    totalSucceededAppsKilled.add(duration);\r\n    killApplicationLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededAppsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededAppsRetrieved(long duration)\n{\r\n    totalSucceededAppsRetrieved.add(duration);\r\n    getApplicationReportLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededMultipleAppsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededMultipleAppsRetrieved(long duration)\n{\r\n    totalSucceededMultipleAppsRetrieved.add(duration);\r\n    getApplicationsReportLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededAppAttemptsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededAppAttemptsRetrieved(long duration)\n{\r\n    totalSucceededAppAttemptsRetrieved.add(duration);\r\n    getApplicationAttemptReportLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "succeededGetClusterMetricsRetrieved",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void succeededGetClusterMetricsRetrieved(long duration)\n{\r\n    totalSucceededGetClusterMetricsRetrieved.add(duration);\r\n    getClusterMetricsLatency.add(duration);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrAppsFailedCreated",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrAppsFailedCreated()\n{\r\n    numAppsFailedCreated.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrAppsFailedSubmitted",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrAppsFailedSubmitted()\n{\r\n    numAppsFailedSubmitted.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrAppsFailedKilled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrAppsFailedKilled()\n{\r\n    numAppsFailedKilled.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrAppsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrAppsFailedRetrieved()\n{\r\n    numAppsFailedRetrieved.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrMultipleAppsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrMultipleAppsFailedRetrieved()\n{\r\n    numMultipleAppsFailedRetrieved.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrAppAttemptsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrAppAttemptsFailedRetrieved()\n{\r\n    numAppAttemptsFailedRetrieved.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "incrGetClusterMetricsFailedRetrieved",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void incrGetClusterMetricsFailedRetrieved()\n{\r\n    numGetClusterMetricsFailedRetrieved.incr();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "render",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void render(Block html)\n{\r\n    Configuration conf = this.router.getConfig();\r\n    String webAppAddress = WebAppUtils.getRouterWebAppURLWithScheme(conf);\r\n    Client client = RouterWebServiceUtil.createJerseyClient(conf);\r\n    ClusterMetricsInfo metrics = RouterWebServiceUtil.genericForward(webAppAddress, null, ClusterMetricsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.METRICS, null, null, conf, client);\r\n    boolean isEnabled = conf.getBoolean(YarnConfiguration.FEDERATION_ENABLED, YarnConfiguration.DEFAULT_FEDERATION_ENABLED);\r\n    info(\"Cluster Status\").__(\"Federation Enabled\", isEnabled).__(\"Applications Submitted\", metrics.getAppsSubmitted()).__(\"Applications Pending\", metrics.getAppsPending()).__(\"Applications Running\", metrics.getAppsRunning()).__(\"Applications Failed\", metrics.getAppsFailed()).__(\"Applications Killed\", metrics.getAppsKilled()).__(\"Applications Completed\", metrics.getAppsCompleted()).__(\"Containers Allocated\", metrics.getContainersAllocated()).__(\"Containers Reserved\", metrics.getReservedContainers()).__(\"Containers Pending\", metrics.getPendingContainers()).__(\"Available Memory\", StringUtils.byteDesc(metrics.getAvailableMB() * BYTES_IN_MB)).__(\"Allocated Memory\", StringUtils.byteDesc(metrics.getAllocatedMB() * BYTES_IN_MB)).__(\"Reserved Memory\", StringUtils.byteDesc(metrics.getReservedMB() * BYTES_IN_MB)).__(\"Total Memory\", StringUtils.byteDesc(metrics.getTotalMB() * BYTES_IN_MB)).__(\"Available VirtualCores\", metrics.getAvailableVirtualCores()).__(\"Allocated VirtualCores\", metrics.getAllocatedVirtualCores()).__(\"Reserved VirtualCores\", metrics.getReservedVirtualCores()).__(\"Total VirtualCores\", metrics.getTotalVirtualCores()).__(\"Active Nodes\", metrics.getActiveNodes()).__(\"Lost Nodes\", metrics.getLostNodes()).__(\"Available Nodes\", metrics.getDecommissionedNodes()).__(\"Unhealthy Nodes\", metrics.getUnhealthyNodes()).__(\"Rebooted Nodes\", metrics.getRebootedNodes()).__(\"Total Nodes\", metrics.getTotalNodes());\r\n    html.__(InfoBlock.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logSuccess",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logSuccess(String user, String operation, String target, ApplicationId appId)\n{\r\n    if (LOG.isInfoEnabled()) {\r\n        LOG.info(createSuccessLog(user, operation, target, appId, null));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logSuccess",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logSuccess(String user, String operation, String target, ApplicationId appId, SubClusterId subClusterId)\n{\r\n    if (LOG.isInfoEnabled()) {\r\n        LOG.info(createSuccessLog(user, operation, target, appId, subClusterId));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createSuccessLog",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String createSuccessLog(String user, String operation, String target, ApplicationId appId, SubClusterId subClusterID)\n{\r\n    StringBuilder b = createStringBuilderForSuccessEvent(user, operation, target);\r\n    if (appId != null) {\r\n        add(Keys.APPID, appId.toString(), b);\r\n    }\r\n    if (subClusterID != null) {\r\n        add(Keys.SUBCLUSTERID, subClusterID.toString(), b);\r\n    }\r\n    return b.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createStringBuilderForSuccessEvent",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "StringBuilder createStringBuilderForSuccessEvent(String user, String operation, String target)\n{\r\n    StringBuilder b = new StringBuilder();\r\n    start(Keys.USER, user, b);\r\n    add(Keys.OPERATION, operation, b);\r\n    add(Keys.TARGET, target, b);\r\n    add(Keys.RESULT, AuditConstants.SUCCESS, b);\r\n    return b;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logFailure",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logFailure(String user, String operation, String perm, String target, String description)\n{\r\n    if (LOG.isInfoEnabled()) {\r\n        LOG.info(createFailureLog(user, operation, perm, target, description, null, null));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logFailure",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logFailure(String user, String operation, String perm, String target, String description, ApplicationId appId)\n{\r\n    if (LOG.isInfoEnabled()) {\r\n        LOG.info(createFailureLog(user, operation, perm, target, description, appId, null));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logFailure",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logFailure(String user, String operation, String perm, String target, String description, ApplicationId appId, SubClusterId subClusterId)\n{\r\n    if (LOG.isInfoEnabled()) {\r\n        LOG.info(createFailureLog(user, operation, perm, target, description, appId, subClusterId));\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createFailureLog",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "String createFailureLog(String user, String operation, String perm, String target, String description, ApplicationId appId, SubClusterId subClusterId)\n{\r\n    StringBuilder b = createStringBuilderForFailureLog(user, operation, target, description, perm);\r\n    if (appId != null) {\r\n        add(Keys.APPID, appId.toString(), b);\r\n    }\r\n    if (subClusterId != null) {\r\n        add(Keys.SUBCLUSTERID, subClusterId.toString(), b);\r\n    }\r\n    return b.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "createStringBuilderForFailureLog",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "StringBuilder createStringBuilderForFailureLog(String user, String operation, String target, String description, String perm)\n{\r\n    StringBuilder b = new StringBuilder();\r\n    start(Keys.USER, user, b);\r\n    add(Keys.OPERATION, operation, b);\r\n    add(Keys.TARGET, target, b);\r\n    add(Keys.RESULT, AuditConstants.FAILURE, b);\r\n    add(Keys.DESCRIPTION, description, b);\r\n    add(Keys.PERMISSIONS, perm, b);\r\n    return b;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "start",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void start(Keys key, String value, StringBuilder b)\n{\r\n    b.append(key.name()).append(AuditConstants.KEY_VAL_SEPARATOR).append(value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "add",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void add(Keys key, String value, StringBuilder b)\n{\r\n    b.append(AuditConstants.PAIR_SEPARATOR).append(key.name()).append(AuditConstants.KEY_VAL_SEPARATOR).append(value);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "preHead",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void preHead(Page.HTML<__> html)\n{\r\n    commonPreHead(html);\r\n    set(DATATABLES_ID, \"apps\");\r\n    set(initID(DATATABLES, \"apps\"), appsTableInit());\r\n    setTableStyles(html, \"apps\", \".queue {width:6em}\", \".ui {width:8em}\");\r\n    String reqState = $(APP_STATE);\r\n    reqState = (reqState == null || reqState.isEmpty() ? \"All\" : reqState);\r\n    setTitle(sjoin(reqState, \"Applications\"));\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "appsTableInit",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String appsTableInit()\n{\r\n    return tableInit().append(\", 'aaData': appsTableData\").append(\", bDeferRender: true\").append(\", bProcessing: true\").append(\"\\n, aoColumnDefs: \").append(getAppsTableColumnDefs()).append(\", aaSorting: [[0, 'desc']]}\").toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppsTableColumnDefs",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getAppsTableColumnDefs()\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    return sb.append(\"[\\n\").append(\"{'sType':'string', 'aTargets': [0]\").append(\", 'mRender': parseHadoopID }\").append(\"\\n, {'sType':'numeric', 'aTargets': [6, 7]\").append(\", 'mRender': renderHadoopDate }\").append(\"\\n, {'sType':'numeric', bSearchable:false, 'aTargets': [10]\").append(\", 'mRender': parseHadoopProgress }]\").toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "content",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> content()\n{\r\n    return AppsBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "index",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void index()\n{\r\n    setTitle(\"Router\");\r\n    render(AboutPage.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "about",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void about()\n{\r\n    setTitle(\"About the Cluster\");\r\n    render(AboutPage.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "federation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void federation()\n{\r\n    setTitle(\"Federation\");\r\n    render(FederationPage.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "apps",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void apps()\n{\r\n    setTitle(\"Applications\");\r\n    render(AppsPage.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "nodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void nodes()\n{\r\n    setTitle(\"Nodes\");\r\n    render(NodesPage.class);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "preHead",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void preHead(Page.HTML<__> html)\n{\r\n    commonPreHead(html);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "content",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> content()\n{\r\n    return AboutBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getParams",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Object[] getParams()\n{\r\n    return Arrays.copyOf(this.params, this.params.length);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getMethodName",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getMethodName()\n{\r\n    return methodName;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getTypes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Class<?>[] getTypes()\n{\r\n    return Arrays.copyOf(this.types, this.types.length);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "init",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void init(String userName)\n{\r\n    super.init(userName);\r\n    final Configuration conf = this.getConf();\r\n    try {\r\n        clientRMProxy = user.doAs(new PrivilegedExceptionAction<ApplicationClientProtocol>() {\r\n\r\n            @Override\r\n            public ApplicationClientProtocol run() throws Exception {\r\n                return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\r\n            }\r\n        });\r\n    } catch (Exception e) {\r\n        throw new YarnRuntimeException(\"Unable to create the interface to reach the YarnRM\", e);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(ClientRequestInterceptor next)\n{\r\n    throw new YarnRuntimeException(\"setNextInterceptor is being called on DefaultRequestInterceptor,\" + \"which should be the last one in the chain \" + \"Check if the interceptor pipeline configuration is correct\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewApplication",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNewApplicationResponse getNewApplication(GetNewApplicationRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getNewApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitApplication",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "SubmitApplicationResponse submitApplication(SubmitApplicationRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.submitApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "forceKillApplication",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "KillApplicationResponse forceKillApplication(KillApplicationRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.forceKillApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterMetrics",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterMetricsResponse getClusterMetrics(GetClusterMetricsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getClusterMetrics(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodesResponse getClusterNodes(GetClusterNodesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getClusterNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getQueueInfo(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueUserAcls",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetQueueUserAclsInfoResponse getQueueUserAcls(GetQueueUserAclsInfoRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getQueueUserAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "moveApplicationAcrossQueues",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "MoveApplicationAcrossQueuesResponse moveApplicationAcrossQueues(MoveApplicationAcrossQueuesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.moveApplicationAcrossQueues(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNewReservationResponse getNewReservation(GetNewReservationRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getNewReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationSubmissionResponse submitReservation(ReservationSubmissionRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.submitReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "listReservations",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationListResponse listReservations(ReservationListRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.listReservations(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationUpdateResponse updateReservation(ReservationUpdateRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.updateReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReservationDeleteResponse deleteReservation(ReservationDeleteRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.deleteReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNodesToLabelsResponse getNodeToLabels(GetNodesToLabelsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getNodeToLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetLabelsToNodesResponse getLabelsToNodes(GetLabelsToNodesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getLabelsToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodeLabelsResponse getClusterNodeLabels(GetClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetApplicationReportResponse getApplicationReport(GetApplicationReportRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getApplicationReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplications",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetApplicationsResponse getApplications(GetApplicationsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getApplications(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttemptReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetApplicationAttemptReportResponse getApplicationAttemptReport(GetApplicationAttemptReportRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getApplicationAttemptReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttempts",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetApplicationAttemptsResponse getApplicationAttempts(GetApplicationAttemptsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getApplicationAttempts(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainerReport",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetContainerReportResponse getContainerReport(GetContainerReportRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getContainerReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getContainers(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetDelegationTokenResponse getDelegationToken(GetDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "renewDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RenewDelegationTokenResponse renewDelegationToken(RenewDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.renewDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CancelDelegationTokenResponse cancelDelegationToken(CancelDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.cancelDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "failApplicationAttempt",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "FailApplicationAttemptResponse failApplicationAttempt(FailApplicationAttemptRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.failApplicationAttempt(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "UpdateApplicationPriorityResponse updateApplicationPriority(UpdateApplicationPriorityRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.updateApplicationPriority(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "SignalContainerResponse signalToContainer(SignalContainerRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.signalToContainer(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "UpdateApplicationTimeoutsResponse updateApplicationTimeouts(UpdateApplicationTimeoutsRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.updateApplicationTimeouts(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceProfilesResponse getResourceProfiles(GetAllResourceProfilesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getResourceProfiles(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfile",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetResourceProfileResponse getResourceProfile(GetResourceProfileRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getResourceProfile(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAllResourceTypeInfoResponse getResourceTypeInfo(GetAllResourceTypeInfoRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getResourceTypeInfo(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetAttributesToNodesResponse getAttributesToNodes(GetAttributesToNodesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getAttributesToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetClusterNodeAttributesResponse getClusterNodeAttributes(GetClusterNodeAttributesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getClusterNodeAttributes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodesToAttributes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "GetNodesToAttributesResponse getNodesToAttributes(GetNodesToAttributesRequest request) throws YarnException, IOException\n{\r\n    return clientRMProxy.getNodesToAttributes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setRMClient",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRMClient(ApplicationClientProtocol clientRM)\n{\r\n    this.clientRMProxy = clientRM;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setWebAppAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWebAppAddress(String webAppAddress)\n{\r\n    this.webAppAddress = webAppAddress;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getWebAppAddress",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getWebAppAddress()\n{\r\n    return this.webAppAddress;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setSubClusterId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setSubClusterId(SubClusterId scId)\n{\r\n    this.subClusterId = scId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getSubClusterId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SubClusterId getSubClusterId()\n{\r\n    return this.subClusterId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void init(String user)\n{\r\n    webAppAddress = WebAppUtils.getRMWebAppURLWithScheme(getConf());\r\n    client = RouterWebServiceUtil.createJerseyClient(getConf());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "get",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterInfo get()\n{\r\n    return getClusterInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterInfo getClusterInfo()\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, ClusterInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.INFO, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterUserInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterUserInfo getClusterUserInfo(HttpServletRequest hsr)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, ClusterUserInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.CLUSTER_USER_INFO, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterMetricsInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterMetricsInfo getClusterMetricsInfo()\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, ClusterMetricsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.METRICS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getSchedulerInfo",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "SchedulerTypeInfo getSchedulerInfo()\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, SchedulerTypeInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.SCHEDULER, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "dumpSchedulerLogs",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String dumpSchedulerLogs(String time, HttpServletRequest hsr) throws IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, String.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.SCHEDULER_LOGS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodes",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodesInfo getNodes(String states)\n{\r\n    Map<String, String[]> additionalParam = new HashMap<String, String[]>();\r\n    if (states != null && !states.isEmpty()) {\r\n        additionalParam.put(RMWSConsts.STATES, new String[] { states });\r\n    }\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, NodesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES, null, additionalParam, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeInfo getNode(String nodeId)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, NodeInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES + \"/\" + nodeId, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateNodeResource",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ResourceInfo updateNodeResource(HttpServletRequest hsr, String nodeId, ResourceOptionInfo resourceOption)\n{\r\n    final String nodePath = RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES + \"/\" + nodeId;\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, ResourceInfo.class, HTTPMethods.POST, nodePath + \"/resource\", resourceOption, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApps",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppsInfo getApps(HttpServletRequest hsr, String stateQuery, Set<String> statesQuery, String finalStatusQuery, String userQuery, String queueQuery, String count, String startedBegin, String startedEnd, String finishBegin, String finishEnd, Set<String> applicationTypes, Set<String> applicationTags, String name, Set<String> unselectedFields)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getActivities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ActivitiesInfo getActivities(HttpServletRequest hsr, String nodeId, String groupBy)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, ActivitiesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.SCHEDULER_ACTIVITIES, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getBulkActivities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "BulkActivitiesInfo getBulkActivities(HttpServletRequest hsr, String groupBy, int activitiesCount)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, BulkActivitiesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.SCHEDULER_BULK_ACTIVITIES, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppActivities",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppActivitiesInfo getAppActivities(HttpServletRequest hsr, String appId, String time, Set<String> requestPriorities, Set<String> allocationRequestIds, String groupBy, String limit, Set<String> actions, boolean summarize)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppActivitiesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.SCHEDULER_APP_ACTIVITIES, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppStatistics",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ApplicationStatisticsInfo getAppStatistics(HttpServletRequest hsr, Set<String> stateQueries, Set<String> typeQueries)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, ApplicationStatisticsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APP_STATISTICS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApp",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppInfo getApp(HttpServletRequest hsr, String appId, Set<String> unselectedFields)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppState",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppState getAppState(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppState.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.STATE, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppState",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response updateAppState(AppState targetState, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.PUT, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.STATE, targetState, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeToLabelsInfo getNodeToLabels(HttpServletRequest hsr) throws IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, NodeToLabelsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.GET_NODE_TO_LABELS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "LabelsToNodesInfo getLabelsToNodes(Set<String> labels) throws IOException\n{\r\n    Map<String, String[]> additionalParam = new HashMap<>();\r\n    if (labels != null && !labels.isEmpty()) {\r\n        additionalParam.put(RMWSConsts.LABELS, labels.toArray(new String[labels.size()]));\r\n    }\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, null, LabelsToNodesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.LABEL_MAPPINGS, null, additionalParam, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response replaceLabelsOnNodes(NodeToLabelsEntryList newNodeToLabels, HttpServletRequest hsr) throws IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.REPLACE_NODE_TO_LABELS, newNodeToLabels, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response replaceLabelsOnNode(Set<String> newNodeLabelsName, HttpServletRequest hsr, String nodeId) throws Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES + \"/\" + nodeId + \"/replace-labels\", null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeLabelsInfo getClusterNodeLabels(HttpServletRequest hsr) throws IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, NodeLabelsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.GET_NODE_LABELS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "addToClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response addToClusterNodeLabels(NodeLabelsInfo newNodeLabels, HttpServletRequest hsr) throws Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.ADD_NODE_LABELS, newNodeLabels, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "removeFromClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response removeFromClusterNodeLabels(Set<String> oldNodeLabels, HttpServletRequest hsr) throws Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.REMOVE_NODE_LABELS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodeLabelsInfo getLabelsOnNode(HttpServletRequest hsr, String nodeId) throws IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, NodeLabelsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES + \"/\" + nodeId + \"/get-labels\", null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppPriority",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppPriority getAppPriority(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppPriority.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.PRIORITY, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response updateApplicationPriority(AppPriority targetPriority, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.PUT, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.PRIORITY, targetPriority, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppQueue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppQueue getAppQueue(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppQueue.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.QUEUE, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppQueue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response updateAppQueue(AppQueue targetQueue, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.PUT, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.QUEUE, targetQueue, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewApplication",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response createNewApplication(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS_NEW_APPLICATION, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitApplication",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response submitApplication(ApplicationSubmissionContextInfo newApp, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS, newApp, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response postDelegationToken(DelegationToken tokenData, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.DELEGATION_TOKEN, tokenData, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationTokenExpiration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response postDelegationTokenExpiration(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.DELEGATION_TOKEN_EXPIRATION, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response cancelDelegationToken(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.DELETE, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.DELEGATION_TOKEN, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response createNewReservation(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.RESERVATION_NEW, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response submitReservation(ReservationSubmissionRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.RESERVATION_SUBMIT, resContext, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response updateReservation(ReservationUpdateRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.RESERVATION_UPDATE, resContext, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response deleteReservation(ReservationDeleteRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.RESERVATION_DELETE, resContext, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "listReservation",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response listReservation(String queue, String reservationId, long startTime, long endTime, boolean includeResourceAllocations, HttpServletRequest hsr) throws Exception\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.RESERVATION_LIST, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeout",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppTimeoutInfo getAppTimeout(HttpServletRequest hsr, String appId, String type) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppTimeoutInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.TIMEOUTS + \"/\" + type, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeouts",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppTimeoutsInfo getAppTimeouts(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppTimeoutsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.TIMEOUTS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationTimeout",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response updateApplicationTimeout(AppTimeoutInfo appTimeout, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, Response.class, HTTPMethods.PUT, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.TIMEOUT, appTimeout, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempts",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppAttemptsInfo getAppAttempts(HttpServletRequest hsr, String appId)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, AppAttemptsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.APPATTEMPTS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "checkUserAccessToQueue",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RMQueueAclInfo checkUserAccessToQueue(String queue, String username, String queueAclType, HttpServletRequest hsr)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, hsr, RMQueueAclInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.QUEUES + \"/\" + queue + \"/access\", null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempt",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AppAttemptInfo getAppAttempt(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, req, AppAttemptInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.APPATTEMPTS + \"/\" + appAttemptId, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainersInfo getContainers(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, req, ContainersInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.APPATTEMPTS + \"/\" + appAttemptId + \"/\" + RMWSConsts.CONTAINERS, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainer",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ContainerInfo getContainer(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId, String containerId)\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, req, ContainerInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS + \"/\" + appId + \"/\" + RMWSConsts.APPATTEMPTS + \"/\" + appAttemptId + \"/\" + RMWSConsts.CONTAINERS + \"/\" + containerId, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(RESTRequestInterceptor next)\n{\r\n    throw new YarnRuntimeException(\"setNextInterceptor is being called on \" + \"DefaultRequestInterceptorREST, which should be the last one \" + \"in the chain. Check if the interceptor pipeline configuration \" + \"is correct\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Response signalToContainer(String containerId, String command, HttpServletRequest req) throws AuthorizationException\n{\r\n    return RouterWebServiceUtil.genericForward(webAppAddress, req, Response.class, HTTPMethods.POST, RMWSConsts.RM_WEB_SERVICE_PATH + \"/\" + RMWSConsts.CONTAINERS + \"/\" + containerId + \"/\" + RMWSConsts.SIGNAL + \"/\" + command, null, null, getConf(), client);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "preHead",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void preHead(Page.HTML<__> html)\n{\r\n    commonPreHead(html);\r\n    String type = $(NODE_STATE);\r\n    String title = \"Nodes of the cluster\";\r\n    if (type != null && !type.isEmpty()) {\r\n        title = title + \" (\" + type + \")\";\r\n    }\r\n    setTitle(title);\r\n    set(DATATABLES_ID, \"nodes\");\r\n    set(initID(DATATABLES, \"nodes\"), nodesTableInit());\r\n    setTableStyles(html, \"nodes\", \".healthStatus {width:10em}\", \".healthReport {width:10em}\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "content",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> content()\n{\r\n    return NodesBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "nodesTableInit",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String nodesTableInit()\n{\r\n    StringBuilder b = tableInit().append(\", aoColumnDefs: [\");\r\n    b.append(\"{'bSearchable': false, 'aTargets': [ 7 ]}\").append(\", {'sType': 'title-numeric', 'bSearchable': false, \" + \"'aTargets': [ 2, 3, 4, 5, 6 ] }\").append(\", {'sType': 'title-numeric', 'aTargets': [ 5 ]}\").append(\"]}\");\r\n    return b.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "serviceStart",
  "errType" : null,
  "containingMethodsNum" : 14,
  "sourceCodeText" : "void serviceStart() throws Exception\n{\r\n    LOG.info(\"Starting Router ClientRMService\");\r\n    Configuration conf = getConfig();\r\n    YarnRPC rpc = YarnRPC.create(conf);\r\n    UserGroupInformation.setConfiguration(conf);\r\n    this.listenerEndpoint = conf.getSocketAddr(YarnConfiguration.ROUTER_BIND_HOST, YarnConfiguration.ROUTER_CLIENTRM_ADDRESS, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_ADDRESS, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_PORT);\r\n    int maxCacheSize = conf.getInt(YarnConfiguration.ROUTER_PIPELINE_CACHE_MAX_SIZE, YarnConfiguration.DEFAULT_ROUTER_PIPELINE_CACHE_MAX_SIZE);\r\n    this.userPipelineMap = Collections.synchronizedMap(new LRUCacheHashMap<String, RequestInterceptorChainWrapper>(maxCacheSize, true));\r\n    Configuration serverConf = new Configuration(conf);\r\n    int numWorkerThreads = serverConf.getInt(YarnConfiguration.RM_CLIENT_THREAD_COUNT, YarnConfiguration.DEFAULT_RM_CLIENT_THREAD_COUNT);\r\n    this.server = rpc.getServer(ApplicationClientProtocol.class, this, listenerEndpoint, serverConf, null, numWorkerThreads);\r\n    if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\r\n        refreshServiceAcls(conf, RouterPolicyProvider.getInstance());\r\n    }\r\n    this.server.start();\r\n    LOG.info(\"Router ClientRMService listening on address: \" + this.server.getListenerAddress());\r\n    super.serviceStart();\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "serviceStop",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void serviceStop() throws Exception\n{\r\n    LOG.info(\"Stopping Router ClientRMService\");\r\n    if (this.server != null) {\r\n        this.server.stop();\r\n    }\r\n    userPipelineMap.clear();\r\n    super.serviceStop();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getServer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Server getServer()\n{\r\n    return this.server;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getInterceptorClassNames",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "List<String> getInterceptorClassNames(Configuration conf)\n{\r\n    String configuredInterceptorClassNames = conf.get(YarnConfiguration.ROUTER_CLIENTRM_INTERCEPTOR_CLASS_PIPELINE, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_INTERCEPTOR_CLASS);\r\n    List<String> interceptorClassNames = new ArrayList<String>();\r\n    Collection<String> tempList = StringUtils.getStringCollection(configuredInterceptorClassNames);\r\n    for (String item : tempList) {\r\n        interceptorClassNames.add(item.trim());\r\n    }\r\n    return interceptorClassNames;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewApplication",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNewApplicationResponse getNewApplication(GetNewApplicationRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getNewApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitApplication",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "SubmitApplicationResponse submitApplication(SubmitApplicationRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().submitApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "forceKillApplication",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "KillApplicationResponse forceKillApplication(KillApplicationRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().forceKillApplication(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterMetrics",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterMetricsResponse getClusterMetrics(GetClusterMetricsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getClusterMetrics(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodesResponse getClusterNodes(GetClusterNodesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getClusterNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getQueueInfo(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueUserAcls",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetQueueUserAclsInfoResponse getQueueUserAcls(GetQueueUserAclsInfoRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getQueueUserAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "moveApplicationAcrossQueues",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "MoveApplicationAcrossQueuesResponse moveApplicationAcrossQueues(MoveApplicationAcrossQueuesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().moveApplicationAcrossQueues(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewReservation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNewReservationResponse getNewReservation(GetNewReservationRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getNewReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationSubmissionResponse submitReservation(ReservationSubmissionRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().submitReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "listReservations",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationListResponse listReservations(ReservationListRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().listReservations(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationUpdateResponse updateReservation(ReservationUpdateRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().updateReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReservationDeleteResponse deleteReservation(ReservationDeleteRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().deleteReservation(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNodesToLabelsResponse getNodeToLabels(GetNodesToLabelsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getNodeToLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetLabelsToNodesResponse getLabelsToNodes(GetLabelsToNodesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getLabelsToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodeLabelsResponse getClusterNodeLabels(GetClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationReport",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationReportResponse getApplicationReport(GetApplicationReportRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getApplicationReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplications",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationsResponse getApplications(GetApplicationsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getApplications(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttemptReport",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptReportResponse getApplicationAttemptReport(GetApplicationAttemptReportRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getApplicationAttemptReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttempts",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetApplicationAttemptsResponse getApplicationAttempts(GetApplicationAttemptsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getApplicationAttempts(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainerReport",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainerReportResponse getContainerReport(GetContainerReportRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getContainerReport(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getContainers(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetDelegationTokenResponse getDelegationToken(GetDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "renewDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RenewDelegationTokenResponse renewDelegationToken(RenewDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().renewDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "CancelDelegationTokenResponse cancelDelegationToken(CancelDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().cancelDelegationToken(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "failApplicationAttempt",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "FailApplicationAttemptResponse failApplicationAttempt(FailApplicationAttemptRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().failApplicationAttempt(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "UpdateApplicationPriorityResponse updateApplicationPriority(UpdateApplicationPriorityRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().updateApplicationPriority(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "SignalContainerResponse signalToContainer(SignalContainerRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().signalToContainer(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "UpdateApplicationTimeoutsResponse updateApplicationTimeouts(UpdateApplicationTimeoutsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().updateApplicationTimeouts(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetAllResourceProfilesResponse getResourceProfiles(GetAllResourceProfilesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getResourceProfiles(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfile",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetResourceProfileResponse getResourceProfile(GetResourceProfileRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getResourceProfile(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetAllResourceTypeInfoResponse getResourceTypeInfo(GetAllResourceTypeInfoRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getResourceTypeInfo(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetAttributesToNodesResponse getAttributesToNodes(GetAttributesToNodesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getAttributesToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetClusterNodeAttributesResponse getClusterNodeAttributes(GetClusterNodeAttributesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getClusterNodeAttributes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodesToAttributes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "GetNodesToAttributesResponse getNodesToAttributes(GetNodesToAttributesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getNodesToAttributes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getInterceptorChain",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "RequestInterceptorChainWrapper getInterceptorChain() throws IOException\n{\r\n    String user = UserGroupInformation.getCurrentUser().getUserName();\r\n    RequestInterceptorChainWrapper chain = userPipelineMap.get(user);\r\n    if (chain != null && chain.getRootInterceptor() != null) {\r\n        return chain;\r\n    }\r\n    return initializePipeline(user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "refreshServiceAcls",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void refreshServiceAcls(Configuration configuration, PolicyProvider policyProvider)\n{\r\n    this.server.refreshServiceAcl(configuration, policyProvider);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getPipelines",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, RequestInterceptorChainWrapper> getPipelines()\n{\r\n    return this.userPipelineMap;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "createRequestInterceptorChain",
  "errType" : [ "ClassNotFoundException" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "ClientRequestInterceptor createRequestInterceptorChain()\n{\r\n    Configuration conf = getConfig();\r\n    List<String> interceptorClassNames = getInterceptorClassNames(conf);\r\n    ClientRequestInterceptor pipeline = null;\r\n    ClientRequestInterceptor current = null;\r\n    for (String interceptorClassName : interceptorClassNames) {\r\n        try {\r\n            Class<?> interceptorClass = conf.getClassByName(interceptorClassName);\r\n            if (ClientRequestInterceptor.class.isAssignableFrom(interceptorClass)) {\r\n                ClientRequestInterceptor interceptorInstance = (ClientRequestInterceptor) ReflectionUtils.newInstance(interceptorClass, conf);\r\n                if (pipeline == null) {\r\n                    pipeline = interceptorInstance;\r\n                    current = interceptorInstance;\r\n                    continue;\r\n                } else {\r\n                    current.setNextInterceptor(interceptorInstance);\r\n                    current = interceptorInstance;\r\n                }\r\n            } else {\r\n                throw new YarnRuntimeException(\"Class: \" + interceptorClassName + \" not instance of \" + ClientRequestInterceptor.class.getCanonicalName());\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            throw new YarnRuntimeException(\"Could not instantiate ApplicationClientRequestInterceptor: \" + interceptorClassName, e);\r\n        }\r\n    }\r\n    if (pipeline == null) {\r\n        throw new YarnRuntimeException(\"RequestInterceptor pipeline is not configured in the system\");\r\n    }\r\n    return pipeline;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "initializePipeline",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "RequestInterceptorChainWrapper initializePipeline(String user)\n{\r\n    synchronized (this.userPipelineMap) {\r\n        if (this.userPipelineMap.containsKey(user)) {\r\n            LOG.info(\"Request to start an already existing user: {}\" + \" was received, so ignoring.\", user);\r\n            return userPipelineMap.get(user);\r\n        }\r\n        RequestInterceptorChainWrapper chainWrapper = new RequestInterceptorChainWrapper();\r\n        try {\r\n            LOG.info(\"Initializing request processing pipeline for application \" + \"for the user: {}\", user);\r\n            ClientRequestInterceptor interceptorChain = this.createRequestInterceptorChain();\r\n            interceptorChain.init(user);\r\n            chainWrapper.init(interceptorChain);\r\n        } catch (Exception e) {\r\n            LOG.error(\"Init ClientRequestInterceptor error for user: \" + user, e);\r\n            throw e;\r\n        }\r\n        this.userPipelineMap.put(user, chainWrapper);\r\n        return chainWrapper;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "genericForward",
  "errType" : [ "InterruptedException", "IOException", "RuntimeException|ReflectiveOperationException" ],
  "containingMethodsNum" : 4,
  "sourceCodeText" : "T genericForward(final String webApp, final HttpServletRequest hsr, final Class<T> returnType, final HTTPMethods method, final String targetPath, final Object formParam, final Map<String, String[]> additionalParam, Configuration conf, Client client)\n{\r\n    UserGroupInformation callerUGI = null;\r\n    if (hsr != null) {\r\n        callerUGI = RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\r\n    } else {\r\n        callerUGI = UserGroupInformation.createRemoteUser(user);\r\n    }\r\n    if (callerUGI == null) {\r\n        LOG.error(\"Unable to obtain user name, user not authenticated\");\r\n        return null;\r\n    }\r\n    try {\r\n        return callerUGI.doAs(new PrivilegedExceptionAction<T>() {\r\n\r\n            @SuppressWarnings(\"unchecked\")\r\n            @Override\r\n            public T run() {\r\n                Map<String, String[]> paramMap = null;\r\n                if (hsr != null) {\r\n                    paramMap = hsr.getParameterMap();\r\n                } else if (additionalParam != null) {\r\n                    paramMap = additionalParam;\r\n                }\r\n                ClientResponse response = RouterWebServiceUtil.invokeRMWebService(webApp, targetPath, method, (hsr == null) ? null : hsr.getPathInfo(), paramMap, formParam, getMediaTypeFromHttpServletRequest(hsr, returnType), conf, client);\r\n                if (Response.class.equals(returnType)) {\r\n                    return (T) RouterWebServiceUtil.clientResponseToResponse(response);\r\n                }\r\n                try {\r\n                    if (response.getStatus() == SC_OK) {\r\n                        return response.getEntity(returnType);\r\n                    }\r\n                    if (response.getStatus() == SC_NO_CONTENT) {\r\n                        try {\r\n                            return returnType.getConstructor().newInstance();\r\n                        } catch (RuntimeException | ReflectiveOperationException e) {\r\n                            LOG.error(\"Cannot create empty entity for {}\", returnType, e);\r\n                        }\r\n                    }\r\n                    RouterWebServiceUtil.retrieveException(response);\r\n                    return null;\r\n                } finally {\r\n                    if (response != null) {\r\n                        response.close();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    } catch (InterruptedException e) {\r\n        return null;\r\n    } catch (IOException e) {\r\n        return null;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 3,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "invokeRMWebService",
  "errType" : null,
  "containingMethodsNum" : 20,
  "sourceCodeText" : "ClientResponse invokeRMWebService(String webApp, String path, HTTPMethods method, String additionalPath, Map<String, String[]> queryParams, Object formParam, String mediaType, Configuration conf, Client client)\n{\r\n    InetSocketAddress socketAddress = NetUtils.getConnectAddress(NetUtils.createSocketAddr(webApp));\r\n    String scheme = YarnConfiguration.useHttps(conf) ? \"https://\" : \"http://\";\r\n    String webAddress = scheme + socketAddress.getHostName() + \":\" + socketAddress.getPort();\r\n    WebResource webResource = client.resource(webAddress).path(path);\r\n    if (additionalPath != null && !additionalPath.isEmpty()) {\r\n        webResource = webResource.path(additionalPath);\r\n    }\r\n    if (queryParams != null && !queryParams.isEmpty()) {\r\n        MultivaluedMap<String, String> paramMap = new MultivaluedMapImpl();\r\n        for (Entry<String, String[]> param : queryParams.entrySet()) {\r\n            String[] values = param.getValue();\r\n            for (int i = 0; i < values.length; i++) {\r\n                paramMap.add(param.getKey(), values[i]);\r\n            }\r\n        }\r\n        webResource = webResource.queryParams(paramMap);\r\n    }\r\n    Builder builder = null;\r\n    if (formParam != null) {\r\n        builder = webResource.entity(formParam, mediaType);\r\n        builder = builder.accept(mediaType);\r\n    } else {\r\n        builder = webResource.accept(mediaType);\r\n    }\r\n    ClientResponse response = null;\r\n    try {\r\n        switch(method) {\r\n            case DELETE:\r\n                response = builder.delete(ClientResponse.class);\r\n                break;\r\n            case GET:\r\n                response = builder.get(ClientResponse.class);\r\n                break;\r\n            case POST:\r\n                response = builder.post(ClientResponse.class);\r\n                break;\r\n            case PUT:\r\n                response = builder.put(ClientResponse.class);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    } finally {\r\n        client.destroy();\r\n    }\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "clientResponseToResponse",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "Response clientResponseToResponse(ClientResponse r)\n{\r\n    if (r == null) {\r\n        return null;\r\n    }\r\n    ResponseBuilder rb = Response.status(r.getStatus());\r\n    for (Entry<String, List<String>> entry : r.getHeaders().entrySet()) {\r\n        for (String value : entry.getValue()) {\r\n            rb.header(entry.getKey(), value);\r\n        }\r\n    }\r\n    rb.entity(r.getEntityInputStream());\r\n    return rb.build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "retrieveException",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void retrieveException(ClientResponse response)\n{\r\n    String serverErrorMsg = response.getEntity(String.class);\r\n    int status = response.getStatus();\r\n    if (status == 400) {\r\n        throw new BadRequestException(serverErrorMsg);\r\n    }\r\n    if (status == 403) {\r\n        throw new ForbiddenException(serverErrorMsg);\r\n    }\r\n    if (status == 404) {\r\n        throw new NotFoundException(serverErrorMsg);\r\n    }\r\n    if (status == 409) {\r\n        throw new ConflictException(serverErrorMsg);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "mergeAppsInfo",
  "errType" : null,
  "containingMethodsNum" : 16,
  "sourceCodeText" : "AppsInfo mergeAppsInfo(ArrayList<AppInfo> appsInfo, boolean returnPartialResult)\n{\r\n    AppsInfo allApps = new AppsInfo();\r\n    Map<String, AppInfo> federationAM = new HashMap<String, AppInfo>();\r\n    Map<String, AppInfo> federationUAMSum = new HashMap<String, AppInfo>();\r\n    for (AppInfo a : appsInfo) {\r\n        if (a.getAMHostHttpAddress() != null) {\r\n            federationAM.put(a.getAppId(), a);\r\n            if (federationUAMSum.containsKey(a.getAppId())) {\r\n                mergeAMWithUAM(a, federationUAMSum.get(a.getAppId()));\r\n                federationUAMSum.remove(a.getAppId());\r\n            }\r\n        } else {\r\n            if (federationAM.containsKey(a.getAppId())) {\r\n                mergeAMWithUAM(federationAM.get(a.getAppId()), a);\r\n            } else if (federationUAMSum.containsKey(a.getAppId())) {\r\n                federationUAMSum.put(a.getAppId(), mergeUAMWithUAM(federationUAMSum.get(a.getAppId()), a));\r\n            } else {\r\n                federationUAMSum.put(a.getAppId(), a);\r\n            }\r\n        }\r\n    }\r\n    for (AppInfo a : federationUAMSum.values()) {\r\n        if (returnPartialResult || (a.getName() != null && !(a.getName().startsWith(UnmanagedApplicationManager.APP_NAME) || a.getName().startsWith(PARTIAL_REPORT)))) {\r\n            federationAM.put(a.getAppId(), a);\r\n        }\r\n    }\r\n    allApps.addAll(new ArrayList<AppInfo>(federationAM.values()));\r\n    return allApps;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createJerseyClient",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Client createJerseyClient(Configuration conf)\n{\r\n    Client client = Client.create();\r\n    client.setConnectTimeout((int) conf.getTimeDuration(YarnConfiguration.ROUTER_WEBAPP_CONNECT_TIMEOUT, YarnConfiguration.DEFAULT_ROUTER_WEBAPP_CONNECT_TIMEOUT, TimeUnit.MILLISECONDS));\r\n    client.setReadTimeout((int) conf.getTimeDuration(YarnConfiguration.ROUTER_WEBAPP_READ_TIMEOUT, YarnConfiguration.DEFAULT_ROUTER_WEBAPP_READ_TIMEOUT, TimeUnit.MILLISECONDS));\r\n    return client;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "mergeUAMWithUAM",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "AppInfo mergeUAMWithUAM(AppInfo uam1, AppInfo uam2)\n{\r\n    AppInfo partialReport = new AppInfo();\r\n    partialReport.setAppId(uam1.getAppId());\r\n    partialReport.setName(PARTIAL_REPORT + uam1.getAppId());\r\n    partialReport.setState(uam1.getState());\r\n    mergeAMWithUAM(partialReport, uam1);\r\n    mergeAMWithUAM(partialReport, uam2);\r\n    return partialReport;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "mergeAMWithUAM",
  "errType" : null,
  "containingMethodsNum" : 17,
  "sourceCodeText" : "void mergeAMWithUAM(AppInfo am, AppInfo uam)\n{\r\n    am.setPreemptedResourceMB(am.getPreemptedResourceMB() + uam.getPreemptedResourceMB());\r\n    am.setPreemptedResourceVCores(am.getPreemptedResourceVCores() + uam.getPreemptedResourceVCores());\r\n    am.setNumNonAMContainerPreempted(am.getNumNonAMContainerPreempted() + uam.getNumNonAMContainerPreempted());\r\n    am.setNumAMContainerPreempted(am.getNumAMContainerPreempted() + uam.getNumAMContainerPreempted());\r\n    am.setPreemptedMemorySeconds(am.getPreemptedMemorySeconds() + uam.getPreemptedMemorySeconds());\r\n    am.setPreemptedVcoreSeconds(am.getPreemptedVcoreSeconds() + uam.getPreemptedVcoreSeconds());\r\n    if (am.getState() == YarnApplicationState.RUNNING && uam.getState() == am.getState()) {\r\n        am.getResourceRequests().addAll(uam.getResourceRequests());\r\n        am.setAllocatedMB(am.getAllocatedMB() + uam.getAllocatedMB());\r\n        am.setAllocatedVCores(am.getAllocatedVCores() + uam.getAllocatedVCores());\r\n        am.setReservedMB(am.getReservedMB() + uam.getReservedMB());\r\n        am.setReservedVCores(am.getReservedVCores() + uam.getReservedMB());\r\n        am.setRunningContainers(am.getRunningContainers() + uam.getRunningContainers());\r\n        am.setMemorySeconds(am.getMemorySeconds() + uam.getMemorySeconds());\r\n        am.setVcoreSeconds(am.getVcoreSeconds() + uam.getVcoreSeconds());\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "deleteDuplicateNodesInfo",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "NodesInfo deleteDuplicateNodesInfo(ArrayList<NodeInfo> nodes)\n{\r\n    NodesInfo nodesInfo = new NodesInfo();\r\n    Map<String, NodeInfo> nodesMap = new LinkedHashMap<>();\r\n    for (NodeInfo node : nodes) {\r\n        String nodeId = node.getNodeId();\r\n        if (nodesMap.containsKey(nodeId)) {\r\n            if (nodesMap.get(nodeId).getLastHealthUpdate() < node.getLastHealthUpdate()) {\r\n                nodesMap.put(node.getNodeId(), node);\r\n            }\r\n        } else {\r\n            nodesMap.put(node.getNodeId(), node);\r\n        }\r\n    }\r\n    nodesInfo.addAll(new ArrayList<NodeInfo>(nodesMap.values()));\r\n    return nodesInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "mergeMetrics",
  "errType" : null,
  "containingMethodsNum" : 25,
  "sourceCodeText" : "void mergeMetrics(ClusterMetricsInfo metrics, ClusterMetricsInfo metricsResponse)\n{\r\n    metrics.setAppsSubmitted(metrics.getAppsSubmitted() + metricsResponse.getAppsSubmitted());\r\n    metrics.setAppsCompleted(metrics.getAppsCompleted() + metricsResponse.getAppsCompleted());\r\n    metrics.setAppsPending(metrics.getAppsPending() + metricsResponse.getAppsPending());\r\n    metrics.setAppsRunning(metrics.getAppsRunning() + metricsResponse.getAppsRunning());\r\n    metrics.setAppsFailed(metrics.getAppsFailed() + metricsResponse.getAppsFailed());\r\n    metrics.setAppsKilled(metrics.getAppsKilled() + metricsResponse.getAppsKilled());\r\n    metrics.setReservedMB(metrics.getReservedMB() + metricsResponse.getReservedMB());\r\n    metrics.setAvailableMB(metrics.getAvailableMB() + metricsResponse.getAvailableMB());\r\n    metrics.setAllocatedMB(metrics.getAllocatedMB() + metricsResponse.getAllocatedMB());\r\n    metrics.setReservedVirtualCores(metrics.getReservedVirtualCores() + metricsResponse.getReservedVirtualCores());\r\n    metrics.setAvailableVirtualCores(metrics.getAvailableVirtualCores() + metricsResponse.getAvailableVirtualCores());\r\n    metrics.setAllocatedVirtualCores(metrics.getAllocatedVirtualCores() + metricsResponse.getAllocatedVirtualCores());\r\n    metrics.setContainersAllocated(metrics.getContainersAllocated() + metricsResponse.getContainersAllocated());\r\n    metrics.setContainersReserved(metrics.getReservedContainers() + metricsResponse.getReservedContainers());\r\n    metrics.setContainersPending(metrics.getPendingContainers() + metricsResponse.getPendingContainers());\r\n    metrics.setTotalMB(metrics.getTotalMB() + metricsResponse.getTotalMB());\r\n    metrics.setTotalVirtualCores(metrics.getTotalVirtualCores() + metricsResponse.getTotalVirtualCores());\r\n    metrics.setTotalNodes(metrics.getTotalNodes() + metricsResponse.getTotalNodes());\r\n    metrics.setLostNodes(metrics.getLostNodes() + metricsResponse.getLostNodes());\r\n    metrics.setUnhealthyNodes(metrics.getUnhealthyNodes() + metricsResponse.getUnhealthyNodes());\r\n    metrics.setDecommissioningNodes(metrics.getDecommissioningNodes() + metricsResponse.getDecommissioningNodes());\r\n    metrics.setDecommissionedNodes(metrics.getDecommissionedNodes() + metricsResponse.getDecommissionedNodes());\r\n    metrics.setRebootedNodes(metrics.getRebootedNodes() + metricsResponse.getRebootedNodes());\r\n    metrics.setActiveNodes(metrics.getActiveNodes() + metricsResponse.getActiveNodes());\r\n    metrics.setShutdownNodes(metrics.getShutdownNodes() + metricsResponse.getShutdownNodes());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getMediaTypeFromHttpServletRequest",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String getMediaTypeFromHttpServletRequest(HttpServletRequest request, final Class<T> returnType)\n{\r\n    if (request == null) {\r\n        return MediaType.APPLICATION_XML;\r\n    }\r\n    if (!returnType.equals(Response.class)) {\r\n        return MediaType.APPLICATION_XML;\r\n    }\r\n    String header = request.getHeader(HttpHeaders.ACCEPT);\r\n    if (header == null || header.equals(\"*\")) {\r\n        return MediaType.APPLICATION_JSON;\r\n    }\r\n    return header;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "render",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void render(Block html)\n{\r\n    html.div(\"#nav\").h3(\"Cluster\").ul().li().a(url(\"\"), \"About\").__().li().a(url(\"federation\"), \"Federation\").__().li().a(url(\"nodes\"), \"Nodes\").__().li().a(url(\"apps\"), \"Applications\").__().__().h3(\"Tools\").ul().li().a(\"/conf\", \"Configuration\").__().li().a(\"/logs\", \"Local logs\").__().li().a(\"/stacks\", \"Server stacks\").__().li().a(\"/jmx?qry=Hadoop:*\", \"Server metrics\").__().__().__();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "preHead",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void preHead(Page.HTML<__> html)\n{\r\n    commonPreHead(html);\r\n    setTitle(\"Federation\");\r\n    set(DATATABLES_ID, \"rms\");\r\n    set(initID(DATATABLES, \"rms\"), rmsTableInit());\r\n    setTableStyles(html, \"rms\", \".healthStatus {width:10em}\", \".healthReport {width:10em}\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "content",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> content()\n{\r\n    return FederationBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "rmsTableInit",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String rmsTableInit()\n{\r\n    StringBuilder b = tableInit().append(\", aoColumnDefs: [\");\r\n    b.append(\"{'bSearchable': false, 'aTargets': [ 7 ]}\").append(\", {'sType': 'title-numeric', 'bSearchable': false, \" + \"'aTargets': [ 8, 9 ] }\").append(\", {'sType': 'title-numeric', 'aTargets': [ 5 ]}\").append(\"]}\");\r\n    return b.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "merge",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "GetClusterMetricsResponse merge(Collection<GetClusterMetricsResponse> responses)\n{\r\n    YarnClusterMetrics tmp = YarnClusterMetrics.newInstance(0);\r\n    for (GetClusterMetricsResponse response : responses) {\r\n        YarnClusterMetrics metrics = response.getClusterMetrics();\r\n        tmp.setNumNodeManagers(tmp.getNumNodeManagers() + metrics.getNumNodeManagers());\r\n        tmp.setNumActiveNodeManagers(tmp.getNumActiveNodeManagers() + metrics.getNumActiveNodeManagers());\r\n        tmp.setNumDecommissionedNodeManagers(tmp.getNumDecommissionedNodeManagers() + metrics.getNumDecommissionedNodeManagers());\r\n        tmp.setNumLostNodeManagers(tmp.getNumLostNodeManagers() + metrics.getNumLostNodeManagers());\r\n        tmp.setNumRebootedNodeManagers(tmp.getNumRebootedNodeManagers() + metrics.getNumRebootedNodeManagers());\r\n        tmp.setNumUnhealthyNodeManagers(tmp.getNumUnhealthyNodeManagers() + metrics.getNumUnhealthyNodeManagers());\r\n    }\r\n    return GetClusterMetricsResponse.newInstance(tmp);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "mergeApplications",
  "errType" : null,
  "containingMethodsNum" : 17,
  "sourceCodeText" : "GetApplicationsResponse mergeApplications(Collection<GetApplicationsResponse> responses, boolean returnPartialResult)\n{\r\n    Map<ApplicationId, ApplicationReport> federationAM = new HashMap<>();\r\n    Map<ApplicationId, ApplicationReport> federationUAMSum = new HashMap<>();\r\n    for (GetApplicationsResponse appResponse : responses) {\r\n        for (ApplicationReport appReport : appResponse.getApplicationList()) {\r\n            ApplicationId appId = appReport.getApplicationId();\r\n            if (!appReport.isUnmanagedApp()) {\r\n                federationAM.put(appId, appReport);\r\n                if (federationUAMSum.containsKey(appId)) {\r\n                    mergeAMWithUAM(appReport, federationUAMSum.get(appId));\r\n                    federationUAMSum.remove(appId);\r\n                }\r\n            } else if (federationAM.containsKey(appId)) {\r\n                mergeAMWithUAM(federationAM.get(appId), appReport);\r\n            } else if (federationUAMSum.containsKey(appId)) {\r\n                ApplicationReport mergedUAMReport = mergeUAMWithUAM(federationUAMSum.get(appId), appReport);\r\n                federationUAMSum.put(appId, mergedUAMReport);\r\n            } else {\r\n                federationUAMSum.put(appId, appReport);\r\n            }\r\n        }\r\n    }\r\n    for (ApplicationReport appReport : federationUAMSum.values()) {\r\n        if (mergeUamToReport(appReport.getName(), returnPartialResult)) {\r\n            federationAM.put(appReport.getApplicationId(), appReport);\r\n        }\r\n    }\r\n    return GetApplicationsResponse.newInstance(federationAM.values());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "mergeUAMWithUAM",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ApplicationReport mergeUAMWithUAM(ApplicationReport uam1, ApplicationReport uam2)\n{\r\n    uam1.setName(PARTIAL_REPORT + uam1.getApplicationId());\r\n    mergeAMWithUAM(uam1, uam2);\r\n    return uam1;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "mergeAMWithUAM",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "void mergeAMWithUAM(ApplicationReport am, ApplicationReport uam)\n{\r\n    ApplicationResourceUsageReport amResourceReport = am.getApplicationResourceUsageReport();\r\n    ApplicationResourceUsageReport uamResourceReport = uam.getApplicationResourceUsageReport();\r\n    if (amResourceReport == null) {\r\n        am.setApplicationResourceUsageReport(uamResourceReport);\r\n    } else if (uamResourceReport != null) {\r\n        amResourceReport.setNumUsedContainers(amResourceReport.getNumUsedContainers() + uamResourceReport.getNumUsedContainers());\r\n        amResourceReport.setNumReservedContainers(amResourceReport.getNumReservedContainers() + uamResourceReport.getNumReservedContainers());\r\n        amResourceReport.setUsedResources(Resources.add(amResourceReport.getUsedResources(), uamResourceReport.getUsedResources()));\r\n        amResourceReport.setReservedResources(Resources.add(amResourceReport.getReservedResources(), uamResourceReport.getReservedResources()));\r\n        amResourceReport.setNeededResources(Resources.add(amResourceReport.getNeededResources(), uamResourceReport.getNeededResources()));\r\n        amResourceReport.setMemorySeconds(amResourceReport.getMemorySeconds() + uamResourceReport.getMemorySeconds());\r\n        amResourceReport.setVcoreSeconds(amResourceReport.getVcoreSeconds() + uamResourceReport.getVcoreSeconds());\r\n        amResourceReport.setQueueUsagePercentage(amResourceReport.getQueueUsagePercentage() + uamResourceReport.getQueueUsagePercentage());\r\n        amResourceReport.setClusterUsagePercentage(amResourceReport.getClusterUsagePercentage() + uamResourceReport.getClusterUsagePercentage());\r\n        am.setApplicationResourceUsageReport(amResourceReport);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "mergeUamToReport",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean mergeUamToReport(String appName, boolean returnPartialResult)\n{\r\n    if (returnPartialResult) {\r\n        return true;\r\n    }\r\n    if (appName == null) {\r\n        return false;\r\n    }\r\n    return !(appName.startsWith(UnmanagedApplicationManager.APP_NAME) || appName.startsWith(PARTIAL_REPORT));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(ClientRequestInterceptor nextInterceptor)\n{\r\n    this.nextInterceptor = nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setConf",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setConf(Configuration conf)\n{\r\n    this.conf = conf;\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.setConf(conf);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getConf",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Configuration getConf()\n{\r\n    return this.conf;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void init(String userName)\n{\r\n    setupUser(userName);\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.init(userName);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "shutdown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void shutdown()\n{\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.shutdown();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ClientRequestInterceptor getNextInterceptor()\n{\r\n    return this.nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setupUser",
  "errType" : [ "IOException" ],
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void setupUser(String userName)\n{\r\n    try {\r\n        if (userName.equalsIgnoreCase(UserGroupInformation.getCurrentUser().getUserName())) {\r\n            user = UserGroupInformation.getCurrentUser();\r\n        } else {\r\n            user = UserGroupInformation.createProxyUser(userName, UserGroupInformation.getCurrentUser());\r\n        }\r\n    } catch (IOException e) {\r\n        String message = \"Error while creating Router ClientRM Service for user:\";\r\n        if (user != null) {\r\n            message += \", user: \" + user;\r\n        }\r\n        LOG.info(message);\r\n        throw new YarnRuntimeException(message, e);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "init",
  "errType" : [ "FederationPolicyInitializationException" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void init(String user)\n{\r\n    federationFacade = FederationStateStoreFacade.getInstance();\r\n    rand = new Random();\r\n    final Configuration conf = this.getConf();\r\n    try {\r\n        SubClusterResolver subClusterResolver = this.federationFacade.getSubClusterResolver();\r\n        policyFacade = new RouterPolicyFacade(conf, federationFacade, subClusterResolver, null);\r\n    } catch (FederationPolicyInitializationException e) {\r\n        throw new YarnRuntimeException(e);\r\n    }\r\n    numSubmitRetries = conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\r\n    interceptors = new HashMap<>();\r\n    routerMetrics = RouterMetrics.getMetrics();\r\n    threadpool = HadoopExecutors.newCachedThreadPool(new ThreadFactoryBuilder().setNameFormat(\"FederationInterceptorREST #%d\").build());\r\n    returnPartialReport = conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED, YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getRandomActiveSubCluster",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "SubClusterId getRandomActiveSubCluster(Map<SubClusterId, SubClusterInfo> activeSubclusters, List<SubClusterId> blackListSubClusters) throws YarnException\n{\r\n    if (activeSubclusters == null || activeSubclusters.size() < 1) {\r\n        RouterServerUtil.logAndThrowException(FederationPolicyUtils.NO_ACTIVE_SUBCLUSTER_AVAILABLE, null);\r\n    }\r\n    List<SubClusterId> list = new ArrayList<>(activeSubclusters.keySet());\r\n    FederationPolicyUtils.validateSubClusterAvailability(list, blackListSubClusters);\r\n    if (blackListSubClusters != null) {\r\n        for (SubClusterId scId : blackListSubClusters) {\r\n            list.remove(scId);\r\n        }\r\n    }\r\n    return list.get(rand.nextInt(list.size()));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getInterceptorForSubCluster",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "DefaultRequestInterceptorREST getInterceptorForSubCluster(SubClusterId subClusterId)\n{\r\n    if (interceptors.containsKey(subClusterId)) {\r\n        return interceptors.get(subClusterId);\r\n    } else {\r\n        LOG.error(\"The interceptor for SubCluster {} does not exist in the cache.\", subClusterId);\r\n        return null;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createInterceptorForSubCluster",
  "errType" : [ "ClassNotFoundException" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "DefaultRequestInterceptorREST createInterceptorForSubCluster(SubClusterId subClusterId, String webAppAddress)\n{\r\n    final Configuration conf = this.getConf();\r\n    String interceptorClassName = conf.get(YarnConfiguration.ROUTER_WEBAPP_DEFAULT_INTERCEPTOR_CLASS, YarnConfiguration.DEFAULT_ROUTER_WEBAPP_DEFAULT_INTERCEPTOR_CLASS);\r\n    DefaultRequestInterceptorREST interceptorInstance = null;\r\n    try {\r\n        Class<?> interceptorClass = conf.getClassByName(interceptorClassName);\r\n        if (DefaultRequestInterceptorREST.class.isAssignableFrom(interceptorClass)) {\r\n            interceptorInstance = (DefaultRequestInterceptorREST) ReflectionUtils.newInstance(interceptorClass, conf);\r\n        } else {\r\n            throw new YarnRuntimeException(\"Class: \" + interceptorClassName + \" not instance of \" + DefaultRequestInterceptorREST.class.getCanonicalName());\r\n        }\r\n    } catch (ClassNotFoundException e) {\r\n        throw new YarnRuntimeException(\"Could not instantiate ApplicationMasterRequestInterceptor: \" + interceptorClassName, e);\r\n    }\r\n    interceptorInstance.setWebAppAddress(\"http://\" + webAppAddress);\r\n    interceptorInstance.setSubClusterId(subClusterId);\r\n    interceptors.put(subClusterId, interceptorInstance);\r\n    return interceptorInstance;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getOrCreateInterceptorForSubCluster",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "DefaultRequestInterceptorREST getOrCreateInterceptorForSubCluster(SubClusterId subClusterId, String webAppAddress)\n{\r\n    DefaultRequestInterceptorREST interceptor = getInterceptorForSubCluster(subClusterId);\r\n    String webAppAddresswithScheme = WebAppUtils.getHttpSchemePrefix(this.getConf()) + webAppAddress;\r\n    if (interceptor == null || !webAppAddresswithScheme.equals(interceptor.getWebAppAddress())) {\r\n        interceptor = createInterceptorForSubCluster(subClusterId, webAppAddress);\r\n    }\r\n    return interceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewApplication",
  "errType" : [ "YarnException", "YarnException", "Exception" ],
  "containingMethodsNum" : 18,
  "sourceCodeText" : "Response createNewApplication(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    long startTime = clock.getTime();\r\n    Map<SubClusterId, SubClusterInfo> subClustersActive;\r\n    try {\r\n        subClustersActive = federationFacade.getSubClusters(true);\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppsFailedCreated();\r\n        return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e.getLocalizedMessage()).build();\r\n    }\r\n    List<SubClusterId> blacklist = new ArrayList<SubClusterId>();\r\n    for (int i = 0; i < numSubmitRetries; ++i) {\r\n        SubClusterId subClusterId;\r\n        try {\r\n            subClusterId = getRandomActiveSubCluster(subClustersActive, blacklist);\r\n        } catch (YarnException e) {\r\n            routerMetrics.incrAppsFailedCreated();\r\n            return Response.status(Status.SERVICE_UNAVAILABLE).entity(e.getLocalizedMessage()).build();\r\n        }\r\n        LOG.debug(\"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\r\n        DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(subClusterId, subClustersActive.get(subClusterId).getRMWebServiceAddress());\r\n        Response response = null;\r\n        try {\r\n            response = interceptor.createNewApplication(hsr);\r\n        } catch (Exception e) {\r\n            LOG.warn(\"Unable to create a new ApplicationId in SubCluster {}\", subClusterId.getId(), e);\r\n        }\r\n        if (response != null && response.getStatus() == HttpServletResponse.SC_OK) {\r\n            long stopTime = clock.getTime();\r\n            routerMetrics.succeededAppsCreated(stopTime - startTime);\r\n            return response;\r\n        } else {\r\n            blacklist.add(subClusterId);\r\n        }\r\n    }\r\n    String errMsg = \"Fail to create a new application.\";\r\n    LOG.error(errMsg);\r\n    routerMetrics.incrAppsFailedCreated();\r\n    return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 3,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitApplication",
  "errType" : [ "IllegalArgumentException", "YarnException", "YarnException", "YarnException", "YarnException", "YarnException", "Exception" ],
  "containingMethodsNum" : 37,
  "sourceCodeText" : "Response submitApplication(ApplicationSubmissionContextInfo newApp, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    long startTime = clock.getTime();\r\n    if (newApp == null || newApp.getApplicationId() == null) {\r\n        routerMetrics.incrAppsFailedSubmitted();\r\n        String errMsg = \"Missing ApplicationSubmissionContextInfo or \" + \"applicationSubmissionContex information.\";\r\n        return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\r\n    }\r\n    ApplicationId applicationId = null;\r\n    try {\r\n        applicationId = ApplicationId.fromString(newApp.getApplicationId());\r\n    } catch (IllegalArgumentException e) {\r\n        routerMetrics.incrAppsFailedSubmitted();\r\n        return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage()).build();\r\n    }\r\n    List<SubClusterId> blacklist = new ArrayList<SubClusterId>();\r\n    for (int i = 0; i < numSubmitRetries; ++i) {\r\n        ApplicationSubmissionContext context = RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\r\n        SubClusterId subClusterId = null;\r\n        try {\r\n            subClusterId = policyFacade.getHomeSubcluster(context, blacklist);\r\n        } catch (YarnException e) {\r\n            routerMetrics.incrAppsFailedSubmitted();\r\n            return Response.status(Status.SERVICE_UNAVAILABLE).entity(e.getLocalizedMessage()).build();\r\n        }\r\n        LOG.info(\"submitApplication appId {} try #{} on SubCluster {}\", applicationId, i, subClusterId);\r\n        ApplicationHomeSubCluster appHomeSubCluster = ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\r\n        if (i == 0) {\r\n            try {\r\n                subClusterId = federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\r\n            } catch (YarnException e) {\r\n                routerMetrics.incrAppsFailedSubmitted();\r\n                String errMsg = \"Unable to insert the ApplicationId \" + applicationId + \" into the FederationStateStore\";\r\n                return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg + \" \" + e.getLocalizedMessage()).build();\r\n            }\r\n        } else {\r\n            try {\r\n                federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\r\n            } catch (YarnException e) {\r\n                String errMsg = \"Unable to update the ApplicationId \" + applicationId + \" into the FederationStateStore\";\r\n                SubClusterId subClusterIdInStateStore;\r\n                try {\r\n                    subClusterIdInStateStore = federationFacade.getApplicationHomeSubCluster(applicationId);\r\n                } catch (YarnException e1) {\r\n                    routerMetrics.incrAppsFailedSubmitted();\r\n                    return Response.status(Status.SERVICE_UNAVAILABLE).entity(e1.getLocalizedMessage()).build();\r\n                }\r\n                if (subClusterId == subClusterIdInStateStore) {\r\n                    LOG.info(\"Application {} already submitted on SubCluster {}\", applicationId, subClusterId);\r\n                } else {\r\n                    routerMetrics.incrAppsFailedSubmitted();\r\n                    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\r\n                }\r\n            }\r\n        }\r\n        SubClusterInfo subClusterInfo;\r\n        try {\r\n            subClusterInfo = federationFacade.getSubCluster(subClusterId);\r\n        } catch (YarnException e) {\r\n            routerMetrics.incrAppsFailedSubmitted();\r\n            return Response.status(Status.SERVICE_UNAVAILABLE).entity(e.getLocalizedMessage()).build();\r\n        }\r\n        Response response = null;\r\n        try {\r\n            response = getOrCreateInterceptorForSubCluster(subClusterId, subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp, hsr);\r\n        } catch (Exception e) {\r\n            LOG.warn(\"Unable to submit the application {} to SubCluster {}\", applicationId, subClusterId.getId(), e);\r\n        }\r\n        if (response != null && response.getStatus() == HttpServletResponse.SC_ACCEPTED) {\r\n            LOG.info(\"Application {} with appId {} submitted on {}\", context.getApplicationName(), applicationId, subClusterId);\r\n            long stopTime = clock.getTime();\r\n            routerMetrics.succeededAppsSubmitted(stopTime - startTime);\r\n            return response;\r\n        } else {\r\n            blacklist.add(subClusterId);\r\n        }\r\n    }\r\n    routerMetrics.incrAppsFailedSubmitted();\r\n    String errMsg = \"Application \" + newApp.getApplicationName() + \" with appId \" + applicationId + \" failed to be submitted.\";\r\n    LOG.error(errMsg);\r\n    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 7,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApp",
  "errType" : [ "IllegalArgumentException", "YarnException" ],
  "containingMethodsNum" : 11,
  "sourceCodeText" : "AppInfo getApp(HttpServletRequest hsr, String appId, Set<String> unselectedFields)\n{\r\n    long startTime = clock.getTime();\r\n    ApplicationId applicationId = null;\r\n    try {\r\n        applicationId = ApplicationId.fromString(appId);\r\n    } catch (IllegalArgumentException e) {\r\n        routerMetrics.incrAppsFailedRetrieved();\r\n        return null;\r\n    }\r\n    SubClusterInfo subClusterInfo = null;\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(applicationId);\r\n        if (subClusterId == null) {\r\n            routerMetrics.incrAppsFailedRetrieved();\r\n            return null;\r\n        }\r\n        subClusterInfo = federationFacade.getSubCluster(subClusterId);\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppsFailedRetrieved();\r\n        return null;\r\n    }\r\n    DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(subClusterId, subClusterInfo.getRMWebServiceAddress());\r\n    AppInfo response = interceptor.getApp(hsr, appId, unselectedFields);\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 2,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppState",
  "errType" : [ "IllegalArgumentException", "YarnException" ],
  "containingMethodsNum" : 11,
  "sourceCodeText" : "Response updateAppState(AppState targetState, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    ApplicationId applicationId = null;\r\n    try {\r\n        applicationId = ApplicationId.fromString(appId);\r\n    } catch (IllegalArgumentException e) {\r\n        routerMetrics.incrAppsFailedKilled();\r\n        return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage()).build();\r\n    }\r\n    SubClusterInfo subClusterInfo = null;\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(applicationId);\r\n        subClusterInfo = federationFacade.getSubCluster(subClusterId);\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppsFailedKilled();\r\n        return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage()).build();\r\n    }\r\n    Response response = getOrCreateInterceptorForSubCluster(subClusterId, subClusterInfo.getRMWebServiceAddress()).updateAppState(targetState, hsr, appId);\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 2,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApps",
  "errType" : [ "YarnException", "Throwable" ],
  "containingMethodsNum" : 16,
  "sourceCodeText" : "AppsInfo getApps(HttpServletRequest hsr, String stateQuery, Set<String> statesQuery, String finalStatusQuery, String userQuery, String queueQuery, String count, String startedBegin, String startedEnd, String finishBegin, String finishEnd, Set<String> applicationTypes, Set<String> applicationTags, String name, Set<String> unselectedFields)\n{\r\n    AppsInfo apps = new AppsInfo();\r\n    long startTime = clock.getTime();\r\n    Map<SubClusterId, SubClusterInfo> subClustersActive = null;\r\n    try {\r\n        subClustersActive = federationFacade.getSubClusters(true);\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrMultipleAppsFailedRetrieved();\r\n        return null;\r\n    }\r\n    CompletionService<AppsInfo> compSvc = new ExecutorCompletionService<>(this.threadpool);\r\n    final HttpServletRequest hsrCopy = clone(hsr);\r\n    for (final SubClusterInfo info : subClustersActive.values()) {\r\n        compSvc.submit(new Callable<AppsInfo>() {\r\n\r\n            @Override\r\n            public AppsInfo call() {\r\n                DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(info.getSubClusterId(), info.getRMWebServiceAddress());\r\n                AppsInfo rmApps = interceptor.getApps(hsrCopy, stateQuery, statesQuery, finalStatusQuery, userQuery, queueQuery, count, startedBegin, startedEnd, finishBegin, finishEnd, applicationTypes, applicationTags, name, unselectedFields);\r\n                if (rmApps == null) {\r\n                    routerMetrics.incrMultipleAppsFailedRetrieved();\r\n                    LOG.error(\"Subcluster {} failed to return appReport.\", info.getSubClusterId());\r\n                    return null;\r\n                }\r\n                return rmApps;\r\n            }\r\n        });\r\n    }\r\n    for (int i = 0; i < subClustersActive.size(); i++) {\r\n        try {\r\n            Future<AppsInfo> future = compSvc.take();\r\n            AppsInfo appsResponse = future.get();\r\n            long stopTime = clock.getTime();\r\n            routerMetrics.succeededMultipleAppsRetrieved(stopTime - startTime);\r\n            if (appsResponse != null) {\r\n                apps.addAll(appsResponse.getApps());\r\n            }\r\n        } catch (Throwable e) {\r\n            routerMetrics.incrMultipleAppsFailedRetrieved();\r\n            LOG.warn(\"Failed to get application report\", e);\r\n        }\r\n    }\r\n    if (apps.getApps().isEmpty()) {\r\n        return null;\r\n    }\r\n    return RouterWebServiceUtil.mergeAppsInfo(apps.getApps(), returnPartialReport);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "clone",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "HttpServletRequestWrapper clone(final HttpServletRequest hsr)\n{\r\n    if (hsr == null) {\r\n        return null;\r\n    }\r\n    @SuppressWarnings(\"unchecked\")\r\n    final Map<String, String[]> parameterMap = (Map<String, String[]>) hsr.getParameterMap();\r\n    final String pathInfo = hsr.getPathInfo();\r\n    final String user = hsr.getRemoteUser();\r\n    final Principal principal = hsr.getUserPrincipal();\r\n    final String mediaType = RouterWebServiceUtil.getMediaTypeFromHttpServletRequest(hsr, AppsInfo.class);\r\n    return new HttpServletRequestWrapper(hsr) {\r\n\r\n        public Map<String, String[]> getParameterMap() {\r\n            return parameterMap;\r\n        }\r\n\r\n        public String getPathInfo() {\r\n            return pathInfo;\r\n        }\r\n\r\n        public String getRemoteUser() {\r\n            return user;\r\n        }\r\n\r\n        public Principal getUserPrincipal() {\r\n            return principal;\r\n        }\r\n\r\n        public String getHeader(String value) {\r\n            if (value.equals(HttpHeaders.ACCEPT)) {\r\n                return mediaType;\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getActiveSubclusters",
  "errType" : [ "YarnException" ],
  "containingMethodsNum" : 2,
  "sourceCodeText" : "Map<SubClusterId, SubClusterInfo> getActiveSubclusters() throws NotFoundException\n{\r\n    try {\r\n        return federationFacade.getSubClusters(true);\r\n    } catch (YarnException e) {\r\n        throw new NotFoundException(e.getMessage());\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNode",
  "errType" : [ "Throwable" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "NodeInfo getNode(String nodeId)\n{\r\n    final Map<SubClusterId, SubClusterInfo> subClustersActive = getActiveSubclusters();\r\n    if (subClustersActive.isEmpty()) {\r\n        throw new NotFoundException(FederationPolicyUtils.NO_ACTIVE_SUBCLUSTER_AVAILABLE);\r\n    }\r\n    final Map<SubClusterInfo, NodeInfo> results = getNode(subClustersActive.values(), nodeId);\r\n    NodeInfo nodeInfo = null;\r\n    for (NodeInfo nodeResponse : results.values()) {\r\n        try {\r\n            if (nodeInfo == null || nodeInfo.getLastHealthUpdate() < nodeResponse.getLastHealthUpdate()) {\r\n                nodeInfo = nodeResponse;\r\n            }\r\n        } catch (Throwable e) {\r\n            LOG.warn(\"Failed to get node report \", e);\r\n        }\r\n    }\r\n    if (nodeInfo == null) {\r\n        throw new NotFoundException(\"nodeId, \" + nodeId + \", is not found\");\r\n    }\r\n    return nodeInfo;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNode",
  "errType" : [ "Exception", "Throwable" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "Map<SubClusterInfo, NodeInfo> getNode(Collection<SubClusterInfo> subClusters, String nodeId)\n{\r\n    CompletionService<NodeInfo> compSvc = new ExecutorCompletionService<NodeInfo>(this.threadpool);\r\n    final Map<SubClusterInfo, Future<NodeInfo>> futures = new HashMap<>();\r\n    for (final SubClusterInfo subcluster : subClusters) {\r\n        final SubClusterId subclusterId = subcluster.getSubClusterId();\r\n        Future<NodeInfo> result = compSvc.submit(() -> {\r\n            try {\r\n                DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(subclusterId, subcluster.getRMWebServiceAddress());\r\n                return interceptor.getNode(nodeId);\r\n            } catch (Exception e) {\r\n                LOG.error(\"Subcluster {} failed to return nodeInfo.\", subclusterId);\r\n                return null;\r\n            }\r\n        });\r\n        futures.put(subcluster, result);\r\n    }\r\n    final Map<SubClusterInfo, NodeInfo> results = new HashMap<>();\r\n    for (Entry<SubClusterInfo, Future<NodeInfo>> entry : futures.entrySet()) {\r\n        try {\r\n            final Future<NodeInfo> future = entry.getValue();\r\n            final NodeInfo nodeInfo = future.get();\r\n            if (nodeInfo != null) {\r\n                SubClusterInfo subcluster = entry.getKey();\r\n                results.put(subcluster, nodeInfo);\r\n            }\r\n        } catch (Throwable e) {\r\n            LOG.warn(\"Failed to get node report \", e);\r\n        }\r\n    }\r\n    return results;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodeSubcluster",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "SubClusterInfo getNodeSubcluster(String nodeId) throws NotFoundException\n{\r\n    final Collection<SubClusterInfo> subClusters = getActiveSubclusters().values();\r\n    final Map<SubClusterInfo, NodeInfo> results = getNode(subClusters, nodeId);\r\n    SubClusterInfo subcluster = null;\r\n    NodeInfo nodeInfo = null;\r\n    for (Entry<SubClusterInfo, NodeInfo> entry : results.entrySet()) {\r\n        NodeInfo nodeResponse = entry.getValue();\r\n        if (nodeInfo == null || nodeInfo.getLastHealthUpdate() < nodeResponse.getLastHealthUpdate()) {\r\n            subcluster = entry.getKey();\r\n            nodeInfo = nodeResponse;\r\n        }\r\n    }\r\n    if (subcluster == null) {\r\n        throw new NotFoundException(\"Cannot find \" + nodeId + \" in any subcluster\");\r\n    }\r\n    return subcluster;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodes",
  "errType" : [ "Exception", "Exception", "Throwable" ],
  "containingMethodsNum" : 10,
  "sourceCodeText" : "NodesInfo getNodes(String states)\n{\r\n    NodesInfo nodes = new NodesInfo();\r\n    final Map<SubClusterId, SubClusterInfo> subClustersActive;\r\n    try {\r\n        subClustersActive = getActiveSubclusters();\r\n    } catch (Exception e) {\r\n        LOG.error(\"Cannot get nodes: {}\", e.getMessage());\r\n        return new NodesInfo();\r\n    }\r\n    CompletionService<NodesInfo> compSvc = new ExecutorCompletionService<NodesInfo>(this.threadpool);\r\n    for (final SubClusterInfo info : subClustersActive.values()) {\r\n        compSvc.submit(new Callable<NodesInfo>() {\r\n\r\n            @Override\r\n            public NodesInfo call() {\r\n                DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(info.getSubClusterId(), info.getRMWebServiceAddress());\r\n                try {\r\n                    NodesInfo nodesInfo = interceptor.getNodes(states);\r\n                    return nodesInfo;\r\n                } catch (Exception e) {\r\n                    LOG.error(\"Subcluster {} failed to return nodesInfo.\", info.getSubClusterId());\r\n                    return null;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    for (int i = 0; i < subClustersActive.size(); i++) {\r\n        try {\r\n            Future<NodesInfo> future = compSvc.take();\r\n            NodesInfo nodesResponse = future.get();\r\n            if (nodesResponse != null) {\r\n                nodes.addAll(nodesResponse.getNodes());\r\n            }\r\n        } catch (Throwable e) {\r\n            LOG.warn(\"Failed to get nodes report \", e);\r\n        }\r\n    }\r\n    return RouterWebServiceUtil.deleteDuplicateNodesInfo(nodes.getNodes());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 3,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateNodeResource",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ResourceInfo updateNodeResource(HttpServletRequest hsr, String nodeId, ResourceOptionInfo resourceOption)\n{\r\n    SubClusterInfo subcluster = getNodeSubcluster(nodeId);\r\n    DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(subcluster.getSubClusterId(), subcluster.getRMWebServiceAddress());\r\n    return interceptor.updateNodeResource(hsr, nodeId, resourceOption);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterMetricsInfo",
  "errType" : [ "Exception", "Exception", "Throwable" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "ClusterMetricsInfo getClusterMetricsInfo()\n{\r\n    ClusterMetricsInfo metrics = new ClusterMetricsInfo();\r\n    final Map<SubClusterId, SubClusterInfo> subClustersActive;\r\n    try {\r\n        subClustersActive = getActiveSubclusters();\r\n    } catch (Exception e) {\r\n        LOG.error(e.getLocalizedMessage());\r\n        return metrics;\r\n    }\r\n    CompletionService<ClusterMetricsInfo> compSvc = new ExecutorCompletionService<ClusterMetricsInfo>(this.threadpool);\r\n    for (final SubClusterInfo info : subClustersActive.values()) {\r\n        compSvc.submit(new Callable<ClusterMetricsInfo>() {\r\n\r\n            @Override\r\n            public ClusterMetricsInfo call() {\r\n                DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(info.getSubClusterId(), info.getRMWebServiceAddress());\r\n                try {\r\n                    ClusterMetricsInfo metrics = interceptor.getClusterMetricsInfo();\r\n                    return metrics;\r\n                } catch (Exception e) {\r\n                    LOG.error(\"Subcluster {} failed to return Cluster Metrics.\", info.getSubClusterId());\r\n                    return null;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    for (int i = 0; i < subClustersActive.size(); i++) {\r\n        try {\r\n            Future<ClusterMetricsInfo> future = compSvc.take();\r\n            ClusterMetricsInfo metricsResponse = future.get();\r\n            if (metricsResponse != null) {\r\n                RouterWebServiceUtil.mergeMetrics(metrics, metricsResponse);\r\n            }\r\n        } catch (Throwable e) {\r\n            LOG.warn(\"Failed to get nodes report \", e);\r\n        }\r\n    }\r\n    return metrics;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 3,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppState",
  "errType" : [ "IllegalArgumentException", "YarnException" ],
  "containingMethodsNum" : 5,
  "sourceCodeText" : "AppState getAppState(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    ApplicationId applicationId = null;\r\n    try {\r\n        applicationId = ApplicationId.fromString(appId);\r\n    } catch (IllegalArgumentException e) {\r\n        return null;\r\n    }\r\n    SubClusterInfo subClusterInfo = null;\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(applicationId);\r\n        if (subClusterId == null) {\r\n            return null;\r\n        }\r\n        subClusterInfo = federationFacade.getSubCluster(subClusterId);\r\n    } catch (YarnException e) {\r\n        return null;\r\n    }\r\n    DefaultRequestInterceptorREST interceptor = getOrCreateInterceptorForSubCluster(subClusterId, subClusterInfo.getRMWebServiceAddress());\r\n    return interceptor.getAppState(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 2,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "get",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterInfo get()\n{\r\n    return getClusterInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ClusterInfo getClusterInfo()\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterUserInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ClusterUserInfo getClusterUserInfo(HttpServletRequest hsr)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getSchedulerInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SchedulerTypeInfo getSchedulerInfo()\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "dumpSchedulerLogs",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String dumpSchedulerLogs(String time, HttpServletRequest hsr) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getActivities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ActivitiesInfo getActivities(HttpServletRequest hsr, String nodeId, String groupBy)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getBulkActivities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "BulkActivitiesInfo getBulkActivities(HttpServletRequest hsr, String groupBy, int activitiesCount) throws InterruptedException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppActivities",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppActivitiesInfo getAppActivities(HttpServletRequest hsr, String appId, String time, Set<String> requestPriorities, Set<String> allocationRequestIds, String groupBy, String limit, Set<String> actions, boolean summarize)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppStatistics",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ApplicationStatisticsInfo getAppStatistics(HttpServletRequest hsr, Set<String> stateQueries, Set<String> typeQueries)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeToLabelsInfo getNodeToLabels(HttpServletRequest hsr) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "LabelsToNodesInfo getLabelsToNodes(Set<String> labels) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response replaceLabelsOnNodes(NodeToLabelsEntryList newNodeToLabels, HttpServletRequest hsr) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response replaceLabelsOnNode(Set<String> newNodeLabelsName, HttpServletRequest hsr, String nodeId) throws Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeLabelsInfo getClusterNodeLabels(HttpServletRequest hsr) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "addToClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response addToClusterNodeLabels(NodeLabelsInfo newNodeLabels, HttpServletRequest hsr) throws Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "removeFromClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response removeFromClusterNodeLabels(Set<String> oldNodeLabels, HttpServletRequest hsr) throws Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "NodeLabelsInfo getLabelsOnNode(HttpServletRequest hsr, String nodeId) throws IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppPriority getAppPriority(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response updateApplicationPriority(AppPriority targetPriority, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppQueue getAppQueue(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response updateAppQueue(AppQueue targetQueue, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response postDelegationToken(DelegationToken tokenData, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationTokenExpiration",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response postDelegationTokenExpiration(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response cancelDelegationToken(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response createNewReservation(HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response submitReservation(ReservationSubmissionRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response updateReservation(ReservationUpdateRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response deleteReservation(ReservationDeleteRequestInfo resContext, HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "listReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response listReservation(String queue, String reservationId, long startTime, long endTime, boolean includeResourceAllocations, HttpServletRequest hsr) throws Exception\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppTimeoutInfo getAppTimeout(HttpServletRequest hsr, String appId, String type) throws AuthorizationException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppTimeoutsInfo getAppTimeouts(HttpServletRequest hsr, String appId) throws AuthorizationException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response updateApplicationTimeout(AppTimeoutInfo appTimeout, HttpServletRequest hsr, String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppAttemptsInfo getAppAttempts(HttpServletRequest hsr, String appId)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "checkUserAccessToQueue",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RMQueueAclInfo checkUserAccessToQueue(String queue, String username, String queueAclType, HttpServletRequest hsr)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempt",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AppAttemptInfo getAppAttempt(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainersInfo getContainers(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ContainerInfo getContainer(HttpServletRequest req, HttpServletResponse res, String appId, String appAttemptId, String containerId)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(RESTRequestInterceptor next)\n{\r\n    throw new YarnRuntimeException(\"setNextInterceptor is being called on \" + \"FederationInterceptorREST, which should be the last one \" + \"in the chain. Check if the interceptor pipeline configuration \" + \"is correct\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Response signalToContainer(String containerId, String command, HttpServletRequest req)\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "shutdown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void shutdown()\n{\r\n    if (threadpool != null) {\r\n        threadpool.shutdown();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "render",
  "errType" : [ "YarnException" ],
  "containingMethodsNum" : 17,
  "sourceCodeText" : "void render(Block html)\n{\r\n    Configuration conf = this.router.getConfig();\r\n    boolean isEnabled = conf.getBoolean(YarnConfiguration.FEDERATION_ENABLED, YarnConfiguration.DEFAULT_FEDERATION_ENABLED);\r\n    if (isEnabled) {\r\n        setTitle(\"Federation\");\r\n        TBODY<TABLE<Hamlet>> tbody = html.table(\"#rms\").thead().tr().th(\".id\", \"SubCluster\").th(\".submittedA\", \"Applications Submitted*\").th(\".pendingA\", \"Applications Pending*\").th(\".runningA\", \"Applications Running*\").th(\".failedA\", \"Applications Failed*\").th(\".killedA\", \"Applications Killed*\").th(\".completedA\", \"Applications Completed*\").th(\".contAllocated\", \"Containers Allocated\").th(\".contReserved\", \"Containers Reserved\").th(\".contPending\", \"Containers Pending\").th(\".availableM\", \"Available Memory\").th(\".allocatedM\", \"Allocated Memory\").th(\".reservedM\", \"Reserved Memory\").th(\".totalM\", \"Total Memory\").th(\".availableVC\", \"Available VirtualCores\").th(\".allocatedVC\", \"Allocated VirtualCores\").th(\".reservedVC\", \"Reserved VirtualCores\").th(\".totalVC\", \"Total VirtualCores\").th(\".activeN\", \"Active Nodes\").th(\".lostN\", \"Lost Nodes\").th(\".availableN\", \"Available Nodes\").th(\".unhealtyN\", \"Unhealthy Nodes\").th(\".rebootedN\", \"Rebooted Nodes\").th(\".totalN\", \"Total Nodes\").__().__().tbody();\r\n        try {\r\n            FederationStateStoreFacade facade = FederationStateStoreFacade.getInstance();\r\n            Map<SubClusterId, SubClusterInfo> subClustersInfo = facade.getSubClusters(true);\r\n            List<SubClusterInfo> subclusters = new ArrayList<>();\r\n            subclusters.addAll(subClustersInfo.values());\r\n            Comparator<? super SubClusterInfo> cmp = new Comparator<SubClusterInfo>() {\r\n\r\n                @Override\r\n                public int compare(SubClusterInfo o1, SubClusterInfo o2) {\r\n                    return o1.getSubClusterId().compareTo(o2.getSubClusterId());\r\n                }\r\n            };\r\n            Collections.sort(subclusters, cmp);\r\n            for (SubClusterInfo subcluster : subclusters) {\r\n                SubClusterId subClusterId = subcluster.getSubClusterId();\r\n                String webAppAddress = subcluster.getRMWebServiceAddress();\r\n                String capability = subcluster.getCapability();\r\n                ClusterMetricsInfo subClusterInfo = getClusterMetricsInfo(capability);\r\n                tbody.tr().td().a(\"//\" + webAppAddress, subClusterId.toString()).__().td(Integer.toString(subClusterInfo.getAppsSubmitted())).td(Integer.toString(subClusterInfo.getAppsPending())).td(Integer.toString(subClusterInfo.getAppsRunning())).td(Integer.toString(subClusterInfo.getAppsFailed())).td(Integer.toString(subClusterInfo.getAppsKilled())).td(Integer.toString(subClusterInfo.getAppsCompleted())).td(Integer.toString(subClusterInfo.getContainersAllocated())).td(Integer.toString(subClusterInfo.getReservedContainers())).td(Integer.toString(subClusterInfo.getPendingContainers())).td(StringUtils.byteDesc(subClusterInfo.getAvailableMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(subClusterInfo.getAllocatedMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(subClusterInfo.getReservedMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(subClusterInfo.getTotalMB() * BYTES_IN_MB)).td(Long.toString(subClusterInfo.getAvailableVirtualCores())).td(Long.toString(subClusterInfo.getAllocatedVirtualCores())).td(Long.toString(subClusterInfo.getReservedVirtualCores())).td(Long.toString(subClusterInfo.getTotalVirtualCores())).td(Integer.toString(subClusterInfo.getActiveNodes())).td(Integer.toString(subClusterInfo.getLostNodes())).td(Integer.toString(subClusterInfo.getDecommissionedNodes())).td(Integer.toString(subClusterInfo.getUnhealthyNodes())).td(Integer.toString(subClusterInfo.getRebootedNodes())).td(Integer.toString(subClusterInfo.getTotalNodes())).__();\r\n            }\r\n        } catch (YarnException e) {\r\n            LOG.error(\"Cannot render ResourceManager\", e);\r\n        }\r\n        tbody.__().__().div().p().__(\"*The application counts are local per subcluster\").__().__();\r\n    } else {\r\n        setTitle(\"Federation is not Enabled!\");\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterMetricsInfo",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 4,
  "sourceCodeText" : "ClusterMetricsInfo getClusterMetricsInfo(String capability)\n{\r\n    ClusterMetricsInfo clusterMetrics = null;\r\n    try {\r\n        JSONJAXBContext jc = new JSONJAXBContext(JSONConfiguration.mapped().rootUnwrapping(false).build(), ClusterMetricsInfo.class);\r\n        JSONUnmarshaller unmarshaller = jc.createJSONUnmarshaller();\r\n        clusterMetrics = unmarshaller.unmarshalFromJSON(new StringReader(capability), ClusterMetricsInfo.class);\r\n    } catch (Exception e) {\r\n        LOG.error(\"Cannot parse SubCluster info\", e);\r\n    }\r\n    return clusterMetrics;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setup",
  "errType" : null,
  "containingMethodsNum" : 11,
  "sourceCodeText" : "void setup()\n{\r\n    bind(JAXBContextResolver.class);\r\n    bind(RouterWebServices.class);\r\n    bind(GenericExceptionHandler.class);\r\n    bind(RouterWebApp.class).toInstance(this);\r\n    if (router != null) {\r\n        bind(Router.class).toInstance(router);\r\n    }\r\n    route(\"/\", RouterController.class);\r\n    route(\"/cluster\", RouterController.class, \"about\");\r\n    route(\"/about\", RouterController.class, \"about\");\r\n    route(\"/apps\", RouterController.class, \"apps\");\r\n    route(\"/nodes\", RouterController.class, \"nodes\");\r\n    route(\"/federation\", RouterController.class, \"federation\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "render",
  "errType" : null,
  "containingMethodsNum" : 19,
  "sourceCodeText" : "void render(Block html)\n{\r\n    Configuration conf = this.router.getConfig();\r\n    Client client = RouterWebServiceUtil.createJerseyClient(conf);\r\n    String webAppAddress = WebAppUtils.getRouterWebAppURLWithScheme(conf);\r\n    NodesInfo nodes = RouterWebServiceUtil.genericForward(webAppAddress, null, NodesInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.NODES, null, null, conf, client);\r\n    setTitle(\"Nodes\");\r\n    TBODY<TABLE<Hamlet>> tbody = html.table(\"#nodes\").thead().tr().th(\".nodelabels\", \"Node Labels\").th(\".rack\", \"Rack\").th(\".state\", \"Node State\").th(\".nodeaddress\", \"Node Address\").th(\".nodehttpaddress\", \"Node HTTP Address\").th(\".lastHealthUpdate\", \"Last health-update\").th(\".healthReport\", \"Health-report\").th(\".containers\", \"Containers\").th(\".mem\", \"Mem Used\").th(\".mem\", \"Mem Avail\").th(\".vcores\", \"VCores Used\").th(\".vcores\", \"VCores Avail\").th(\".nodeManagerVersion\", \"Version\").__().__().tbody();\r\n    for (NodeInfo info : nodes.getNodes()) {\r\n        int usedMemory = (int) info.getUsedMemory();\r\n        int availableMemory = (int) info.getAvailableMemory();\r\n        TR<TBODY<TABLE<Hamlet>>> row = tbody.tr();\r\n        row.td().__(StringUtils.join(\",\", info.getNodeLabels())).__();\r\n        row.td().__(info.getRack()).__();\r\n        row.td().__(info.getState()).__();\r\n        row.td().__(info.getNodeId()).__();\r\n        boolean isInactive = false;\r\n        if (isInactive) {\r\n            row.td().__(\"N/A\").__();\r\n        } else {\r\n            String httpAddress = info.getNodeHTTPAddress();\r\n            row.td().a(\"//\" + httpAddress, httpAddress).__();\r\n        }\r\n        row.td().br().$title(String.valueOf(info.getLastHealthUpdate())).__().__(Times.format(info.getLastHealthUpdate())).__().td(info.getHealthReport()).td(String.valueOf(info.getNumContainers())).td().br().$title(String.valueOf(usedMemory)).__().__(StringUtils.byteDesc(usedMemory * BYTES_IN_MB)).__().td().br().$title(String.valueOf(availableMemory)).__().__(StringUtils.byteDesc(availableMemory * BYTES_IN_MB)).__().td(String.valueOf(info.getUsedVirtualCores())).td(String.valueOf(info.getAvailableVirtualCores())).td(info.getVersion()).__();\r\n    }\r\n    tbody.__().__();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "init",
  "errType" : [ "IOException", "Exception" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void init(String userName)\n{\r\n    super.init(userName);\r\n    try {\r\n        if (userName.equalsIgnoreCase(UserGroupInformation.getCurrentUser().getUserName())) {\r\n            user = UserGroupInformation.getCurrentUser();\r\n        } else {\r\n            user = UserGroupInformation.createProxyUser(userName, UserGroupInformation.getCurrentUser());\r\n        }\r\n        final Configuration conf = this.getConf();\r\n        rmAdminProxy = user.doAs(new PrivilegedExceptionAction<ResourceManagerAdministrationProtocol>() {\r\n\r\n            @Override\r\n            public ResourceManagerAdministrationProtocol run() throws Exception {\r\n                return ClientRMProxy.createRMProxy(conf, ResourceManagerAdministrationProtocol.class);\r\n            }\r\n        });\r\n    } catch (IOException e) {\r\n        String message = \"Error while creating Router RMAdmin Service for user:\";\r\n        if (user != null) {\r\n            message += \", user: \" + user;\r\n        }\r\n        LOG.info(message);\r\n        throw new YarnRuntimeException(message, e);\r\n    } catch (Exception e) {\r\n        throw new YarnRuntimeException(e);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(RMAdminRequestInterceptor next)\n{\r\n    throw new YarnRuntimeException(\"setNextInterceptor is being called on \" + \"DefaultRMAdminRequestInterceptor, which should be the last one \" + \"in the chain. Check if the interceptor pipeline configuration \" + \"is correct\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "setRMAdmin",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRMAdmin(ResourceManagerAdministrationProtocol rmAdmin)\n{\r\n    this.rmAdminProxy = rmAdmin;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshQueues",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshQueuesResponse refreshQueues(RefreshQueuesRequest request) throws StandbyException, YarnException, IOException\n{\r\n    return rmAdminProxy.refreshQueues(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesResponse refreshNodes(RefreshNodesRequest request) throws StandbyException, YarnException, IOException\n{\r\n    return rmAdminProxy.refreshNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshSuperUserGroupsConfiguration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshSuperUserGroupsConfigurationResponse refreshSuperUserGroupsConfiguration(RefreshSuperUserGroupsConfigurationRequest request) throws StandbyException, YarnException, IOException\n{\r\n    return rmAdminProxy.refreshSuperUserGroupsConfiguration(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshUserToGroupsMappings",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshUserToGroupsMappingsResponse refreshUserToGroupsMappings(RefreshUserToGroupsMappingsRequest request) throws StandbyException, YarnException, IOException\n{\r\n    return rmAdminProxy.refreshUserToGroupsMappings(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshAdminAcls",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshAdminAclsResponse refreshAdminAcls(RefreshAdminAclsRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.refreshAdminAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshServiceAcls",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshServiceAclsResponse refreshServiceAcls(RefreshServiceAclsRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.refreshServiceAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "updateNodeResource",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "UpdateNodeResourceResponse updateNodeResource(UpdateNodeResourceRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.updateNodeResource(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshNodesResources",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshNodesResourcesResponse refreshNodesResources(RefreshNodesResourcesRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.refreshNodesResources(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "addToClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "AddToClusterNodeLabelsResponse addToClusterNodeLabels(AddToClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.addToClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "removeFromClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RemoveFromClusterNodeLabelsResponse removeFromClusterNodeLabels(RemoveFromClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.removeFromClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "replaceLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ReplaceLabelsOnNodeResponse replaceLabelsOnNode(ReplaceLabelsOnNodeRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.replaceLabelsOnNode(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "checkForDecommissioningNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "CheckForDecommissioningNodesResponse checkForDecommissioningNodes(CheckForDecommissioningNodesRequest checkForDecommissioningNodesRequest) throws YarnException, IOException\n{\r\n    return rmAdminProxy.checkForDecommissioningNodes(checkForDecommissioningNodesRequest);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshClusterMaxPriority",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "RefreshClusterMaxPriorityResponse refreshClusterMaxPriority(RefreshClusterMaxPriorityRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.refreshClusterMaxPriority(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getGroupsForUser",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String[] getGroupsForUser(String userName) throws IOException\n{\r\n    return rmAdminProxy.getGroupsForUser(userName);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "mapAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "NodesToAttributesMappingResponse mapAttributesToNodes(NodesToAttributesMappingRequest request) throws YarnException, IOException\n{\r\n    return rmAdminProxy.mapAttributesToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "preHead",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void preHead(Page.HTML<__> html)\n{\r\n    commonPreHead(html);\r\n    setTitle(\"Router\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "commonPreHead",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void commonPreHead(Page.HTML<__> html)\n{\r\n    set(ACCORDION_ID, \"nav\");\r\n    set(initID(ACCORDION, \"nav\"), \"{autoHeight:false, active:0}\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "nav",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> nav()\n{\r\n    return NavBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "content",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Class<? extends SubView> content()\n{\r\n    return AboutBlock.class;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router",
  "methodName" : "logAndThrowException",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void logAndThrowException(String errMsg, Throwable t) throws YarnException\n{\r\n    if (t != null) {\r\n        LOG.error(errMsg, t);\r\n        throw new YarnException(errMsg, t);\r\n    } else {\r\n        LOG.error(errMsg);\r\n        throw new YarnException(errMsg);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "init",
  "errType" : [ "FederationPolicyInitializationException" ],
  "containingMethodsNum" : 11,
  "sourceCodeText" : "void init(String userName)\n{\r\n    super.init(userName);\r\n    federationFacade = FederationStateStoreFacade.getInstance();\r\n    rand = new Random(System.currentTimeMillis());\r\n    int numThreads = getConf().getInt(YarnConfiguration.ROUTER_USER_CLIENT_THREADS_SIZE, YarnConfiguration.DEFAULT_ROUTER_USER_CLIENT_THREADS_SIZE);\r\n    ThreadFactory threadFactory = new ThreadFactoryBuilder().setNameFormat(\"RPC Router Client-\" + userName + \"-%d \").build();\r\n    BlockingQueue workQueue = new LinkedBlockingQueue<>();\r\n    this.executorService = new ThreadPoolExecutor(numThreads, numThreads, 0L, TimeUnit.MILLISECONDS, workQueue, threadFactory);\r\n    final Configuration conf = this.getConf();\r\n    try {\r\n        policyFacade = new RouterPolicyFacade(conf, federationFacade, this.federationFacade.getSubClusterResolver(), null);\r\n    } catch (FederationPolicyInitializationException e) {\r\n        LOG.error(e.getMessage());\r\n    }\r\n    numSubmitRetries = conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\r\n    clientRMProxies = new ConcurrentHashMap<SubClusterId, ApplicationClientProtocol>();\r\n    routerMetrics = RouterMetrics.getMetrics();\r\n    returnPartialReport = conf.getBoolean(YarnConfiguration.ROUTER_CLIENTRM_PARTIAL_RESULTS_ENABLED, YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_PARTIAL_RESULTS_ENABLED);\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(ClientRequestInterceptor next)\n{\r\n    throw new YarnRuntimeException(\"setNextInterceptor is being called on \" + \"FederationClientRequestInterceptor, which should be the last one \" + \"in the chain. Check if the interceptor pipeline configuration \" + \"is correct\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClientRMProxyForSubCluster",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "ApplicationClientProtocol getClientRMProxyForSubCluster(SubClusterId subClusterId) throws YarnException\n{\r\n    if (clientRMProxies.containsKey(subClusterId)) {\r\n        return clientRMProxies.get(subClusterId);\r\n    }\r\n    ApplicationClientProtocol clientRMProxy = null;\r\n    try {\r\n        boolean serviceAuthEnabled = getConf().getBoolean(CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION, false);\r\n        UserGroupInformation realUser = user;\r\n        if (serviceAuthEnabled) {\r\n            realUser = UserGroupInformation.createProxyUser(user.getShortUserName(), UserGroupInformation.getLoginUser());\r\n        }\r\n        clientRMProxy = FederationProxyProviderUtil.createRMProxy(getConf(), ApplicationClientProtocol.class, subClusterId, realUser);\r\n    } catch (Exception e) {\r\n        RouterServerUtil.logAndThrowException(\"Unable to create the interface to reach the SubCluster \" + subClusterId, e);\r\n    }\r\n    clientRMProxies.put(subClusterId, clientRMProxy);\r\n    return clientRMProxy;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getRandomActiveSubCluster",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "SubClusterId getRandomActiveSubCluster(Map<SubClusterId, SubClusterInfo> activeSubclusters) throws YarnException\n{\r\n    if (activeSubclusters == null || activeSubclusters.size() < 1) {\r\n        RouterServerUtil.logAndThrowException(FederationPolicyUtils.NO_ACTIVE_SUBCLUSTER_AVAILABLE, null);\r\n    }\r\n    List<SubClusterId> list = new ArrayList<>(activeSubclusters.keySet());\r\n    return list.get(rand.nextInt(list.size()));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewApplication",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 13,
  "sourceCodeText" : "GetNewApplicationResponse getNewApplication(GetNewApplicationRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    Map<SubClusterId, SubClusterInfo> subClustersActive = federationFacade.getSubClusters(true);\r\n    for (int i = 0; i < numSubmitRetries; ++i) {\r\n        SubClusterId subClusterId = getRandomActiveSubCluster(subClustersActive);\r\n        LOG.debug(\"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\r\n        ApplicationClientProtocol clientRMProxy = getClientRMProxyForSubCluster(subClusterId);\r\n        GetNewApplicationResponse response = null;\r\n        try {\r\n            response = clientRMProxy.getNewApplication(request);\r\n        } catch (Exception e) {\r\n            LOG.warn(\"Unable to create a new ApplicationId in SubCluster \" + subClusterId.getId(), e);\r\n        }\r\n        if (response != null) {\r\n            long stopTime = clock.getTime();\r\n            routerMetrics.succeededAppsCreated(stopTime - startTime);\r\n            RouterAuditLogger.logSuccess(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_NEW_APP, \"RouterClientRMService\", response.getApplicationId());\r\n            return response;\r\n        } else {\r\n            subClustersActive.remove(subClusterId);\r\n        }\r\n    }\r\n    routerMetrics.incrAppsFailedCreated();\r\n    String errMsg = \"Fail to create a new application.\";\r\n    RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_NEW_APP, \"UNKNOWN\", \"RouterClientRMService\", errMsg);\r\n    throw new YarnException(errMsg);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitApplication",
  "errType" : [ "YarnException", "YarnException", "Exception" ],
  "containingMethodsNum" : 28,
  "sourceCodeText" : "SubmitApplicationResponse submitApplication(SubmitApplicationRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    if (request == null || request.getApplicationSubmissionContext() == null || request.getApplicationSubmissionContext().getApplicationId() == null) {\r\n        routerMetrics.incrAppsFailedSubmitted();\r\n        String errMsg = \"Missing submitApplication request or applicationSubmissionContext \" + \"information.\";\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.SUBMIT_NEW_APP, \"UNKNOWN\", \"RouterClientRMService\", errMsg);\r\n        throw new YarnException(errMsg);\r\n    }\r\n    ApplicationId applicationId = request.getApplicationSubmissionContext().getApplicationId();\r\n    List<SubClusterId> blacklist = new ArrayList<SubClusterId>();\r\n    for (int i = 0; i < numSubmitRetries; ++i) {\r\n        SubClusterId subClusterId = policyFacade.getHomeSubcluster(request.getApplicationSubmissionContext(), blacklist);\r\n        LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i + \" on SubCluster \" + subClusterId);\r\n        ApplicationHomeSubCluster appHomeSubCluster = ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\r\n        if (i == 0) {\r\n            try {\r\n                subClusterId = federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\r\n            } catch (YarnException e) {\r\n                routerMetrics.incrAppsFailedSubmitted();\r\n                String message = \"Unable to insert the ApplicationId \" + applicationId + \" into the FederationStateStore\";\r\n                RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.SUBMIT_NEW_APP, \"UNKNOWN\", \"RouterClientRMService\", message, applicationId, subClusterId);\r\n                throw new YarnException(message, e);\r\n            }\r\n        } else {\r\n            try {\r\n                federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\r\n            } catch (YarnException e) {\r\n                String message = \"Unable to update the ApplicationId \" + applicationId + \" into the FederationStateStore\";\r\n                SubClusterId subClusterIdInStateStore = federationFacade.getApplicationHomeSubCluster(applicationId);\r\n                if (subClusterId == subClusterIdInStateStore) {\r\n                    LOG.info(\"Application \" + applicationId + \" already submitted on SubCluster \" + subClusterId);\r\n                } else {\r\n                    routerMetrics.incrAppsFailedSubmitted();\r\n                    RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.SUBMIT_NEW_APP, \"UNKNOWN\", \"RouterClientRMService\", message, applicationId, subClusterId);\r\n                    throw new YarnException(message, e);\r\n                }\r\n            }\r\n        }\r\n        ApplicationClientProtocol clientRMProxy = getClientRMProxyForSubCluster(subClusterId);\r\n        SubmitApplicationResponse response = null;\r\n        try {\r\n            response = clientRMProxy.submitApplication(request);\r\n        } catch (Exception e) {\r\n            LOG.warn(\"Unable to submit the application \" + applicationId + \"to SubCluster \" + subClusterId.getId(), e);\r\n        }\r\n        if (response != null) {\r\n            LOG.info(\"Application \" + request.getApplicationSubmissionContext().getApplicationName() + \" with appId \" + applicationId + \" submitted on \" + subClusterId);\r\n            long stopTime = clock.getTime();\r\n            routerMetrics.succeededAppsSubmitted(stopTime - startTime);\r\n            RouterAuditLogger.logSuccess(user.getShortUserName(), RouterAuditLogger.AuditConstants.SUBMIT_NEW_APP, \"RouterClientRMService\", applicationId, subClusterId);\r\n            return response;\r\n        } else {\r\n            blacklist.add(subClusterId);\r\n        }\r\n    }\r\n    routerMetrics.incrAppsFailedSubmitted();\r\n    String errMsg = \"Application \" + request.getApplicationSubmissionContext().getApplicationName() + \" with appId \" + applicationId + \" failed to be submitted.\";\r\n    RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.SUBMIT_NEW_APP, \"UNKNOWN\", \"RouterClientRMService\", errMsg, applicationId);\r\n    throw new YarnException(errMsg);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 3,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "forceKillApplication",
  "errType" : [ "YarnException", "Exception" ],
  "containingMethodsNum" : 17,
  "sourceCodeText" : "KillApplicationResponse forceKillApplication(KillApplicationRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    if (request == null || request.getApplicationId() == null) {\r\n        routerMetrics.incrAppsFailedKilled();\r\n        String message = \"Missing forceKillApplication request or ApplicationId.\";\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.FORCE_KILL_APP, \"UNKNOWN\", \"RouterClientRMService\", message);\r\n        throw new YarnException(message);\r\n    }\r\n    ApplicationId applicationId = request.getApplicationId();\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(request.getApplicationId());\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppsFailedKilled();\r\n        String msg = \"Application \" + applicationId + \" does not exist in FederationStateStore\";\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.FORCE_KILL_APP, \"UNKNOWN\", \"RouterClientRMService\", msg, applicationId);\r\n        throw new YarnException(msg, e);\r\n    }\r\n    ApplicationClientProtocol clientRMProxy = getClientRMProxyForSubCluster(subClusterId);\r\n    KillApplicationResponse response = null;\r\n    try {\r\n        LOG.info(\"forceKillApplication \" + applicationId + \" on SubCluster \" + subClusterId);\r\n        response = clientRMProxy.forceKillApplication(request);\r\n    } catch (Exception e) {\r\n        routerMetrics.incrAppsFailedKilled();\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.FORCE_KILL_APP, \"UNKNOWN\", \"RouterClientRMService\", \"Unable to kill the application report\", applicationId, subClusterId);\r\n        throw e;\r\n    }\r\n    if (response == null) {\r\n        LOG.error(\"No response when attempting to kill the application \" + applicationId + \" to SubCluster \" + subClusterId.getId());\r\n    }\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededAppsKilled(stopTime - startTime);\r\n    RouterAuditLogger.logSuccess(user.getShortUserName(), RouterAuditLogger.AuditConstants.FORCE_KILL_APP, \"RouterClientRMService\", applicationId);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationReport",
  "errType" : [ "YarnException", "Exception" ],
  "containingMethodsNum" : 18,
  "sourceCodeText" : "GetApplicationReportResponse getApplicationReport(GetApplicationReportRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    if (request == null || request.getApplicationId() == null) {\r\n        routerMetrics.incrAppsFailedRetrieved();\r\n        String errMsg = \"Missing getApplicationReport request or applicationId information.\";\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_APP_REPORT, \"UNKNOWN\", \"RouterClientRMService\", errMsg);\r\n        throw new YarnException(errMsg);\r\n    }\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(request.getApplicationId());\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppsFailedRetrieved();\r\n        String errMsg = \"Application \" + request.getApplicationId() + \" does not exist in FederationStateStore\";\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_APP_REPORT, \"UNKNOWN\", \"RouterClientRMService\", errMsg, request.getApplicationId());\r\n        throw new YarnException(errMsg, e);\r\n    }\r\n    ApplicationClientProtocol clientRMProxy = getClientRMProxyForSubCluster(subClusterId);\r\n    GetApplicationReportResponse response = null;\r\n    try {\r\n        response = clientRMProxy.getApplicationReport(request);\r\n    } catch (Exception e) {\r\n        routerMetrics.incrAppsFailedRetrieved();\r\n        String errMsg = \"Unable to get the application report for \" + request.getApplicationId() + \"to SubCluster \" + subClusterId.getId();\r\n        RouterAuditLogger.logFailure(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_APP_REPORT, \"UNKNOWN\", \"RouterClientRMService\", errMsg, request.getApplicationId(), subClusterId);\r\n        throw e;\r\n    }\r\n    if (response == null) {\r\n        LOG.error(\"No response when attempting to retrieve the report of \" + \"the application \" + request.getApplicationId() + \" to SubCluster \" + subClusterId.getId());\r\n    }\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\r\n    RouterAuditLogger.logSuccess(user.getShortUserName(), RouterAuditLogger.AuditConstants.GET_APP_REPORT, \"RouterClientRMService\", request.getApplicationId());\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplications",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 10,
  "sourceCodeText" : "GetApplicationsResponse getApplications(GetApplicationsRequest request) throws YarnException, IOException\n{\r\n    if (request == null) {\r\n        routerMetrics.incrMultipleAppsFailedRetrieved();\r\n        RouterServerUtil.logAndThrowException(\"Missing getApplications request.\", null);\r\n    }\r\n    long startTime = clock.getTime();\r\n    Map<SubClusterId, SubClusterInfo> subclusters = federationFacade.getSubClusters(true);\r\n    ClientMethod remoteMethod = new ClientMethod(\"getApplications\", new Class[] { GetApplicationsRequest.class }, new Object[] { request });\r\n    Map<SubClusterId, GetApplicationsResponse> applications;\r\n    try {\r\n        applications = invokeConcurrent(subclusters.keySet(), remoteMethod, GetApplicationsResponse.class);\r\n    } catch (Exception ex) {\r\n        routerMetrics.incrMultipleAppsFailedRetrieved();\r\n        LOG.error(\"Unable to get applications due to exception.\", ex);\r\n        throw ex;\r\n    }\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededMultipleAppsRetrieved(stopTime - startTime);\r\n    return RouterYarnClientUtils.mergeApplications(applications.values(), returnPartialReport);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterMetrics",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 8,
  "sourceCodeText" : "GetClusterMetricsResponse getClusterMetrics(GetClusterMetricsRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    Map<SubClusterId, SubClusterInfo> subclusters = federationFacade.getSubClusters(true);\r\n    ClientMethod remoteMethod = new ClientMethod(\"getClusterMetrics\", new Class[] { GetClusterMetricsRequest.class }, new Object[] { request });\r\n    Map<SubClusterId, GetClusterMetricsResponse> clusterMetrics;\r\n    try {\r\n        clusterMetrics = invokeConcurrent(subclusters.keySet(), remoteMethod, GetClusterMetricsResponse.class);\r\n    } catch (Exception ex) {\r\n        routerMetrics.incrGetClusterMetricsFailedRetrieved();\r\n        LOG.error(\"Unable to get cluster metrics due to exception.\", ex);\r\n        throw ex;\r\n    }\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededGetClusterMetricsRetrieved(stopTime - startTime);\r\n    return RouterYarnClientUtils.merge(clusterMetrics.values());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "invokeConcurrent",
  "errType" : [ "InterruptedException", "ExecutionException" ],
  "containingMethodsNum" : 16,
  "sourceCodeText" : "Map<SubClusterId, R> invokeConcurrent(ArrayList<SubClusterId> clusterIds, ClientMethod request, Class<R> clazz) throws YarnException, IOException\n{\r\n    List<Callable<Object>> callables = new ArrayList<>();\r\n    List<Future<Object>> futures = new ArrayList<>();\r\n    Map<SubClusterId, IOException> exceptions = new TreeMap<>();\r\n    for (SubClusterId subClusterId : clusterIds) {\r\n        callables.add(new Callable<Object>() {\r\n\r\n            @Override\r\n            public Object call() throws Exception {\r\n                ApplicationClientProtocol protocol = getClientRMProxyForSubCluster(subClusterId);\r\n                Method method = ApplicationClientProtocol.class.getMethod(request.getMethodName(), request.getTypes());\r\n                return method.invoke(protocol, request.getParams());\r\n            }\r\n        });\r\n    }\r\n    Map<SubClusterId, R> results = new TreeMap<>();\r\n    try {\r\n        futures.addAll(executorService.invokeAll(callables));\r\n        for (int i = 0; i < futures.size(); i++) {\r\n            SubClusterId subClusterId = clusterIds.get(i);\r\n            try {\r\n                Future<Object> future = futures.get(i);\r\n                Object result = future.get();\r\n                results.put(subClusterId, clazz.cast(result));\r\n            } catch (ExecutionException ex) {\r\n                Throwable cause = ex.getCause();\r\n                LOG.debug(\"Cannot execute {} on {}: {}\", request.getMethodName(), subClusterId.getId(), cause.getMessage());\r\n                IOException ioe;\r\n                if (cause instanceof IOException) {\r\n                    ioe = (IOException) cause;\r\n                } else if (cause instanceof YarnException) {\r\n                    throw (YarnException) cause;\r\n                } else {\r\n                    ioe = new IOException(\"Unhandled exception while calling \" + request.getMethodName() + \": \" + cause.getMessage(), cause);\r\n                }\r\n                exceptions.put(subClusterId, ioe);\r\n            }\r\n        }\r\n        if (results.isEmpty() && !clusterIds.isEmpty()) {\r\n            SubClusterId subClusterId = clusterIds.get(0);\r\n            IOException ioe = exceptions.get(subClusterId);\r\n            if (ioe != null) {\r\n                throw ioe;\r\n            }\r\n        }\r\n    } catch (InterruptedException e) {\r\n        throw new YarnException(e);\r\n    }\r\n    return results;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "invokeConcurrent",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Map<SubClusterId, R> invokeConcurrent(Collection<SubClusterId> clusterIds, ClientMethod request, Class<R> clazz) throws YarnException, IOException\n{\r\n    ArrayList<SubClusterId> clusterIdList = new ArrayList<>(clusterIds);\r\n    return invokeConcurrent(clusterIdList, request, clazz);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetClusterNodesResponse getClusterNodes(GetClusterNodesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getQueueUserAcls",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetQueueUserAclsInfoResponse getQueueUserAcls(GetQueueUserAclsInfoRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "moveApplicationAcrossQueues",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "MoveApplicationAcrossQueuesResponse moveApplicationAcrossQueues(MoveApplicationAcrossQueuesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNewReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetNewReservationResponse getNewReservation(GetNewReservationRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationSubmissionResponse submitReservation(ReservationSubmissionRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "listReservations",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationListResponse listReservations(ReservationListRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationUpdateResponse updateReservation(ReservationUpdateRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "ReservationDeleteResponse deleteReservation(ReservationDeleteRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetNodesToLabelsResponse getNodeToLabels(GetNodesToLabelsRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetLabelsToNodesResponse getLabelsToNodes(GetLabelsToNodesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetClusterNodeLabelsResponse getClusterNodeLabels(GetClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttemptReport",
  "errType" : [ "YarnException", "Exception" ],
  "containingMethodsNum" : 15,
  "sourceCodeText" : "GetApplicationAttemptReportResponse getApplicationAttemptReport(GetApplicationAttemptReportRequest request) throws YarnException, IOException\n{\r\n    long startTime = clock.getTime();\r\n    if (request == null || request.getApplicationAttemptId() == null || request.getApplicationAttemptId().getApplicationId() == null) {\r\n        routerMetrics.incrAppAttemptsFailedRetrieved();\r\n        RouterServerUtil.logAndThrowException(\"Missing getApplicationAttemptReport \" + \"request or applicationId \" + \"or applicationAttemptId information.\", null);\r\n    }\r\n    SubClusterId subClusterId = null;\r\n    try {\r\n        subClusterId = federationFacade.getApplicationHomeSubCluster(request.getApplicationAttemptId().getApplicationId());\r\n    } catch (YarnException e) {\r\n        routerMetrics.incrAppAttemptsFailedRetrieved();\r\n        RouterServerUtil.logAndThrowException(\"ApplicationAttempt \" + request.getApplicationAttemptId() + \"belongs to Application \" + request.getApplicationAttemptId().getApplicationId() + \" does not exist in FederationStateStore\", e);\r\n    }\r\n    ApplicationClientProtocol clientRMProxy = getClientRMProxyForSubCluster(subClusterId);\r\n    GetApplicationAttemptReportResponse response = null;\r\n    try {\r\n        response = clientRMProxy.getApplicationAttemptReport(request);\r\n    } catch (Exception e) {\r\n        routerMetrics.incrAppAttemptsFailedRetrieved();\r\n        LOG.error(\"Unable to get the applicationAttempt report for \" + request.getApplicationAttemptId() + \"to SubCluster \" + subClusterId.getId(), e);\r\n        throw e;\r\n    }\r\n    if (response == null) {\r\n        LOG.error(\"No response when attempting to retrieve the report of \" + \"the applicationAttempt \" + request.getApplicationAttemptId() + \" to SubCluster \" + subClusterId.getId());\r\n    }\r\n    long stopTime = clock.getTime();\r\n    routerMetrics.succeededAppAttemptsRetrieved(stopTime - startTime);\r\n    return response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 2,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getApplicationAttempts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetApplicationAttemptsResponse getApplicationAttempts(GetApplicationAttemptsRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainerReport",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetContainerReportResponse getContainerReport(GetContainerReportRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetDelegationTokenResponse getDelegationToken(GetDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "renewDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RenewDelegationTokenResponse renewDelegationToken(RenewDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "CancelDelegationTokenResponse cancelDelegationToken(CancelDelegationTokenRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "failApplicationAttempt",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "FailApplicationAttemptResponse failApplicationAttempt(FailApplicationAttemptRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "UpdateApplicationPriorityResponse updateApplicationPriority(UpdateApplicationPriorityRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "SignalContainerResponse signalToContainer(SignalContainerRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "updateApplicationTimeouts",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "UpdateApplicationTimeoutsResponse updateApplicationTimeouts(UpdateApplicationTimeoutsRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfiles",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetAllResourceProfilesResponse getResourceProfiles(GetAllResourceProfilesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceProfile",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetResourceProfileResponse getResourceProfile(GetResourceProfileRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getResourceTypeInfo",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetAllResourceTypeInfoResponse getResourceTypeInfo(GetAllResourceTypeInfoRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "shutdown",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void shutdown()\n{\r\n    executorService.shutdown();\r\n    super.shutdown();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetAttributesToNodesResponse getAttributesToNodes(GetAttributesToNodesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getClusterNodeAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetClusterNodeAttributesResponse getClusterNodeAttributes(GetClusterNodeAttributesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\clientrm",
  "methodName" : "getNodesToAttributes",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "GetNodesToAttributesResponse getNodesToAttributes(GetNodesToAttributesRequest request) throws YarnException, IOException\n{\r\n    throw new NotImplementedException(\"Code is not implemented\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "serviceStart",
  "errType" : null,
  "containingMethodsNum" : 14,
  "sourceCodeText" : "void serviceStart() throws Exception\n{\r\n    LOG.info(\"Starting Router RMAdmin Service\");\r\n    Configuration conf = getConfig();\r\n    YarnRPC rpc = YarnRPC.create(conf);\r\n    UserGroupInformation.setConfiguration(conf);\r\n    this.listenerEndpoint = conf.getSocketAddr(YarnConfiguration.ROUTER_BIND_HOST, YarnConfiguration.ROUTER_RMADMIN_ADDRESS, YarnConfiguration.DEFAULT_ROUTER_RMADMIN_ADDRESS, YarnConfiguration.DEFAULT_ROUTER_RMADMIN_PORT);\r\n    int maxCacheSize = conf.getInt(YarnConfiguration.ROUTER_PIPELINE_CACHE_MAX_SIZE, YarnConfiguration.DEFAULT_ROUTER_PIPELINE_CACHE_MAX_SIZE);\r\n    this.userPipelineMap = Collections.synchronizedMap(new LRUCacheHashMap<String, RequestInterceptorChainWrapper>(maxCacheSize, true));\r\n    Configuration serverConf = new Configuration(conf);\r\n    int numWorkerThreads = serverConf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT);\r\n    this.server = rpc.getServer(ResourceManagerAdministrationProtocol.class, this, listenerEndpoint, serverConf, null, numWorkerThreads);\r\n    if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\r\n        refreshServiceAcls(conf, RouterPolicyProvider.getInstance());\r\n    }\r\n    this.server.start();\r\n    LOG.info(\"Router RMAdminService listening on address: \" + this.server.getListenerAddress());\r\n    super.serviceStart();\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "serviceStop",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "void serviceStop() throws Exception\n{\r\n    LOG.info(\"Stopping Router RMAdminService\");\r\n    if (this.server != null) {\r\n        this.server.stop();\r\n    }\r\n    userPipelineMap.clear();\r\n    super.serviceStop();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshServiceAcls",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void refreshServiceAcls(Configuration configuration, PolicyProvider policyProvider)\n{\r\n    this.server.refreshServiceAcl(configuration, policyProvider);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getServer",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Server getServer()\n{\r\n    return this.server;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getInterceptorClassNames",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "List<String> getInterceptorClassNames(Configuration conf)\n{\r\n    String configuredInterceptorClassNames = conf.get(YarnConfiguration.ROUTER_RMADMIN_INTERCEPTOR_CLASS_PIPELINE, YarnConfiguration.DEFAULT_ROUTER_RMADMIN_INTERCEPTOR_CLASS);\r\n    List<String> interceptorClassNames = new ArrayList<String>();\r\n    Collection<String> tempList = StringUtils.getStringCollection(configuredInterceptorClassNames);\r\n    for (String item : tempList) {\r\n        interceptorClassNames.add(item.trim());\r\n    }\r\n    return interceptorClassNames;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getInterceptorChain",
  "errType" : null,
  "containingMethodsNum" : 4,
  "sourceCodeText" : "RequestInterceptorChainWrapper getInterceptorChain() throws IOException\n{\r\n    String user = UserGroupInformation.getCurrentUser().getUserName();\r\n    RequestInterceptorChainWrapper chain = userPipelineMap.get(user);\r\n    if (chain != null && chain.getRootInterceptor() != null) {\r\n        return chain;\r\n    }\r\n    return initializePipeline(user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getPipelines",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, RequestInterceptorChainWrapper> getPipelines()\n{\r\n    return this.userPipelineMap;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "createRequestInterceptorChain",
  "errType" : [ "ClassNotFoundException" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "RMAdminRequestInterceptor createRequestInterceptorChain()\n{\r\n    Configuration conf = getConfig();\r\n    List<String> interceptorClassNames = getInterceptorClassNames(conf);\r\n    RMAdminRequestInterceptor pipeline = null;\r\n    RMAdminRequestInterceptor current = null;\r\n    for (String interceptorClassName : interceptorClassNames) {\r\n        try {\r\n            Class<?> interceptorClass = conf.getClassByName(interceptorClassName);\r\n            if (RMAdminRequestInterceptor.class.isAssignableFrom(interceptorClass)) {\r\n                RMAdminRequestInterceptor interceptorInstance = (RMAdminRequestInterceptor) ReflectionUtils.newInstance(interceptorClass, conf);\r\n                if (pipeline == null) {\r\n                    pipeline = interceptorInstance;\r\n                    current = interceptorInstance;\r\n                    continue;\r\n                } else {\r\n                    current.setNextInterceptor(interceptorInstance);\r\n                    current = interceptorInstance;\r\n                }\r\n            } else {\r\n                throw new YarnRuntimeException(\"Class: \" + interceptorClassName + \" not instance of \" + RMAdminRequestInterceptor.class.getCanonicalName());\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            throw new YarnRuntimeException(\"Could not instantiate RMAdminRequestInterceptor: \" + interceptorClassName, e);\r\n        }\r\n    }\r\n    if (pipeline == null) {\r\n        throw new YarnRuntimeException(\"RequestInterceptor pipeline is not configured in the system\");\r\n    }\r\n    return pipeline;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "initializePipeline",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "RequestInterceptorChainWrapper initializePipeline(String user)\n{\r\n    synchronized (this.userPipelineMap) {\r\n        if (this.userPipelineMap.containsKey(user)) {\r\n            LOG.info(\"Request to start an already existing user: {}\" + \" was received, so ignoring.\", user);\r\n            return userPipelineMap.get(user);\r\n        }\r\n        RequestInterceptorChainWrapper chainWrapper = new RequestInterceptorChainWrapper();\r\n        try {\r\n            LOG.info(\"Initializing request processing pipeline for user: {}\", user);\r\n            RMAdminRequestInterceptor interceptorChain = this.createRequestInterceptorChain();\r\n            interceptorChain.init(user);\r\n            chainWrapper.init(interceptorChain);\r\n        } catch (Exception e) {\r\n            LOG.error(\"Init RMAdminRequestInterceptor error for user: \" + user, e);\r\n            throw e;\r\n        }\r\n        this.userPipelineMap.put(user, chainWrapper);\r\n        return chainWrapper;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "getGroupsForUser",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "String[] getGroupsForUser(String user) throws IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().getGroupsForUser(user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshQueues",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshQueuesResponse refreshQueues(RefreshQueuesRequest request) throws StandbyException, YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshQueues(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshNodesResponse refreshNodes(RefreshNodesRequest request) throws StandbyException, YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshSuperUserGroupsConfiguration",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshSuperUserGroupsConfigurationResponse refreshSuperUserGroupsConfiguration(RefreshSuperUserGroupsConfigurationRequest request) throws StandbyException, YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshSuperUserGroupsConfiguration(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshUserToGroupsMappings",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshUserToGroupsMappingsResponse refreshUserToGroupsMappings(RefreshUserToGroupsMappingsRequest request) throws StandbyException, YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshUserToGroupsMappings(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshAdminAcls",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshAdminAclsResponse refreshAdminAcls(RefreshAdminAclsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshAdminAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshServiceAcls",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshServiceAclsResponse refreshServiceAcls(RefreshServiceAclsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshServiceAcls(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "updateNodeResource",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "UpdateNodeResourceResponse updateNodeResource(UpdateNodeResourceRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().updateNodeResource(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshNodesResources",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshNodesResourcesResponse refreshNodesResources(RefreshNodesResourcesRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshNodesResources(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "addToClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "AddToClusterNodeLabelsResponse addToClusterNodeLabels(AddToClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().addToClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "removeFromClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RemoveFromClusterNodeLabelsResponse removeFromClusterNodeLabels(RemoveFromClusterNodeLabelsRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().removeFromClusterNodeLabels(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "replaceLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "ReplaceLabelsOnNodeResponse replaceLabelsOnNode(ReplaceLabelsOnNodeRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().replaceLabelsOnNode(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "checkForDecommissioningNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "CheckForDecommissioningNodesResponse checkForDecommissioningNodes(CheckForDecommissioningNodesRequest checkForDecommissioningNodesRequest) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().checkForDecommissioningNodes(checkForDecommissioningNodesRequest);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "refreshClusterMaxPriority",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "RefreshClusterMaxPriorityResponse refreshClusterMaxPriority(RefreshClusterMaxPriorityRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().refreshClusterMaxPriority(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\rmadmin",
  "methodName" : "mapAttributesToNodes",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "NodesToAttributesMappingResponse mapAttributesToNodes(NodesToAttributesMappingRequest request) throws YarnException, IOException\n{\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain();\r\n    return pipeline.getRootInterceptor().mapAttributesToNodes(request);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\security\\authorize",
  "methodName" : "getInstance",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RouterPolicyProvider getInstance()\n{\r\n    if (routerPolicyProvider == null) {\r\n        synchronized (RouterPolicyProvider.class) {\r\n            if (routerPolicyProvider == null) {\r\n                routerPolicyProvider = new RouterPolicyProvider();\r\n            }\r\n        }\r\n    }\r\n    return routerPolicyProvider;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\security\\authorize",
  "methodName" : "getServices",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Service[] getServices()\n{\r\n    return ROUTER_SERVICES;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getInterceptorClassNames",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "List<String> getInterceptorClassNames(Configuration config)\n{\r\n    String configuredInterceptorClassNames = config.get(YarnConfiguration.ROUTER_WEBAPP_INTERCEPTOR_CLASS_PIPELINE, YarnConfiguration.DEFAULT_ROUTER_WEBAPP_INTERCEPTOR_CLASS);\r\n    List<String> interceptorClassNames = new ArrayList<String>();\r\n    Collection<String> tempList = StringUtils.getStringCollection(configuredInterceptorClassNames);\r\n    for (String item : tempList) {\r\n        interceptorClassNames.add(item.trim());\r\n    }\r\n    return interceptorClassNames;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void init()\n{\r\n    response.setContentType(null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getInterceptorChain",
  "errType" : [ "IOException" ],
  "containingMethodsNum" : 7,
  "sourceCodeText" : "RequestInterceptorChainWrapper getInterceptorChain(final HttpServletRequest hsr)\n{\r\n    String user = \"\";\r\n    if (hsr != null) {\r\n        user = hsr.getRemoteUser();\r\n    }\r\n    try {\r\n        if (user == null || user.equals(\"\")) {\r\n            user = UserGroupInformation.getCurrentUser().getUserName();\r\n        }\r\n    } catch (IOException e) {\r\n        LOG.error(\"Cannot get user: {}\", e.getMessage());\r\n    }\r\n    RequestInterceptorChainWrapper chain = userPipelineMap.get(user);\r\n    if (chain != null && chain.getRootInterceptor() != null) {\r\n        return chain;\r\n    }\r\n    return initializePipeline(user);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getPipelines",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, RequestInterceptorChainWrapper> getPipelines()\n{\r\n    return this.userPipelineMap;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createRequestInterceptorChain",
  "errType" : [ "ClassNotFoundException" ],
  "containingMethodsNum" : 6,
  "sourceCodeText" : "RESTRequestInterceptor createRequestInterceptorChain()\n{\r\n    List<String> interceptorClassNames = getInterceptorClassNames(conf);\r\n    RESTRequestInterceptor pipeline = null;\r\n    RESTRequestInterceptor current = null;\r\n    for (String interceptorClassName : interceptorClassNames) {\r\n        try {\r\n            Class<?> interceptorClass = conf.getClassByName(interceptorClassName);\r\n            if (RESTRequestInterceptor.class.isAssignableFrom(interceptorClass)) {\r\n                RESTRequestInterceptor interceptorInstance = (RESTRequestInterceptor) ReflectionUtils.newInstance(interceptorClass, conf);\r\n                if (pipeline == null) {\r\n                    pipeline = interceptorInstance;\r\n                    current = interceptorInstance;\r\n                    continue;\r\n                } else {\r\n                    current.setNextInterceptor(interceptorInstance);\r\n                    current = interceptorInstance;\r\n                }\r\n            } else {\r\n                throw new YarnRuntimeException(\"Class: \" + interceptorClassName + \" not instance of \" + RESTRequestInterceptor.class.getCanonicalName());\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            throw new YarnRuntimeException(\"Could not instantiate RESTRequestInterceptor: \" + interceptorClassName, e);\r\n        }\r\n    }\r\n    if (pipeline == null) {\r\n        throw new YarnRuntimeException(\"RequestInterceptor pipeline is not configured in the system\");\r\n    }\r\n    return pipeline;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "initializePipeline",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 9,
  "sourceCodeText" : "RequestInterceptorChainWrapper initializePipeline(String user)\n{\r\n    synchronized (this.userPipelineMap) {\r\n        if (this.userPipelineMap.containsKey(user)) {\r\n            LOG.info(\"Request to start an already existing user: {}\" + \" was received, so ignoring.\", user);\r\n            return userPipelineMap.get(user);\r\n        }\r\n        RequestInterceptorChainWrapper chainWrapper = new RequestInterceptorChainWrapper();\r\n        try {\r\n            LOG.info(\"Initializing request processing pipeline for user: {}\", user);\r\n            RESTRequestInterceptor interceptorChain = this.createRequestInterceptorChain();\r\n            interceptorChain.init(user);\r\n            chainWrapper.init(interceptorChain);\r\n        } catch (Exception e) {\r\n            LOG.error(\"Init RESTRequestInterceptor error for user: \" + user, e);\r\n            throw e;\r\n        }\r\n        this.userPipelineMap.put(user, chainWrapper);\r\n        return chainWrapper;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "get",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "ClusterInfo get()\n{\r\n    return getClusterInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterInfo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ClusterInfo getClusterInfo()\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getClusterInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterUserInfo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ClusterUserInfo getClusterUserInfo(@Context HttpServletRequest hsr)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getClusterUserInfo(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterMetricsInfo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ClusterMetricsInfo getClusterMetricsInfo()\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getClusterMetricsInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getSchedulerInfo",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "SchedulerTypeInfo getSchedulerInfo()\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getSchedulerInfo();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "dumpSchedulerLogs",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "String dumpSchedulerLogs(@FormParam(RMWSConsts.TIME) String time, @Context HttpServletRequest hsr) throws IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().dumpSchedulerLogs(time, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodes",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodesInfo getNodes(@QueryParam(RMWSConsts.STATES) String states)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getNodes(states);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeInfo getNode(@PathParam(RMWSConsts.NODEID) String nodeId)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getNode(nodeId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateNodeResource",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ResourceInfo updateNodeResource(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.NODEID) String nodeId, ResourceOptionInfo resourceOption) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().updateNodeResource(hsr, nodeId, resourceOption);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApps",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam(RMWSConsts.STATE) String stateQuery, @QueryParam(RMWSConsts.STATES) Set<String> statesQuery, @QueryParam(RMWSConsts.FINAL_STATUS) String finalStatusQuery, @QueryParam(RMWSConsts.USER) String userQuery, @QueryParam(RMWSConsts.QUEUE) String queueQuery, @QueryParam(RMWSConsts.LIMIT) String count, @QueryParam(RMWSConsts.STARTED_TIME_BEGIN) String startedBegin, @QueryParam(RMWSConsts.STARTED_TIME_END) String startedEnd, @QueryParam(RMWSConsts.FINISHED_TIME_BEGIN) String finishBegin, @QueryParam(RMWSConsts.FINISHED_TIME_END) String finishEnd, @QueryParam(RMWSConsts.APPLICATION_TYPES) Set<String> applicationTypes, @QueryParam(RMWSConsts.APPLICATION_TAGS) Set<String> applicationTags, @QueryParam(RMWSConsts.NAME) String name, @QueryParam(RMWSConsts.DESELECTS) Set<String> unselectedFields)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getApps(hsr, stateQuery, statesQuery, finalStatusQuery, userQuery, queueQuery, count, startedBegin, startedEnd, finishBegin, finishEnd, applicationTypes, applicationTags, name, unselectedFields);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getActivities",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ActivitiesInfo getActivities(@Context HttpServletRequest hsr, @QueryParam(RMWSConsts.NODEID) String nodeId, @QueryParam(RMWSConsts.GROUP_BY) String groupBy)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getActivities(hsr, nodeId, groupBy);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getBulkActivities",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "BulkActivitiesInfo getBulkActivities(@Context HttpServletRequest hsr, @QueryParam(RMWSConsts.GROUP_BY) String groupBy, @QueryParam(RMWSConsts.ACTIVITIES_COUNT) @DefaultValue(DEFAULT_ACTIVITIES_COUNT) int activitiesCount) throws InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getBulkActivities(hsr, groupBy, activitiesCount);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppActivities",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppActivitiesInfo getAppActivities(@Context HttpServletRequest hsr, @QueryParam(RMWSConsts.APP_ID) String appId, @QueryParam(RMWSConsts.MAX_TIME) String time, @QueryParam(RMWSConsts.REQUEST_PRIORITIES) Set<String> requestPriorities, @QueryParam(RMWSConsts.ALLOCATION_REQUEST_IDS) Set<String> allocationRequestIds, @QueryParam(RMWSConsts.GROUP_BY) String groupBy, @QueryParam(RMWSConsts.LIMIT) String limit, @QueryParam(RMWSConsts.ACTIONS) Set<String> actions, @QueryParam(RMWSConsts.SUMMARIZE) @DefaultValue(DEFAULT_SUMMARIZE) boolean summarize)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppActivities(hsr, appId, time, requestPriorities, allocationRequestIds, groupBy, limit, actions, summarize);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppStatistics",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ApplicationStatisticsInfo getAppStatistics(@Context HttpServletRequest hsr, @QueryParam(RMWSConsts.STATES) Set<String> stateQueries, @QueryParam(RMWSConsts.APPLICATION_TYPES) Set<String> typeQueries)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppStatistics(hsr, stateQueries, typeQueries);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getApp",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppInfo getApp(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId, @QueryParam(RMWSConsts.DESELECTS) Set<String> unselectedFields)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getApp(hsr, appId, unselectedFields);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppState",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppState getAppState(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppState(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppState",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response updateAppState(AppState targetState, @Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().updateAppState(targetState, hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNodeToLabels",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr) throws IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getNodeToLabels(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsToNodes",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "LabelsToNodesInfo getLabelsToNodes(@QueryParam(RMWSConsts.LABELS) Set<String> labels) throws IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(null);\r\n    return pipeline.getRootInterceptor().getLabelsToNodes(labels);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNodes",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response replaceLabelsOnNodes(final NodeToLabelsEntryList newNodeToLabels, @Context HttpServletRequest hsr) throws Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().replaceLabelsOnNodes(newNodeToLabels, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "replaceLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response replaceLabelsOnNode(@QueryParam(RMWSConsts.LABELS) Set<String> newNodeLabelsName, @Context HttpServletRequest hsr, @PathParam(RMWSConsts.NODEID) String nodeId) throws Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().replaceLabelsOnNode(newNodeLabelsName, hsr, nodeId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeLabelsInfo getClusterNodeLabels(@Context HttpServletRequest hsr) throws IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getClusterNodeLabels(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "addToClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response addToClusterNodeLabels(NodeLabelsInfo newNodeLabels, @Context HttpServletRequest hsr) throws Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().addToClusterNodeLabels(newNodeLabels, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "removeFromClusterNodeLabels",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response removeFromClusterNodeLabels(@QueryParam(RMWSConsts.LABELS) Set<String> oldNodeLabels, @Context HttpServletRequest hsr) throws Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().removeFromClusterNodeLabels(oldNodeLabels, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getLabelsOnNode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "NodeLabelsInfo getLabelsOnNode(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.NODEID) String nodeId) throws IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getLabelsOnNode(hsr, nodeId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppPriority",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppPriority getAppPriority(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppPriority(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationPriority",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response updateApplicationPriority(AppPriority targetPriority, @Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().updateApplicationPriority(targetPriority, hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppQueue",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppQueue getAppQueue(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppQueue(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateAppQueue",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response updateAppQueue(AppQueue targetQueue, @Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().updateAppQueue(targetQueue, hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewApplication",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response createNewApplication(@Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().createNewApplication(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitApplication",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response submitApplication(ApplicationSubmissionContextInfo newApp, @Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().submitApplication(newApp, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response postDelegationToken(DelegationToken tokenData, @Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().postDelegationToken(tokenData, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "postDelegationTokenExpiration",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response postDelegationTokenExpiration(@Context HttpServletRequest hsr) throws AuthorizationException, IOException, Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().postDelegationTokenExpiration(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "cancelDelegationToken",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response cancelDelegationToken(@Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException, Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().cancelDelegationToken(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "createNewReservation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response createNewReservation(@Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().createNewReservation(hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "submitReservation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response submitReservation(ReservationSubmissionRequestInfo resContext, @Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().submitReservation(resContext, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateReservation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response updateReservation(ReservationUpdateRequestInfo resContext, @Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().updateReservation(resContext, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "deleteReservation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response deleteReservation(ReservationDeleteRequestInfo resContext, @Context HttpServletRequest hsr) throws AuthorizationException, IOException, InterruptedException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().deleteReservation(resContext, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "listReservation",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response listReservation(@QueryParam(RMWSConsts.QUEUE) @DefaultValue(DEFAULT_QUEUE) String queue, @QueryParam(RMWSConsts.RESERVATION_ID) @DefaultValue(DEFAULT_RESERVATION_ID) String reservationId, @QueryParam(RMWSConsts.START_TIME) @DefaultValue(DEFAULT_START_TIME) long startTime, @QueryParam(RMWSConsts.END_TIME) @DefaultValue(DEFAULT_END_TIME) long endTime, @QueryParam(RMWSConsts.INCLUDE_RESOURCE) @DefaultValue(DEFAULT_INCLUDE_RESOURCE) boolean includeResourceAllocations, @Context HttpServletRequest hsr) throws Exception\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().listReservation(queue, reservationId, startTime, endTime, includeResourceAllocations, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeout",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppTimeoutInfo getAppTimeout(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId, @PathParam(RMWSConsts.TYPE) String type) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppTimeout(hsr, appId, type);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppTimeouts",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppTimeoutsInfo getAppTimeouts(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppTimeouts(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "updateApplicationTimeout",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response updateApplicationTimeout(AppTimeoutInfo appTimeout, @Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException, YarnException, InterruptedException, IOException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().updateApplicationTimeout(appTimeout, hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempts",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr, @PathParam(RMWSConsts.APPID) String appId)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().getAppAttempts(hsr, appId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "checkUserAccessToQueue",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "RMQueueAclInfo checkUserAccessToQueue(@PathParam(RMWSConsts.QUEUE) String queue, @QueryParam(RMWSConsts.USER) String username, @QueryParam(RMWSConsts.QUEUE_ACL_TYPE) @DefaultValue(\"SUBMIT_APPLICATIONS\") String queueAclType, @Context HttpServletRequest hsr) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(hsr);\r\n    return pipeline.getRootInterceptor().checkUserAccessToQueue(queue, username, queueAclType, hsr);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getAppAttempt",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo getAppAttempt(@Context HttpServletRequest req, @Context HttpServletResponse res, @PathParam(RMWSConsts.APPID) String appId, @PathParam(RMWSConsts.APPATTEMPTID) String appAttemptId)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(req);\r\n    return pipeline.getRootInterceptor().getAppAttempt(req, res, appId, appAttemptId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainers",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ContainersInfo getContainers(@Context HttpServletRequest req, @Context HttpServletResponse res, @PathParam(RMWSConsts.APPID) String appId, @PathParam(RMWSConsts.APPATTEMPTID) String appAttemptId)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(req);\r\n    return pipeline.getRootInterceptor().getContainers(req, res, appId, appAttemptId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getContainer",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "ContainerInfo getContainer(@Context HttpServletRequest req, @Context HttpServletResponse res, @PathParam(RMWSConsts.APPID) String appId, @PathParam(RMWSConsts.APPATTEMPTID) String appAttemptId, @PathParam(RMWSConsts.CONTAINERID) String containerId)\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(req);\r\n    return pipeline.getRootInterceptor().getContainer(req, res, appId, appAttemptId, containerId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setResponse",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setResponse(HttpServletResponse response)\n{\r\n    this.response = response;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "signalToContainer",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "Response signalToContainer(@PathParam(RMWSConsts.CONTAINERID) String containerId, @PathParam(RMWSConsts.COMMAND) String command, @Context HttpServletRequest req) throws AuthorizationException\n{\r\n    init();\r\n    RequestInterceptorChainWrapper pipeline = getInterceptorChain(req);\r\n    return pipeline.getRootInterceptor().signalToContainer(containerId, command, req);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setNextInterceptor(RESTRequestInterceptor nextInterceptor)\n{\r\n    this.nextInterceptor = nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "setConf",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setConf(Configuration conf)\n{\r\n    this.conf = conf;\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.setConf(conf);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getConf",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Configuration getConf()\n{\r\n    return this.conf;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "init",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void init(String user)\n{\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.init(user);\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "shutdown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void shutdown()\n{\r\n    if (this.nextInterceptor != null) {\r\n        this.nextInterceptor.shutdown();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "getNextInterceptor",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "RESTRequestInterceptor getNextInterceptor()\n{\r\n    return this.nextInterceptor;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "render",
  "errType" : [ "Exception" ],
  "containingMethodsNum" : 18,
  "sourceCodeText" : "void render(Block html)\n{\r\n    Configuration conf = this.router.getConfig();\r\n    Client client = RouterWebServiceUtil.createJerseyClient(conf);\r\n    String webAppAddress = WebAppUtils.getRouterWebAppURLWithScheme(conf);\r\n    AppsInfo apps = RouterWebServiceUtil.genericForward(webAppAddress, null, AppsInfo.class, HTTPMethods.GET, RMWSConsts.RM_WEB_SERVICE_PATH + RMWSConsts.APPS, null, null, conf, client);\r\n    setTitle(\"Applications\");\r\n    TBODY<TABLE<Hamlet>> tbody = html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\").th(\".name\", \"Name\").th(\".type\", \"Application Type\").th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\").th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\r\n    StringBuilder appsTableData = new StringBuilder(\"[\\n\");\r\n    for (AppInfo app : apps.getApps()) {\r\n        try {\r\n            String percent = String.format(\"%.1f\", app.getProgress() * 100.0F);\r\n            String trackingURL = app.getTrackingUrl() == null ? \"#\" : app.getTrackingUrl();\r\n            appsTableData.append(\"[\\\"\").append(\"<a href='\").append(trackingURL).append(\"'>\").append(app.getAppId()).append(\"</a>\\\",\\\"\").append(escape(app.getUser())).append(\"\\\",\\\"\").append(escape(app.getName())).append(\"\\\",\\\"\").append(escape(app.getApplicationType())).append(\"\\\",\\\"\").append(escape(app.getQueue())).append(\"\\\",\\\"\").append(String.valueOf(app.getPriority())).append(\"\\\",\\\"\").append(app.getStartTime()).append(\"\\\",\\\"\").append(app.getFinishTime()).append(\"\\\",\\\"\").append(app.getState()).append(\"\\\",\\\"\").append(app.getFinalStatus()).append(\"\\\",\\\"\").append(\"<br title='\").append(percent).append(\"'> <div class='\").append(C_PROGRESSBAR).append(\"' title='\").append(join(percent, '%')).append(\"'> \").append(\"<div class='\").append(C_PROGRESSBAR_VALUE).append(\"' style='\").append(join(\"width:\", percent, '%')).append(\"'> </div> </div>\").append(\"\\\",\\\"<a href='\").append(trackingURL).append(\"'>\").append(\"History\").append(\"</a>\");\r\n            appsTableData.append(\"\\\"],\\n\");\r\n        } catch (Exception e) {\r\n            LOG.info(\"Cannot add application {}: {}\", app.getAppId(), e.getMessage());\r\n        }\r\n    }\r\n    if (appsTableData.charAt(appsTableData.length() - 2) == ',') {\r\n        appsTableData.delete(appsTableData.length() - 2, appsTableData.length() - 1);\r\n    }\r\n    appsTableData.append(\"]\");\r\n    html.script().$type(\"text/javascript\").__(\"var appsTableData=\" + appsTableData).__();\r\n    tbody.__().__();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-router\\src\\main\\java\\org\\apache\\hadoop\\yarn\\server\\router\\webapp",
  "methodName" : "escape",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String escape(String str)\n{\r\n    return escapeEcmaScript(escapeHtml4(str));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
} ]