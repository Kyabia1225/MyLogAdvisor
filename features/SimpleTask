[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getEnvironment",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getEnvironment()\n{\r\n    return environment;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setEnvironment",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setEnvironment(final Map<String, String> localenvironment)\n{\r\n    this.environment = localenvironment;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskCmd",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTaskCmd()\n{\r\n    return taskCmd;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskCmd",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskCmd(final String taskCMD)\n{\r\n    this.taskCmd = taskCMD;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TaskId getTaskId()\n{\r\n    return taskID;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskId(final TaskId taskId)\n{\r\n    if (taskId != null) {\r\n        this.taskID = taskId;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TaskType getTaskType()\n{\r\n    return taskType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskType(final TaskType type)\n{\r\n    this.taskType = type;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getTimeout()\n{\r\n    return this.timeout;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTimeout",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTimeout(final long taskTimeout)\n{\r\n    this.timeout = taskTimeout;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "write",
  "errType" : null,
  "containingMethodsNum" : 9,
  "sourceCodeText" : "void write(final DataOutput out) throws IOException\n{\r\n    taskID.write(out);\r\n    int environmentSize = 0;\r\n    if (environment == null) {\r\n        environmentSize = 0;\r\n    } else {\r\n        environmentSize = environment.size();\r\n    }\r\n    new IntWritable(environmentSize).write(out);\r\n    if (environmentSize != 0) {\r\n        for (Entry<String, String> envEntry : environment.entrySet()) {\r\n            new Text(envEntry.getKey()).write(out);\r\n            new Text(envEntry.getValue()).write(out);\r\n        }\r\n    }\r\n    Text taskCmdText;\r\n    if (taskCmd == null) {\r\n        taskCmdText = new Text(\"\");\r\n    } else {\r\n        taskCmdText = new Text(taskCmd);\r\n    }\r\n    taskCmdText.write(out);\r\n    WritableUtils.writeEnum(out, taskType);\r\n    WritableUtils.writeVLong(out, timeout);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "readFields",
  "errType" : null,
  "containingMethodsNum" : 10,
  "sourceCodeText" : "void readFields(final DataInput in) throws IOException\n{\r\n    this.taskID = new TaskId();\r\n    taskID.readFields(in);\r\n    IntWritable envSize = new IntWritable(0);\r\n    envSize.readFields(in);\r\n    for (int i = 0; i < envSize.get(); i++) {\r\n        Text key = new Text();\r\n        Text value = new Text();\r\n        key.readFields(in);\r\n        value.readFields(in);\r\n        environment.put(key.toString(), value.toString());\r\n    }\r\n    Text taskCmdText = new Text();\r\n    taskCmdText.readFields(in);\r\n    taskCmd = taskCmdText.toString();\r\n    taskType = WritableUtils.readEnum(in, TaskType.class);\r\n    timeout = WritableUtils.readVLong(in);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return \"TaskId: \" + this.taskID.toString() + \", TaskType: \" + this.taskType + \", cmd: '\" + taskCmd + \"'\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "getHostname",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Text getHostname()\n{\r\n    return hostname;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "setHostname",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setHostname(final Text wkhostname)\n{\r\n    this.hostname = wkhostname;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "getIPAddress",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getIPAddress()\n{\r\n    return this.ipAdd.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return workerId.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "getWorkerId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getWorkerId()\n{\r\n    return this.workerId.toString();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "setWorkerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWorkerId(final String localworkerId)\n{\r\n    this.workerId = new Text(localworkerId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean equals(final Object o)\n{\r\n    if (o == null || this.getClass() != o.getClass()) {\r\n        return false;\r\n    }\r\n    WorkerId x = (WorkerId) o;\r\n    return x.getHostname().equals(this.hostname);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "write",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void write(final DataOutput dataOutput) throws IOException\n{\r\n    workerId.write(dataOutput);\r\n    hostname.write(dataOutput);\r\n    ipAdd.write(dataOutput);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "readFields",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void readFields(final DataInput dataInput) throws IOException\n{\r\n    workerId.readFields(dataInput);\r\n    hostname.readFields(dataInput);\r\n    ipAdd.readFields(dataInput);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\worker",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    int result = 1;\r\n    int workerHash = 0;\r\n    if (workerId == null) {\r\n        workerHash = 0;\r\n    } else {\r\n        workerHash = workerId.hashCode();\r\n    }\r\n    int hostHash = 0;\r\n    if (hostname == null) {\r\n        hostHash = 0;\r\n    } else {\r\n        hostHash = hostname.hashCode();\r\n    }\r\n    int ipHash = 0;\r\n    if (ipAdd == null) {\r\n        ipHash = 0;\r\n    } else {\r\n        ipHash = ipAdd.hashCode();\r\n    }\r\n    result = prime * result + workerHash;\r\n    result = prime * result + hostHash;\r\n    result = prime * result + ipHash;\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getConfigsMap",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "Map<String, String> getConfigsMap()\n{\r\n    return configsMap;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "readConfigFile",
  "errType" : [ "FileNotFoundException", "IOException" ],
  "containingMethodsNum" : 5,
  "sourceCodeText" : "Properties readConfigFile()\n{\r\n    Properties properties = new Properties();\r\n    LOG.info(\"Configuration file being loaded: \" + CONFIG_FILE + \". Found in classpath at \" + MawoConfiguration.class.getClassLoader().getResource(CONFIG_FILE));\r\n    InputStream inputStream = MawoConfiguration.class.getClassLoader().getResourceAsStream(CONFIG_FILE);\r\n    if (inputStream == null) {\r\n        throw new RuntimeException(CONFIG_FILE + \" not found in classpath\");\r\n    }\r\n    try {\r\n        properties.load(inputStream);\r\n        inputStream.close();\r\n    } catch (FileNotFoundException fnf) {\r\n        LOG.error(\"No configuration file \" + CONFIG_FILE + \" found in classpath.\");\r\n    } catch (IOException ie) {\r\n        throw new IllegalArgumentException(\"Can't read configuration file \" + CONFIG_FILE, ie);\r\n    }\r\n    return properties;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getRpcServerPort",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getRpcServerPort()\n{\r\n    return Integer.parseInt(configsMap.get(RPC_SERVER_PORT));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getRpcHostName",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getRpcHostName()\n{\r\n    return configsMap.get(RPC_SERVER_HOSTNAME);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getJobQueueStorageEnabled",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean getJobQueueStorageEnabled()\n{\r\n    return Boolean.parseBoolean(configsMap.get(JOB_QUEUE_STORAGE_ENABLED));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKAddress",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getZKAddress()\n{\r\n    return configsMap.get(ZK_ADDRESS);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKParentPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getZKParentPath()\n{\r\n    return configsMap.get(ZK_PARENT_PATH);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKRetryIntervalMS",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getZKRetryIntervalMS()\n{\r\n    return Integer.parseInt(configsMap.get(ZK_RETRY_INTERVAL_MS));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKSessionTimeoutMS",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getZKSessionTimeoutMS()\n{\r\n    return Integer.parseInt(configsMap.get(ZK_SESSION_TIMEOUT_MS));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKRetriesNum",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getZKRetriesNum()\n{\r\n    return Integer.parseInt(configsMap.get(ZK_RETRIES_NUM));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getZKAcl",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getZKAcl()\n{\r\n    return configsMap.get(ZK_ACL);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getWorkerConcurrentTasksLimit",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getWorkerConcurrentTasksLimit()\n{\r\n    return Integer.parseInt(configsMap.get(WORKER_NUM_TASKS));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getJobBuilderClass",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getJobBuilderClass()\n{\r\n    return configsMap.get(JOB_BUILDER_CLASS);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getWorkerWorkSpace",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getWorkerWorkSpace()\n{\r\n    return configsMap.get(WORKER_WORK_SPACE);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getClusterManagerURL",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getClusterManagerURL()\n{\r\n    return configsMap.get(CLUSTER_MANAGER_URL);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getAutoShutdownWorkers",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "boolean getAutoShutdownWorkers()\n{\r\n    return Boolean.parseBoolean(configsMap.get(AUTO_SHUTDOWN_WORKERS));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getMasterTasksStatusLogPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String getMasterTasksStatusLogPath()\n{\r\n    return configsMap.get(MASTER_TASKS_STATUS_LOG_PATH);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getMasterDrainEventsTimeout",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getMasterDrainEventsTimeout()\n{\r\n    return Long.parseLong(configsMap.get(MASTER_DRAIN_EVENTS_TIMEOUT));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getWorkerWhiteListEnv",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "List<String> getWorkerWhiteListEnv()\n{\r\n    List<String> whiteList = new ArrayList<String>();\r\n    String env = configsMap.get(WORKER_WHITELIST_ENV);\r\n    if (env != null && !env.isEmpty()) {\r\n        String[] variables = env.split(COMMA_SPLITTER);\r\n        for (String variable : variables) {\r\n            variable = variable.trim();\r\n            if (variable.startsWith(\"$\")) {\r\n                variable = variable.substring(1);\r\n            }\r\n            if (!variable.isEmpty()) {\r\n                whiteList.add(variable);\r\n            }\r\n        }\r\n    }\r\n    return whiteList;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTeardownWorkerValidityInterval",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getTeardownWorkerValidityInterval()\n{\r\n    return Long.parseLong(configsMap.get(MASTER_TEARDOWN_WORKER_VALIDITY_INTERVAL_MS));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getJobId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int getJobId()\n{\r\n    return jobId.getID();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getId()\n{\r\n    return taskId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "String toString()\n{\r\n    return TASK_ID_PREFIX + jobId.getID() + \"_\" + taskId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    final int bits = 32;\r\n    int result = 1;\r\n    int jobHash = 0;\r\n    if (jobId == null) {\r\n        jobHash = 0;\r\n    } else {\r\n        jobHash = jobId.hashCode();\r\n    }\r\n    result = prime * result + jobHash;\r\n    result = prime * result + (int) (taskId ^ (taskId >>> bits));\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean equals(final Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    TaskId other = (TaskId) obj;\r\n    if (jobId == null) {\r\n        if (other.jobId != null) {\r\n            return false;\r\n        }\r\n    } else if (!jobId.equals(other.jobId)) {\r\n        return false;\r\n    }\r\n    if (taskId != other.taskId) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "write",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void write(final DataOutput out) throws IOException\n{\r\n    jobId.write(out);\r\n    WritableUtils.writeVLong(out, taskId);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "readFields",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void readFields(final DataInput in) throws IOException\n{\r\n    jobId = new JobId();\r\n    jobId.readFields(in);\r\n    this.taskId = WritableUtils.readVLong(in);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "newJobId",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "JobId newJobId()\n{\r\n    Random rn = new Random();\r\n    final int range = 900000;\r\n    final int randomadd = 100000;\r\n    int randomNum = rn.nextInt(range) + randomadd;\r\n    return new JobId(randomNum);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "getID",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getID()\n{\r\n    return jobIdentifier;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "toString",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String toString()\n{\r\n    return JOB_PREFIX + jobIdentifier;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int hashCode()\n{\r\n    final int prime = 31;\r\n    int result = 1;\r\n    result = prime * result + jobIdentifier;\r\n    return result;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "boolean equals(final Object obj)\n{\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (getClass() != obj.getClass()) {\r\n        return false;\r\n    }\r\n    JobId other = (JobId) obj;\r\n    if (jobIdentifier != other.jobIdentifier) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "write",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void write(final DataOutput out) throws IOException\n{\r\n    WritableUtils.writeVInt(out, jobIdentifier);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\master\\job",
  "methodName" : "readFields",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void readFields(final DataInput in) throws IOException\n{\r\n    this.jobIdentifier = WritableUtils.readVInt(in);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getRunState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "State getRunState()\n{\r\n    return runState;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setRunState",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setRunState(final State localrunState)\n{\r\n    this.runState = localrunState;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setExitCode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setExitCode(final int localexitCode)\n{\r\n    this.exitCode = localexitCode;\r\n}\n",
  "settingFlag" : true,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getExitCode",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "int getExitCode()\n{\r\n    return exitCode;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskCMD",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskCMD(final String localcmd)\n{\r\n    this.taskCMD = localcmd;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskCMD",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTaskCMD()\n{\r\n    return taskCMD;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskType(final String localtaskType)\n{\r\n    this.taskType = localtaskType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskType",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getTaskType()\n{\r\n    return taskType;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "TaskId getTaskId()\n{\r\n    return taskId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setTaskId(final TaskId localtaskId)\n{\r\n    if (localtaskId != null) {\r\n        this.taskId = localtaskId;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setTaskState",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setTaskState(final TaskId localtaskId, final State localrunState)\n{\r\n    setTaskId(localtaskId);\r\n    setRunState(localrunState);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getTaskState",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "State getTaskState(final TaskId localtaskId)\n{\r\n    if (localtaskId.equals(this.taskId)) {\r\n        return getRunState();\r\n    } else {\r\n        return null;\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getStartTime()\n{\r\n    return startTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "void setStartTime()\n{\r\n    this.startTime = getCurrentTime();\r\n    LOG.debug(\"Start Time for \" + this.taskId + \" is \" + this.startTime);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setStartTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setStartTime(final long time)\n{\r\n    this.startTime = time;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getEndTime",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "long getEndTime()\n{\r\n    return endTime;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setEndTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setEndTime()\n{\r\n    this.setEndTime(getCurrentTime());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setEndTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void setEndTime(final long time)\n{\r\n    this.endTime = time;\r\n    LOG.debug(\"End Time for \" + this.taskId + \" is \" + this.endTime);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : true
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getCurrentTime",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "long getCurrentTime()\n{\r\n    return System.currentTimeMillis();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "write",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "void write(final DataOutput dataOutput) throws IOException\n{\r\n    workerId.write(dataOutput);\r\n    taskId.write(dataOutput);\r\n    WritableUtils.writeEnum(dataOutput, runState);\r\n    WritableUtils.writeVLong(dataOutput, getStartTime());\r\n    WritableUtils.writeVLong(dataOutput, getEndTime());\r\n    WritableUtils.writeString(dataOutput, taskCMD);\r\n    WritableUtils.writeString(dataOutput, taskType);\r\n    WritableUtils.writeVInt(dataOutput, exitCode);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "readFields",
  "errType" : null,
  "containingMethodsNum" : 8,
  "sourceCodeText" : "void readFields(final DataInput dataInput) throws IOException\n{\r\n    workerId.readFields(dataInput);\r\n    taskId.readFields(dataInput);\r\n    setRunState(WritableUtils.readEnum(dataInput, State.class));\r\n    setStartTime(WritableUtils.readVLong(dataInput));\r\n    setEndTime(WritableUtils.readVLong(dataInput));\r\n    setTaskCMD(WritableUtils.readString(dataInput));\r\n    setTaskType(WritableUtils.readString(dataInput));\r\n    setExitCode(WritableUtils.readVInt(dataInput));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "getWorkerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "WorkerId getWorkerId()\n{\r\n    return workerId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "setWorkerId",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "void setWorkerId(final WorkerId localworkerId)\n{\r\n    this.workerId = localworkerId;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "equals",
  "errType" : null,
  "containingMethodsNum" : 13,
  "sourceCodeText" : "boolean equals(Object obj)\n{\r\n    if (obj == null || obj.getClass() != this.getClass()) {\r\n        return false;\r\n    }\r\n    TaskStatus other = (TaskStatus) obj;\r\n    return (getWorkerId().equals(other.getWorkerId()) && getTaskId().equals(other.getTaskId()) && getRunState().equals(other.getRunState()) && getStartTime() == other.getStartTime() && getEndTime() == other.getEndTime() && getTaskCMD().equals(other.getTaskCMD()) && getTaskType().equals(other.getTaskType()) && getExitCode() == other.getExitCode());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "hashCode",
  "errType" : null,
  "containingMethodsNum" : 2,
  "sourceCodeText" : "int hashCode()\n{\r\n    HashCodeBuilder builder = new HashCodeBuilder();\r\n    builder.append(getWorkerId()).append(getTaskId()).append(getRunState()).append(getStartTime()).append(getEndTime()).append(getTaskCMD()).append(getTaskType()).append(getExitCode());\r\n    return builder.hashCode();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-applications\\hadoop-yarn-applications-mawo\\hadoop-yarn-applications-mawo-core\\src\\main\\java\\org\\apache\\hadoop\\applications\\mawo\\server\\common",
  "methodName" : "clone",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Object clone() throws CloneNotSupportedException\n{\r\n    return super.clone();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
} ]