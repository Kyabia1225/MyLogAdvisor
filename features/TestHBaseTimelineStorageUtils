[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-timelineservice-hbase\\hadoop-yarn-server-timelineservice-hbase-client\\src\\test\\java\\org\\apache\\hadoop\\yarn\\server\\timelineservice\\storage\\common",
  "methodName" : "setup",
  "errType" : null,
  "containingMethodsNum" : 5,
  "sourceCodeText" : "void setup() throws IOException\n{\r\n    Configuration hbaseConf = new Configuration();\r\n    hbaseConf.set(\"input\", \"test\");\r\n    ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\r\n    hbaseConf.writeXml(bytesOut);\r\n    bytesOut.close();\r\n    File file = new File(hbaseConfigPath);\r\n    OutputStream os = new FileOutputStream(file);\r\n    os.write(bytesOut.toByteArray());\r\n    os.close();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-timelineservice-hbase\\hadoop-yarn-server-timelineservice-hbase-client\\src\\test\\java\\org\\apache\\hadoop\\yarn\\server\\timelineservice\\storage\\common",
  "methodName" : "testGetTimelineServiceHBaseConfNullArgument",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testGetTimelineServiceHBaseConfNullArgument() throws Exception\n{\r\n    HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(null);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-timelineservice-hbase\\hadoop-yarn-server-timelineservice-hbase-client\\src\\test\\java\\org\\apache\\hadoop\\yarn\\server\\timelineservice\\storage\\common",
  "methodName" : "testWithHbaseConfAtLocalFileSystem",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void testWithHbaseConfAtLocalFileSystem() throws IOException\n{\r\n    Configuration conf = new Configuration();\r\n    conf.set(YarnConfiguration.TIMELINE_SERVICE_HBASE_CONFIGURATION_FILE, hbaseConfigPath);\r\n    Configuration hbaseConfFromLocal = HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\r\n    Assert.assertEquals(\"Failed to read hbase config from Local FileSystem\", \"test\", hbaseConfFromLocal.get(\"input\"));\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-yarn-project\\hadoop-yarn\\hadoop-yarn-server\\hadoop-yarn-server-timelineservice-hbase\\hadoop-yarn-server-timelineservice-hbase-client\\src\\test\\java\\org\\apache\\hadoop\\yarn\\server\\timelineservice\\storage\\common",
  "methodName" : "testWithHbaseConfAtHdfsFileSystem",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void testWithHbaseConfAtHdfsFileSystem() throws IOException\n{\r\n    MiniDFSCluster hdfsCluster = null;\r\n    try {\r\n        HdfsConfiguration hdfsConfig = new HdfsConfiguration();\r\n        hdfsCluster = new MiniDFSCluster.Builder(hdfsConfig).numDataNodes(1).build();\r\n        FileSystem fs = hdfsCluster.getFileSystem();\r\n        Path path = new Path(\"/tmp/hdfs-site.xml\");\r\n        fs.copyFromLocalFile(new Path(hbaseConfigPath), path);\r\n        Configuration conf = new Configuration(hdfsConfig);\r\n        conf.set(YarnConfiguration.TIMELINE_SERVICE_HBASE_CONFIGURATION_FILE, path.toString());\r\n        Configuration hbaseConfFromHdfs = HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\r\n        Assert.assertEquals(\"Failed to read hbase config from Hdfs FileSystem\", \"test\", hbaseConfFromHdfs.get(\"input\"));\r\n    } finally {\r\n        if (hdfsCluster != null) {\r\n            hdfsCluster.shutdown();\r\n        }\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 1,
  "logged" : false
} ]