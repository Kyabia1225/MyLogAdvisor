[ {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    skipTestCheck();\r\n    Configuration conf = new Configuration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    fs = OBSTestUtils.createTestFileSystem(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testMkdirsWithUmask",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testMkdirsWithUmask()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameRootDirForbidden",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameRootDirForbidden()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameFileUnderFileSubdir",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameFileUnderFileSubdir()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameFileUnderFile",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameFileUnderFile()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createTestFileSystem",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "OBSFileSystem createTestFileSystem(Configuration conf) throws IOException\n{\r\n    return createTestFileSystem(conf, false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createTestFileSystem",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "OBSFileSystem createTestFileSystem(Configuration conf, boolean purge) throws IOException\n{\r\n    String fsname = conf.getTrimmed(TEST_FS_OBS_NAME, \"\");\r\n    boolean liveTest = !StringUtils.isEmpty(fsname);\r\n    URI testURI = null;\r\n    if (liveTest) {\r\n        testURI = URI.create(fsname);\r\n        liveTest = testURI.getScheme().equals(OBSConstants.OBS_SCHEME);\r\n    }\r\n    if (!liveTest) {\r\n        throw new AssumptionViolatedException(\"No test filesystem in \" + TEST_FS_OBS_NAME);\r\n    }\r\n    OBSFileSystem fs1 = new OBSFileSystem();\r\n    if (purge) {\r\n        conf.setBoolean(PURGE_EXISTING_MULTIPART, true);\r\n        conf.setInt(PURGE_EXISTING_MULTIPART_AGE, 30 * 60);\r\n    }\r\n    fs1.initialize(testURI, conf);\r\n    return fs1;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createTestPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Path createTestPath(Path defVal)\n{\r\n    String testUniqueForkId = System.getProperty(OBSTestConstants.TEST_UNIQUE_FORK_ID);\r\n    return testUniqueForkId == null ? defVal : new Path(\"/\" + testUniqueForkId, \"test\");\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : true,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    skipTestCheck();\r\n    Configuration conf = new Configuration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    fSys = OBSTestUtils.createTestFileSystem(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testWorkingDirectory",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testWorkingDirectory()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testListStatusThrowsExceptionForUnreadableDir",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testListStatusThrowsExceptionForUnreadableDir()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameDirectoryToItself",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameDirectoryToItself()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testGlobStatusThrowsExceptionForUnreadableDir",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testGlobStatusThrowsExceptionForUnreadableDir()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameFileToItself",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameFileToItself()\n{\r\n    Assume.assumeTrue(\"unspport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "tearDown",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void tearDown() throws Exception\n{\r\n    if (fSys != null) {\r\n        super.tearDown();\r\n    }\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    Configuration conf = new Configuration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    String fileSystem = conf.get(OBSTestConstants.TEST_FS_OBS_NAME);\r\n    if (fileSystem == null || fileSystem.trim().length() == 0) {\r\n        throw new Exception(\"Default file system not configured.\");\r\n    }\r\n    URI uri = new URI(fileSystem);\r\n    FileSystem fs = OBSTestUtils.createTestFileSystem(conf);\r\n    fc1 = FileContext.getFileContext(new DelegateToFileSystem(uri, fs, conf, fs.getScheme(), false) {\r\n    }, conf);\r\n    fc2 = FileContext.getFileContext(new DelegateToFileSystem(uri, fs, conf, fs.getScheme(), false) {\r\n    }, conf);\r\n    super.setUp();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testMkdirsFailsForSubdirectoryOfExistingFile",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testMkdirsFailsForSubdirectoryOfExistingFile()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testFileStatus",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testFileStatus()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testCreatedFileIsImmediatelyVisible",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testCreatedFileIsImmediatelyVisible()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testCreatedFileIsVisibleOnFlush",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testCreatedFileIsVisibleOnFlush()\n{\r\n    Assume.assumeTrue(\"unsupport\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    Configuration conf = new Configuration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    String fileSystem = conf.get(OBSTestConstants.TEST_FS_OBS_NAME);\r\n    if (fileSystem == null || fileSystem.trim().length() == 0) {\r\n        throw new Exception(\"Default file system not configured.\");\r\n    }\r\n    URI uri = new URI(fileSystem);\r\n    FileSystem fs = OBSTestUtils.createTestFileSystem(conf);\r\n    fc = FileContext.getFileContext(new DelegateToFileSystem(uri, fs, conf, fs.getScheme(), false) {\r\n    }, conf);\r\n    super.setUp();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "getScheme",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "String getScheme()\n{\r\n    return \"obs\";\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "getTestPath",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Path getTestPath()\n{\r\n    return OBSTestUtils.createTestPath(super.getTestPath());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "isContractTestEnabled",
  "errType" : null,
  "containingMethodsNum" : 3,
  "sourceCodeText" : "boolean isContractTestEnabled()\n{\r\n    Configuration conf = null;\r\n    boolean isContractTestEnabled = true;\r\n    if (conf == null) {\r\n        conf = getConfiguration();\r\n    }\r\n    String fileSystem = conf.get(OBSTestConstants.TEST_FS_OBS_NAME);\r\n    if (fileSystem == null || fileSystem.trim().length() == 0) {\r\n        isContractTestEnabled = false;\r\n    }\r\n    return isContractTestEnabled;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "getConfiguration",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "Configuration getConfiguration()\n{\r\n    Configuration newConf = new Configuration();\r\n    newConf.addResource(CONTRACT_XML);\r\n    return newConf;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testRenameFileBeingAppended",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testRenameFileBeingAppended()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 7,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    Configuration conf = OBSContract.getConfiguration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    String fileSystem = conf.get(OBSTestConstants.TEST_FS_OBS_NAME);\r\n    if (fileSystem == null || fileSystem.trim().length() == 0) {\r\n        throw new Exception(\"Default file system not configured.\");\r\n    }\r\n    URI uri = new URI(fileSystem);\r\n    FileSystem fs = OBSTestUtils.createTestFileSystem(conf);\r\n    if (fc == null) {\r\n        this.fc = FileContext.getFileContext(new DelegateToFileSystem(uri, fs, conf, fs.getScheme(), false) {\r\n        }, conf);\r\n    }\r\n    super.setUp();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createFileContextHelper",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "FileContextTestHelper createFileContextHelper()\n{\r\n    return new FileContextTestHelper(UUID.randomUUID().toString());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "createContract",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "AbstractFSContract createContract(final Configuration conf)\n{\r\n    return new OBSContract(conf);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "skipTestCheck",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void skipTestCheck()\n{\r\n    Assume.assumeTrue(OBSContract.isContractTestEnabled());\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "setUp",
  "errType" : null,
  "containingMethodsNum" : 6,
  "sourceCodeText" : "void setUp() throws Exception\n{\r\n    Configuration conf = new Configuration();\r\n    conf.addResource(OBSContract.CONTRACT_XML);\r\n    String fileSystem = conf.get(OBSTestConstants.TEST_FS_OBS_NAME);\r\n    if (fileSystem == null || fileSystem.trim().length() == 0) {\r\n        throw new Exception(\"Default file system not configured.\");\r\n    }\r\n    URI uri = new URI(fileSystem);\r\n    FileSystem fs = OBSTestUtils.createTestFileSystem(conf);\r\n    fc = FileContext.getFileContext(new DelegateToFileSystem(uri, fs, conf, fs.getScheme(), false) {\r\n    }, conf);\r\n    super.setUp();\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : true,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "listCorruptedBlocksSupported",
  "errType" : null,
  "containingMethodsNum" : 0,
  "sourceCodeText" : "boolean listCorruptedBlocksSupported()\n{\r\n    return false;\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testSetVerifyChecksum",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testSetVerifyChecksum()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
}, {
  "directory" : "E:\\MyPaper\\hadoop\\hadoop-cloud-storage-project\\hadoop-huaweicloud\\src\\test\\java\\org\\apache\\hadoop\\fs\\obs",
  "methodName" : "testMkdirsFailsForSubdirectoryOfExistingFile",
  "errType" : null,
  "containingMethodsNum" : 1,
  "sourceCodeText" : "void testMkdirsFailsForSubdirectoryOfExistingFile()\n{\r\n    Assume.assumeTrue(\"unsupport.\", false);\r\n}\n",
  "settingFlag" : false,
  "hasThrow" : false,
  "returnSpecialValue" : false,
  "tryCatchBlockNum" : 0,
  "logged" : false
} ]